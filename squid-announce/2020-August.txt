From squid3 at treenet.co.nz  Sun Aug 23 08:16:59 2020
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Sun, 23 Aug 2020 20:16:59 +1200
Subject: [squid-announce] Squid 4.13 is available
Message-ID: <244d24d9-b255-3c69-9178-643385b57c11@treenet.co.nz>

The Squid HTTP Proxy team is very pleased to announce the availability
of the Squid-4.13 release!


This release is a security release resolving several issues found in
the prior Squid releases.


The major changes to be aware of:

 * SQUID-2020:8 HTTP(S) Request Splitting
   (CVE-2020-15811)

This problem is serious because it allows any client, including
browser scripts, to bypass local security and poison the browser
cache and any downstream caches with content from an arbitrary
source.

See the advisory for patches:
 <https://github.com/squid-cache/squid/security/advisories/GHSA-c7p8-xqhm-49wv>


 * SQUID-2020:9 Denial of Service processing Cache Digest Response
   (CVE pending allocation)

This problem allows a trusted peer to deliver to perform Denial
of Service by consuming all available CPU cycles on the machine
running Squid when handling a crafted Cache Digest response
message.

This attack is limited to Squid using cache_peer with cache
digests feature.

See the advisory for patches:
 <https://github.com/squid-cache/squid/security/advisories/GHSA-vvj7-xjgq-g2jg>


 * SQUID-2020:10 HTTP(S) Request Smuggling
   (CVE-2020-15810)

This problem is serious because it allows any client, including
browser scripts, to bypass local security and poison the proxy
cache and any downstream caches with content from an arbitrary
source.


See the advisory for patches:
 <https://github.com/squid-cache/squid/security/advisories/GHSA-3365-q9qx-f98m>


 * Bug 5051: Some collapsed revalidation responses never expire

This bug appears as a 4xx or 5xx status response becoming the only
response delivered by Squid to a URL when Collapsed Forwarding
feature is used.

It primarily affects Squid which are caching the 4xx/5xx status
object since Bug 5030 fix in Squid-4.11. But may have been
occurring for short times on any proxy with Collapsed Forwarding.



 * SSL-Bump: Support parsing GREASEd (and future) TLS handshakes

Chrome Browser intentionally sends random garbage values in the
TLS handshake to force TLS implementations to cope with future TLS
extensions cleanly. The changes in Squid-4.12 to disable TLS/1.3
caused our parser to be extra strict and reject this TLS garbage.

This release adds explicit support for Chrome, or any other TLS
agent performing these "GREASE" behaviours.


 * Honor on_unsupported_protocol for intercepted https_port

This behaviour was one of the intended use-cases for unsupported
protocol handling, but somehow was not enabled earlier.

Squid should now be able to perform the on_unsupported_protocol
selected action for any traffic handled by SSL-Bump.


  All users of Squid are urged to upgrade as soon as possible.


See the ChangeLog for the full list of changes in this and earlier
releases.

Please refer to the release notes at
http://www.squid-cache.org/Versions/v4/RELEASENOTES.html
when you are ready to make the switch to Squid-4

This new release can be downloaded from our HTTP or FTP servers

  http://www.squid-cache.org/Versions/v4/
  ftp://ftp.squid-cache.org/pub/squid/
  ftp://ftp.squid-cache.org/pub/archive/4/

or the mirrors. For a list of mirror sites see

  http://www.squid-cache.org/Download/http-mirrors.html
  http://www.squid-cache.org/Download/mirrors.html

If you encounter any issues with this release please file a bug report.
  http://bugs.squid-cache.org/


Amos Jeffries

From squid3 at treenet.co.nz  Sun Aug 23 08:17:14 2020
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Sun, 23 Aug 2020 20:17:14 +1200
Subject: [squid-announce] Squid 5.0.4 beta is available
Message-ID: <b61e7f07-4e2a-e165-adf1-3e166e28cccf@treenet.co.nz>

The Squid HTTP Proxy team is very pleased to announce the availability
of the Squid-5.0.4 beta release!


This release is a security and feature update release resolving
several issues found in the prior Squid releases.


The major changes to be aware of:

 * SQUID-2020:8 HTTP(S) Request Splitting
   (CVE-2020-15811)

This problem is serious because it allows any client, including
browser scripts, to bypass local security and poison the browser
cache and any downstream caches with content from an arbitrary
source.

See the advisory for patches:
 <https://github.com/squid-cache/squid/security/advisories/GHSA-c7p8-xqhm-49wv>


 * SQUID-2020:9 Denial of Service processing Cache Digest Response
   (CVE pending allocation)

This problem allows a trusted peer to deliver to perform Denial
of Service by consuming all available CPU cycles on the machine
running Squid when handling a crafted Cache Digest response
message.

This attack is limited to Squid using cache_peer with cache
digests feature.

See the advisory for patches:
 <https://github.com/squid-cache/squid/security/advisories/GHSA-vvj7-xjgq-g2jg>


 * SQUID-2020:10 HTTP(S) Request Smuggling
   (CVE-2020-15810)

This problem is serious because it allows any client, including
browser scripts, to bypass local security and poison the proxy
cache and any downstream caches with content from an arbitrary
source.


See the advisory for patches:
 <https://github.com/squid-cache/squid/security/advisories/GHSA-3365-q9qx-f98m>


 * Add http_port sslflags=CONDITIONAL_AUTH

This release extends the client certificate features to allow
optional certificate authentication.

The existing DELAYED_AUTH flag would delay the certificate request,
then reject all clients who cannot present a valid certificate
on request.

With CONDITIONAL_AUTH Squid will just request and validate SSL
client certificates. Any rejection or use of those certificates
is left to other configuration settings.


 * Improved CONNECT tunnel handling

This release contains several small but important changes to how
Squid handles CONNECT tunnels opened with servers. Particularly
in cases of server TCP connection failure and switching between
upstream peers.

A lot of annoying on_unsupported_protocol and HTTPS forwarding
behaviour issues with previous releases should be resolved by
these changes.



  All users of Squid-5 are urged to upgrade as soon as possible.

  All users of Squid-4 and older are encouraged to plan for upgrade.


See the ChangeLog for the full list of changes in this and earlier
releases.

Please refer to the release notes at
http://www.squid-cache.org/Versions/v5/RELEASENOTES.html
when you are ready to make the switch to Squid-5

This new release can be downloaded from our HTTP or FTP servers

  http://www.squid-cache.org/Versions/v5/
  ftp://ftp.squid-cache.org/pub/squid/
  ftp://ftp.squid-cache.org/pub/archive/5/

or the mirrors. For a list of mirror sites see

  http://www.squid-cache.org/Download/http-mirrors.html
  http://www.squid-cache.org/Download/mirrors.html

If you encounter any issues with this release please file a bug report.
  http://bugs.squid-cache.org/


Amos Jeffries

From squid3 at treenet.co.nz  Sun Aug 23 08:17:24 2020
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Sun, 23 Aug 2020 20:17:24 +1200
Subject: [squid-announce] [ADVISORY] SQUID-2020:8 HTTP(S) Request Splitting
Message-ID: <4678bb72-8d7c-6329-e338-b41064a3f137@treenet.co.nz>

__________________________________________________________________

Squid Proxy Cache Security Update Advisory SQUID-2020:8
__________________________________________________________________

Advisory ID:       | SQUID-2020:8
Date:              | August 23, 2020
Summary:           | HTTP(S) Request Splitting.
Affected versions: | Squid 2.7 -> 2.7.STABLE9
                   | Squid 3.x -> 3.5.28
                   | Squid 4.x -> 4.12
                   | Squid 5.x -> 5.0.3
Fixed in version:  | Squid 4.13, 5.0.4
__________________________________________________________________

  <http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15811>
__________________________________________________________________

Problem Description:

 Due to incorrect data validation Squid is vulnerable to HTTP
 Request Splitting attacks against HTTP and HTTPS traffic. This
 leads to cache poisoning.

__________________________________________________________________

Severity:

 This problem is serious because it allows any client, including
 browser scripts, to bypass local security and poison the browser
 cache and any downstream caches with content from an arbitrary
 source.

CVSS Score of 9.3
<https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:N/E:F/RL:O/RC:C/CR:H/IR:H/AR:X/MAV:N/MAC:L/MPR:L/MUI:N/MS:C/MC:H/MI:H/MA:N&version=3.1>

__________________________________________________________________

Updated Packages:

This bug is fixed by Squid versions 4.13 and 5.0.4.

 In addition, patches addressing this problem for the stable
 releases can be found in our patch archives:

Squid 4:
 <http://www.squid-cache.org/Versions/v4/changesets/SQUID-2020_8.patch>

 If you are using a prepackaged version of Squid then please refer
 to the package vendor for availability information on updated
 packages.

__________________________________________________________________

Determining if your version is vulnerable:

 All Squid configured with "relaxed_header_parser off" are not vulnerable.

 All Squid-3.x up to and including 3.5.28 with
 relaxed_header_parser configured to "on" or "warn" are
 vulnerable.

 All Squid-3.x up to and including 3.5.28 without
 relaxed_header_parser configured are vulnerable.

 All Squid-4.x up to and including 4.12 with relaxed_header_parser
 configured to "on" or "warn" are vulnerable.

 All Squid-4.x up to and including 4.12 without
 relaxed_header_parser configured are vulnerable.

 All Squid-5.x up to and including 5.0.3 with
 relaxed_header_parser configured to "on" or "warn" are
 vulnerable.

 All Squid-5.x up to and including 5.0.3 without
 relaxed_header_parser configured are vulnerable.

__________________________________________________________________

Workaround:

 Disable the relaxed HTTP parser in squid.conf:

    relaxed_header_parser off

 Note, traffic which does not correctly obey HTTP specifications
 will be rejected instead of converted to standards compliance.

__________________________________________________________________

Contact details for the Squid project:

 For installation / upgrade support on binary packaged versions
 of Squid: Your first point of contact should be your binary
 package vendor.

 If you install and build Squid from the original Squid sources
 then the <squid-users at lists.squid-cache.org> mailing list is your
 primary support point. For subscription details see
 <http://www.squid-cache.org/Support/mailing-lists.html>.

 For reporting of non-security bugs in the latest STABLE release
 the squid bugzilla database should be used
 <http://bugs.squid-cache.org/>.

 For reporting of security sensitive bugs send an email to the
 <squid-bugs at lists.squid-cache.org> mailing list. It's a closed
 list (though anyone can post) and security related bug reports
 are treated in confidence until the impact has been established.

__________________________________________________________________

Credits:

 This vulnerability was discovered by Regis Leroy (regilero
 from Makina Corpus).

 Fixed by Amos Jeffries of Treehouse Networks Ltd.

__________________________________________________________________

Revision history:

 2019-07-24 11:52:51 UTC Initial Report
 2020-01-09 22:07:44 UTC Additional vectors discovered
__________________________________________________________________
END

From squid3 at treenet.co.nz  Sun Aug 23 08:17:38 2020
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Sun, 23 Aug 2020 20:17:38 +1200
Subject: [squid-announce] [ADVISORY] SQUID-2020:9 Denial of Service
 processing Cache Digest Response
Message-ID: <bebcbc56-ad06-704a-6f1f-171d978004b5@treenet.co.nz>

__________________________________________________________________

Squid Proxy Cache Security Update Advisory SQUID-2020:9
__________________________________________________________________

Advisory ID:       | SQUID-2020:9
Date:              | August 23, 2020
Summary:           | Denial of Service
                   | processing Cache Digest Response
Affected versions: | Squid 3.x -> 3.5.28
                   | Squid 4.x -> 4.12
                   | Squid 5.x -> 5.0.3
Fixed in version:  | Squid 4.13 and 5.0.4
__________________________________________________________________

    CVE Assignment pending
__________________________________________________________________

Problem Description:

 Due to Improper Input Validation Squid is vulnerable to a Denial
 of Service attack against the machine operating Squid.

__________________________________________________________________

Severity:

 This problem allows a trusted peer to deliver to perform Denial
 of Service by consuming all available CPU cycles on the machine
 running Squid when handling a crafted Cache Digest response
 message.

 This attack is limited to Squid using cache_peer with cache
 digests feature.

CVSS Score of 9.5
<https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H/E:H/RL:O/RC:C/CR:X/IR:X/AR:H/MAV:N/MAC:L/MPR:X/MUI:N/MS:C/MC:N/MI:N/MA:H&version=3.1>

__________________________________________________________________

Updated Packages:

This bug is fixed by Squid versions 4.13 and 5.0.4.

 In addition, patches addressing this problem for the stable
 releases can be found in our patch archives:

Squid 4:
 <http://www.squid-cache.org/Versions/v4/changesets/SQUID-2020_9.patch>

 If you are using a prepackaged version of Squid then please refer
 to the package vendor for availability information on updated
 packages.

__________________________________________________________________

Determining if your version is vulnerable:

 All Squid built using --disable-cache-digests are not vulnerable.

 All Squid without cache_peer directives configured are not
 vulnerable.

 All Squid-3.x up to and including 3.5.28 using cache_peer
 directives with no-digest option configured are not vulnerable.

 All Squid-3.x up to and including 3.5.28 using cache_peer
 directives without the no-digest option configured are
 vulnerable.

 All Squid-4.x up to and including 4.12 using cache_peer
 directives with no-digest option configured are not vulnerable.

 All Squid-4.x up to and including 4.12 using cache_peer
 directives without the no-digest option configured are
 vulnerable.

 All Squid-5.x up to and including 5.0.3 using cache_peer
 directives with no-digest option configured are not vulnerable.

 All Squid-5.x up to and including 5.0.3 using cache_peer
 directives without the no-digest option configured are
 vulnerable.

__________________________________________________________________

Workaround:

Either,

 Add the no-digest option to all cache_peer lines in squid.conf

Or,

 Build Squid with --disable-cache-digests

__________________________________________________________________

Contact details for the Squid project:

 For installation / upgrade support on binary packaged versions
 of Squid: Your first point of contact should be your binary
 package vendor.

 If you install and build Squid from the original Squid sources
 then the <squid-users at lists.squid-cache.org> mailing list is your
 primary support point. For subscription details see
 <http://www.squid-cache.org/Support/mailing-lists.html>.

 For reporting of non-security bugs in the latest STABLE release
 the squid bugzilla database should be used
 <http://bugs.squid-cache.org/>.

 For reporting of security sensitive bugs send an email to the
 <squid-bugs at lists.squid-cache.org> mailing list. It's a closed
 list (though anyone can post) and security related bug reports
 are treated in confidence until the impact has been established.

__________________________________________________________________

Credits:

 This vulnerability was discovered by Lubos Uhliarik of RedHat.

 Fixed by Eduard Bagdasaryan (The Measurement Factory).

__________________________________________________________________

Revision history:

 2019-09-30 17:12:18 UTC Initial Report
 2020-07-29 20:51:58 UTC Fix committed
__________________________________________________________________
END

From squid3 at treenet.co.nz  Sun Aug 23 08:17:47 2020
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Sun, 23 Aug 2020 20:17:47 +1200
Subject: [squid-announce] [ADVISORY] SQUID-2020:10 HTTP(S) Request Smuggling
Message-ID: <6615617b-63ce-b25b-ae73-aea862a8ca15@treenet.co.nz>

__________________________________________________________________

Squid Proxy Cache Security Update Advisory SQUID-2020:10
__________________________________________________________________

Advisory ID:       | SQUID-2020:10
Date:              | August 1, 2020
Summary:           | HTTP(S) Request Smuggling.
Affected versions: | Squid 2.5 -> 2.7.STABLE9
                   | Squid 3.x -> 3.5.28
                   | Squid 4.x -> 4.12
                   | Squid 5.x -> 5.0.3
Fixed in version:  | Squid 4.13, 5.0.4
__________________________________________________________________

  <http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15810>
__________________________________________________________________

Problem Description:

 Due to incorrect data validation Squid is vulnerable to HTTP
 Request Smuggling attacks against HTTP and HTTPS traffic. This
 leads to cache poisoning.

__________________________________________________________________

Severity:

 This problem is serious because it allows any client, including
 browser scripts, to bypass local security and poison the proxy
 cache and any downstream caches with content from an arbitrary
 source.

CVSS Score of 9.3
<https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:N/E:F/RL:O/RC:C/CR:H/IR:H/AR:X/MAV:N/MAC:L/MPR:L/MUI:N/MS:C/MC:H/MI:H/MA:N&version=3.1>

__________________________________________________________________

Updated Packages:

This bug is fixed by Squid versions 4.13 and 5.0.4.

 In addition, patches addressing this problem for the stable
 releases can be found in our patch archives:

Squid 4:
 <http://www.squid-cache.org/Versions/v4/changesets/SQUID-2020_10.patch>

 If you are using a prepackaged version of Squid then please refer
 to the package vendor for availability information on updated
 packages.

__________________________________________________________________

Determining if your version is vulnerable:

 All Squid with relaxed_header_parser configured "off" are not
 vulnerable.

 All Squid-3.x up to and including 3.5.28 with
 relaxed_header_parser configured to "on" or "warn" are
 vulnerable.

 All Squid-3.x up to and including 3.5.28 without
 relaxed_header_parser configured are vulnerable.

 All Squid-4.x up to and including 4.12 with relaxed_header_parser
 configured to "on" or "warn" are vulnerable.

 All Squid-4.x up to and including 4.12 without
 relaxed_header_parser configured are vulnerable.

 All Squid-5.x up to and including 5.0.3 with
 relaxed_header_parser configured to "on" or "warn" are
 vulnerable.

 All Squid-5.x up to and including 5.0.3 without
 relaxed_header_parser configured are vulnerable.

__________________________________________________________________

Workaround:

 Disable the relaxed HTTP parser in squid.conf:

    relaxed_header_parser off

 Note, traffic which does not correctly obey HTTP specifications
 will be rejected instead of converted to standards compliance.

__________________________________________________________________

Contact details for the Squid project:

 For installation / upgrade support on binary packaged versions
 of Squid: Your first point of contact should be your binary
 package vendor.

 If you install and build Squid from the original Squid sources
 then the <squid-users at lists.squid-cache.org> mailing list is your
 primary support point. For subscription details see
 <http://www.squid-cache.org/Support/mailing-lists.html>.

 For reporting of non-security bugs in the latest STABLE release
 the squid bugzilla database should be used
 <http://bugs.squid-cache.org/>.

 For reporting of security sensitive bugs send an email to the
 <squid-bugs at lists.squid-cache.org> mailing list. It's a closed
 list (though anyone can post) and security related bug reports
 are treated in confidence until the impact has been established.

__________________________________________________________________

Credits:

 This vulnerability was discovered by Amit Klein of Safebreach.

 Fixed by Amos Jeffries of Treehouse Networks Ltd.

__________________________________________________________________

Revision history:

 2020-05-11 08:21:58 UTC Initial Report
 2020-07-17 17:11:50 UTC CVE Allocated
__________________________________________________________________
END

