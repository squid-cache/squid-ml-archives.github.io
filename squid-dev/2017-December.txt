From mika.ristimaki at gmail.com  Mon Dec 18 07:34:36 2017
From: mika.ristimaki at gmail.com (mika ristimaki)
Date: Mon, 18 Dec 2017 09:34:36 +0200
Subject: [squid-dev] Compiling from repository checkout
Message-ID: <e25fa3ec-dd4b-4ab5-8cdc-a501725ca1cd@Spark>

Hi all,

I noticed that the source code distributions (http://www.squid-cache.org/Versions/v4/) and the repository (https://github.com/squid-cache/squid) differ in a sense that the tar.gz packages include the configure script and Makefiles.

I am trying to replicate it, and I it looks to me that the configure scripts, etc., are created by running ./bootstrap.sh. But looking at the bootstrap.sh it has this

# On MAC OS X, GNU libtool is named 'glibtool':
if [ `uname -s 2>/dev/null` = 'Darwin' ]
then
  LIBTOOL_BIN="glibtool"
else
  LIBTOOL_BIN="libtool”
fi

So it is platform dependant.

So my question is how platform independent configure scripts are created if bootstrap.sh is platform dependant? Or what I am missing here?

-Mika

P.S. Sorry if this is a duplicate but it seems like the first one didn’t go through
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20171218/9e2b655a/attachment.html>

From gkinkie at gmail.com  Mon Dec 18 08:44:26 2017
From: gkinkie at gmail.com (Kinkie)
Date: Mon, 18 Dec 2017 08:44:26 +0000
Subject: [squid-dev] Compiling from repository checkout
In-Reply-To: <e25fa3ec-dd4b-4ab5-8cdc-a501725ca1cd@Spark>
References: <e25fa3ec-dd4b-4ab5-8cdc-a501725ca1cd@Spark>
Message-ID: <CA+Y8hcMocT_c1+0=OV8BNgXkBzXxhgZYcCtXx0SmCPKXEj6Hyg@mail.gmail.com>

On Mon, Dec 18, 2017 at 7:34 AM, mika ristimaki
<mika.ristimaki at gmail.com> wrote:
> Hi all,

Hello Mika!

> I noticed that the source code distributions
> (http://www.squid-cache.org/Versions/v4/) and the repository
> (https://github.com/squid-cache/squid) differ in a sense that the tar.gz
> packages include the configure script and Makefiles.
>
>
> I am trying to replicate it, and I it looks to me that the configure
> scripts, etc., are created by running ./bootstrap.sh. But looking at the
> bootstrap.sh it has this
>
>
> # On MAC OS X, GNU libtool is named 'glibtool':
>
> if [ `uname -s 2>/dev/null` = 'Darwin' ]
>
> then
>
>   LIBTOOL_BIN="glibtool"
>
> else
>
>   LIBTOOL_BIN="libtool”
>
> fi
>
>
> So it is platform dependant.

Yes.

> So my question is how platform independent configure scripts are created if
> bootstrap.sh is platform dependant? Or what I am missing here?

Exactly through bootstrap.sh :)
The full build process for Squid-from-source is
$ bootstrap.sh && ./configure && make

This is because bootstrap builds auto-generated code (e.g. configure)
which makes no sense to have in our source repository.
At the same time, building from source requires additional tools (e.g.
autoconf, automake, libtoolize) which may not be present on an user's
build system, so these generated bits are included in the distribution
tarball.


-- 
    Francesco

From mika.ristimaki at gmail.com  Mon Dec 18 14:18:00 2017
From: mika.ristimaki at gmail.com (mika ristimaki)
Date: Mon, 18 Dec 2017 16:18:00 +0200
Subject: [squid-dev] Compiling from repository checkout
In-Reply-To: <CA+Y8hcMocT_c1+0=OV8BNgXkBzXxhgZYcCtXx0SmCPKXEj6Hyg@mail.gmail.com>
References: <e25fa3ec-dd4b-4ab5-8cdc-a501725ca1cd@Spark>
 <CA+Y8hcMocT_c1+0=OV8BNgXkBzXxhgZYcCtXx0SmCPKXEj6Hyg@mail.gmail.com>
Message-ID: <fcc15e24-40db-468c-9c77-94fb18d50e76@Spark>


On 18 Dec 2017, 10.44 +0200, Kinkie <gkinkie at gmail.com>, wrote:
> On Mon, Dec 18, 2017 at 7:34 AM, mika ristimaki
> <mika.ristimaki at gmail.com> wrote:
>
> > So my question is how platform independent configure scripts are created if
> > bootstrap.sh is platform dependant? Or what I am missing here?
>
> Exactly through bootstrap.sh :)
> The full build process for Squid-from-source is
> $ bootstrap.sh && ./configure && make
>
> This is because bootstrap builds auto-generated code (e.g. configure)
> which makes no sense to have in our source repository.
> At the same time, building from source requires additional tools (e.g.
> autoconf, automake, libtoolize) which may not be present on an user's
> build system, so these generated bits are included in the distribution
> tarball.


Thanks, got it. One more question. Do you know why bootstrap.sh verifies that glibtool is installed in OS X. Cause I tried this

brew install libtool
./bootstrap.sh
brew uninstall libtool
./configure && make

And squid builds (and runs) just fine. But If I do

brew uninstall libtool
./bootstrap.sh

Then bootstrapping fails saying glibtool is not installed.

The reason I am asking is that if I don’t uninstall glibtool, the final binary will have dependency to dynamic glibtool lib.  The glibtool is installed to Homebrew default path (/usr/local/..) and doesn’t necessarily exists in other OS X installations. So if I want to give the binary I build to my coworker it may not work in his machine unless he installs glibtool first through homebrew.

-Mika

>
>
> --
> Francesco
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20171218/f1aefd2c/attachment.html>

From amajer at suse.de  Mon Dec 18 15:48:26 2017
From: amajer at suse.de (Adam Majer)
Date: Mon, 18 Dec 2017 16:48:26 +0100
Subject: [squid-dev] OpenSSL 1.1 support
Message-ID: <f72b2f64-04c2-48c7-4ff8-3983ad227b96@suse.de>

Hi,

Is there a plan of supporting OpenSSL 1.1 in squid 3.5.x branch?

- Adam

From squid3 at treenet.co.nz  Mon Dec 18 17:17:19 2017
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Tue, 19 Dec 2017 06:17:19 +1300
Subject: [squid-dev] OpenSSL 1.1 support
In-Reply-To: <f72b2f64-04c2-48c7-4ff8-3983ad227b96@suse.de>
References: <f72b2f64-04c2-48c7-4ff8-3983ad227b96@suse.de>
Message-ID: <098fa861-d282-ad47-d1a5-a7a533729a79@treenet.co.nz>

On 19/12/17 04:48, Adam Majer wrote:
> Hi,
> 
> Is there a plan of supporting OpenSSL 1.1 in squid 3.5.x branch?
> 

Not currently. Some of the config changes the library imposes may be a 
bit surprising for a stable release.


If you are self-building to get SSL-Bump support I recommend trying to 
use Squid-4 anyway. It should be stable enough for most installations 
and has better SSL-Bump and related behaviours.

Amos

From amajer at suse.de  Tue Dec 19 09:04:48 2017
From: amajer at suse.de (Adam Majer)
Date: Tue, 19 Dec 2017 10:04:48 +0100
Subject: [squid-dev] OpenSSL 1.1 support
In-Reply-To: <098fa861-d282-ad47-d1a5-a7a533729a79@treenet.co.nz>
References: <f72b2f64-04c2-48c7-4ff8-3983ad227b96@suse.de>
 <098fa861-d282-ad47-d1a5-a7a533729a79@treenet.co.nz>
Message-ID: <c7e51024-b678-188e-2243-6b583bcaa3b1@suse.de>

On 12/18/2017 06:17 PM, Amos Jeffries wrote:
> On 19/12/17 04:48, Adam Majer wrote:
>> Hi,
>>
>> Is there a plan of supporting OpenSSL 1.1 in squid 3.5.x branch?
>>
> 
> Not currently. Some of the config changes the library imposes may be a
> bit surprising for a stable release.
> 
> 
> If you are self-building to get SSL-Bump support I recommend trying to
> use Squid-4 anyway. It should be stable enough for most installations
> and has better SSL-Bump and related behaviours.

Actually, the reason I'm asking is OpenSUSE Tumbleweed has migrated away
from OpenSSL 1.0 to 1.1. Is there a current timeline when 4.x branch
will become stable?

Is there a list of tasks that need to be fixed for 4.x branch to be
considered stable?

- Adam

From squid3 at treenet.co.nz  Tue Dec 19 11:49:33 2017
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Wed, 20 Dec 2017 00:49:33 +1300
Subject: [squid-dev] OpenSSL 1.1 support
In-Reply-To: <c7e51024-b678-188e-2243-6b583bcaa3b1@suse.de>
References: <f72b2f64-04c2-48c7-4ff8-3983ad227b96@suse.de>
 <098fa861-d282-ad47-d1a5-a7a533729a79@treenet.co.nz>
 <c7e51024-b678-188e-2243-6b583bcaa3b1@suse.de>
Message-ID: <1894a089-83df-38ce-1065-c7534078d119@treenet.co.nz>

On 19/12/17 22:04, Adam Majer wrote:
> On 12/18/2017 06:17 PM, Amos Jeffries wrote:
>> On 19/12/17 04:48, Adam Majer wrote:
>>> Hi,
>>>
>>> Is there a plan of supporting OpenSSL 1.1 in squid 3.5.x branch?
>>>
>>
>> Not currently. Some of the config changes the library imposes may be a
>> bit surprising for a stable release.
>>
>>
>> If you are self-building to get SSL-Bump support I recommend trying to
>> use Squid-4 anyway. It should be stable enough for most installations
>> and has better SSL-Bump and related behaviours.
> 
> Actually, the reason I'm asking is OpenSUSE Tumbleweed has migrated away
> from OpenSSL 1.0 to 1.1. Is there a current timeline when 4.x branch
> will become stable?

6-12 months ago was the plan. :-(


> 
> Is there a list of tasks that need to be fixed for 4.x branch to be
> considered stable?

<https://wiki.squid-cache.org/ReleaseProcess#General_Release_Process_Guidelines>

We are currently stuck at #3 in that process with a few major bugs 
preventing reaching #4.
(<https://bugs.squid-cache.org/query.cgi?bug_severity=blocker&bug_severity=critical&bug_severity=major&bug_status=UNCONFIRMED&bug_status=MOREINFO&bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED&component=Documentation&component=helpers%3A%20auth_param&component=helpers%3A%20external_acl_type&component=helpers%3A%20log_daemon&component=helpers%3A%20Security&component=helpers%3A%20storeid_rewrite&component=helpers%3A%20url_rewrite&component=New%20Feature%20Request&component=other&component=other%3A%20Content%20Adaptation&component=other%3A%20Edge%20Side%20Includes%20%28ESI%29&component=other%3A%20SMP%20awareness&component=other%3A%20SSL-Bump&component=Test%20Suite&component=tools%3A%20cachemgr.cgi&component=tools%3A%20purge&component=tools%3A%20squidclient&product=Squid&query_format=advanced&version=4&known_name=Major%204.x>)

Some of those already have workarounds in v4 and so are planned to 
ignore for purposes of declaring stability. But a full fix for any of 
them (and any other bug) is of course very welcome.

Next release on my calendar is ~6th January. So re-evaluation of all the 
pieces will be happening across the week prior.

Amos

From gkinkie at gmail.com  Sun Dec 24 15:00:36 2017
From: gkinkie at gmail.com (Kinkie)
Date: Sun, 24 Dec 2017 15:00:36 +0000
Subject: [squid-dev] Compiling from repository checkout
In-Reply-To: <fcc15e24-40db-468c-9c77-94fb18d50e76@Spark>
References: <e25fa3ec-dd4b-4ab5-8cdc-a501725ca1cd@Spark>
 <CA+Y8hcMocT_c1+0=OV8BNgXkBzXxhgZYcCtXx0SmCPKXEj6Hyg@mail.gmail.com>
 <fcc15e24-40db-468c-9c77-94fb18d50e76@Spark>
Message-ID: <CA+Y8hcPu5bsa3b-bj5B1SS7tE-NnFNXADzp-7ssfJTWgoVVuvA@mail.gmail.com>

Hi Mika,
  sorry for the delayed answer.

> Thanks, got it. One more question. Do you know why bootstrap.sh verifies
> that glibtool is installed in OS X. Cause I tried this
>
> brew install libtool
> ./bootstrap.sh
> brew uninstall libtool
> ./configure && make
>
> And squid builds (and runs) just fine. But If I do
>
> brew uninstall libtool
> ./bootstrap.sh
>
> Then bootstrapping fails saying glibtool is not installed.

What MacOS calls 'libtool' is an entirely different beast than GNU
libtool. Just try 'man libtool' to see what I mean.
So unless you have glibtool installed, well, it is't.

> The reason I am asking is that if I don’t uninstall glibtool, the final
> binary will have dependency to dynamic glibtool lib.  The glibtool is
> installed to Homebrew default path (/usr/local/..) and doesn’t necessarily
> exists in other OS X installations. So if I want to give the binary I build
> to my coworker it may not work in his machine unless he installs glibtool
> first through homebrew.

If you want to have a fully portable binary I suspect that the only
solution is to link it statically, sorry.
And yes, that's unavoidable, sadly: libtool is a required component to
build squid.


-- 
    Francesco

From vovohelo at gmail.com  Tue Dec 19 13:11:47 2017
From: vovohelo at gmail.com (Daniel Berredo)
Date: Tue, 19 Dec 2017 13:11:47 -0000
Subject: [squid-dev] Introduction
Message-ID: <CAAqh3JKyO4T1+VpK5RSSVFxY-Cf8-5z=s=rZp2-m9-eSg6zqGg@mail.gmail.com>

Hello all,

My name is Daniel Santos and I am a DevOps in Brazil. I am working on a
Hotspot Captive Portal project using Squid and need to be to able to evict
an user from the Auth Cache before its ttl expired.
What would be the best way to start on a proper PR? Is there any dev
guidelines I should be aware of?

I am thinking about adding a new method to the CredentialsCache class
("evict", for example) and somehow make squid able to respond to a
variation of the "PURGE" method. Than I would be able to use squid client
to evict users from Auth Cache.

Is there anyone that could give me some directions on how to do this?

Thanks in advance,
Daniel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20171219/af9bc01d/attachment.html>

From vovohelo at gmail.com  Thu Dec 21 16:38:10 2017
From: vovohelo at gmail.com (Daniel Berredo)
Date: Thu, 21 Dec 2017 16:38:10 -0000
Subject: [squid-dev] Make external acl cache availble through a public
	interface
Message-ID: <CAAqh3JKpZo9O0w=0G7gwcJS1ry7Y4peyTxKe9QGi-=tSpOm8uA@mail.gmail.com>

Hello all,

My name is Daniel Santos and I am a DevOps in Brazil. I am currently
working on a captive portal project and would like to be able to evict
external_acl replies from cache. Could anyone give me some directions on
how to make external_acl.cc funcions available to an external caller?

Thanks in advance,
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20171221/bae58721/attachment.html>

