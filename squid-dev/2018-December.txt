From oagvozd at gmail.com  Mon Dec 24 12:38:12 2018
From: oagvozd at gmail.com (Meridoff)
Date: Mon, 24 Dec 2018 15:38:12 +0300
Subject: [squid-dev] SSL: https_port cert option
Message-ID: <CAFfuDwxdk5vqxn+CmZSnOgeCFjOqKs2HOn=D8iYq7C7YE+F=sQ@mail.gmail.com>

Hello, I need to use my company's certificate as signing certificate in
'cert' argument of http_port/https_port options.

I can generate and use self-signed cert as said in Squid Manuals. All works
fine.

BUT, when I try to use my comanies cert with corrcet RSA private key -
error in squid occures:
FATAL: FATAL: No valid signing SSL certificate configured for HTTPS_port
192.168.1.1:3128

I've debugged some and recongized that

1.*readCertChainAndPrivateKeyFromFiles *() fails when call
X509_check_private_key(cert.get(), pkey.get()):
Warn/Err message: "X509_check_private_key() failed to verify signing cert2.

2.Openssl function  *X509_check_private_key*(cert.get(), pkey.get()) fails
with X509err(X509_F_X509_CHECK_PRIVATE_KEY, X509_R_KEY_VALUES_MISMATCH);

I've checked my cert private key with openssl util - it's OK.

Also my cert (which set in cert= option) is not self-signed and issued by
another cert. Whole cert chain is 3 certificates.

I've tryed to combine all 3 certs in 1 file in corrcet order:

-----BEGIN RSA PRIVATE KEY-----
(Your Private Key: your_domain_name.key)
-----END RSA PRIVATE KEY-----
-----BEGIN CERTIFICATE-----
(Your Primary SSL certificate: your_domain_name.crt)
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
(Your Intermediate certificate: )
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
(Your Root certificate: TrustedRoot.crt)
-----END CERTIFICATE-----

And other combinations too: separate private key from cert file and give it
in key= option.

No success - always the same error.

So questions:
1) How I can use my cert chain as RootCA cert for signing generated servers
certificates ?
2) Why such error occured?
3)May be there is requriment on such cert that it must be self-signed ?

Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20181224/34f79ee4/attachment.html>

From rousskov at measurement-factory.com  Mon Dec 24 18:09:00 2018
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Mon, 24 Dec 2018 11:09:00 -0700
Subject: [squid-dev] SSL: https_port cert option
In-Reply-To: <CAFfuDwxdk5vqxn+CmZSnOgeCFjOqKs2HOn=D8iYq7C7YE+F=sQ@mail.gmail.com>
References: <CAFfuDwxdk5vqxn+CmZSnOgeCFjOqKs2HOn=D8iYq7C7YE+F=sQ@mail.gmail.com>
Message-ID: <948d3cbd-6988-5465-7613-121134837073@measurement-factory.com>

On 12/24/18 5:38 AM, Meridoff wrote:
> Hello, I need to use my company's certificate as signing certificate in
> 'cert' argument of http_port/https_port options.

Since you have mentioned http_port (above) and "generated certificates"
(lower), I assume you are using SslBump.

Is your signing certificate a CA certificate? If not, then you cannot
use it to sign other certificates. SslBump with dynamic certificate
generation requires a CA certificate to sign generated certificates.

CA certificates have a "true" CA basic constraint:

$ openssl x509 -in cert.pem -noout -text | grep -A1 'Basic Constraints'
            X509v3 Basic Constraints:
                CA:TRUE


> when I try to use my comanies cert with corrcet RSA private key -
> error in squid occures:
> FATAL: FATAL: No valid signing SSL certificate configured for HTTPS_port
> 192.168.1.1:3128 <http://192.168.1.1:3128>
> 
> I've debugged some and recongized that
> 
> 1.*readCertChainAndPrivateKeyFromFiles *() fails when call
> X509_check_private_key(cert.get(), pkey.get()):
> Warn/Err message: "X509_check_private_key() failed to verify signing cert2.
> 
> 2.Openssl functionÂ  *X509_check_private_key*(cert.get(), pkey.get())
> fails with X509err(X509_F_X509_CHECK_PRIVATE_KEY,
> X509_R_KEY_VALUES_MISMATCH);

If your signing certificate is a CA certificate, then you may want to
research why OpenSSL thinks that your private key does not match your
signing certificate.


> I've checked my cert private key with openssl util - it's OK.
> 
> Also my cert (which set in cert= option) is not self-signed and issued
> by another cert. Whole cert chain is 3 certificates.
> 
> I've tryed to combine all 3 certs in 1 file in corrcet order:
> 
> -----BEGIN RSA PRIVATE KEY-----
> (Your Private Key: your_domain_name.key)
> -----END RSA PRIVATE KEY-----
> -----BEGIN CERTIFICATE-----
> (Your Primary SSL certificate: your_domain_name.crt)
> -----END CERTIFICATE-----
> -----BEGIN CERTIFICATE-----
> (Your Intermediate certificate: )
> -----END CERTIFICATE-----
> -----BEGIN CERTIFICATE-----
> (Your Root certificate: TrustedRoot.crt)
> -----END CERTIFICATE-----
> 
> 
> And other combinations too: separate private key from cert file and give
> it in key= option.
> 
> No success - always the same error.
> 
> So questions:
> 1) How I can use my cert chain as RootCA cert for signing generated
> servers certificates?

N.B. Do not call a chain "Root". It is misleading because a chain has
both Root and non-Root certificates.

The first step is to make sure that it is a CA certificate.


> 2) Why such error occured?

I do not know, but see above for the first thing to check. You can also
use OpenSSL to sign some new certificate; does that work?


> 3) May be there is requriment on such cert that it must be self-signed ?

No, there is not.


HTH,

Alex.

From eliezer at ngtech.co.il  Sun Dec 30 06:45:10 2018
From: eliezer at ngtech.co.il (Eliezer Croitoru)
Date: Sun, 30 Dec 2018 08:45:10 +0200
Subject: [squid-dev] Securtiy_file_gen in a server format development
Message-ID: <!&!AAAAAAAAAAAuAAAAAAAAAL3wsAcc8JBJkMCbPuiQMGEBAMO2jhD3dRHOtM0AqgC7tuYAAAAAAA4AABAAAAC1bysTSnlkQKZBElmMsLU7AQAAAAA=@ngtech.co.il>

Hey Dev list,

 

For quite some time I was wondering what would a Squid Cluster can use as a
certificates backend.

>From what I understood until now it seems that the current ssl_db directory
structure is simple enough that it might be possible to share it across a
NFS store.

 

Another thing in mind is certificates cleanup and history.

Since squid is being used in couple locations as a security software it
would be good for security admins to be able to have some history logs.

 

I can try to write couple helpers and external services on my free time that
can help with some of these points.

 

Please let me know if my assumptions are or the right track.

 

Thanks,

Eliezer

 

----

Eliezer Croitoru <http://ngtech.co.il/lmgtfy/> 
Linux System Administrator
Mobile: +972-5-28704261
Email: eliezer at ngtech.co.il



 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20181230/d43bd1f4/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 11308 bytes
Desc: not available
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20181230/d43bd1f4/attachment.png>

From rousskov at measurement-factory.com  Sun Dec 30 17:07:39 2018
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Sun, 30 Dec 2018 10:07:39 -0700
Subject: [squid-dev] Securtiy_file_gen in a server format development
In-Reply-To: <!&!AAAAAAAAAAAuAAAAAAAAAL3wsAcc8JBJkMCbPuiQMGEBAMO2jhD3dRHOtM0AqgC7tuYAAAAAAA4AABAAAAC1bysTSnlkQKZBElmMsLU7AQAAAAA=@ngtech.co.il>
References: <!&!AAAAAAAAAAAuAAAAAAAAAL3wsAcc8JBJkMCbPuiQMGEBAMO2jhD3dRHOtM0AqgC7tuYAAAAAAA4AABAAAAC1bysTSnlkQKZBElmMsLU7AQAAAAA=@ngtech.co.il>
Message-ID: <043e54e0-16f8-9507-847e-77b8979af4a3@measurement-factory.com>

On 12/29/18 11:45 PM, Eliezer Croitoru wrote:

> From what I understood until now it seems that the current ssl_db
> directory structure is simple enough that it might be possible to share
> it across a NFS store.

I would expect NFS store to work in environments that support file
locking over NFS. For example, NFS flock(2) does not work with Linux
kernels up to v2.6.11. For the list of environment-specific file locking
system calls used by the certificate generator, see Ssl::Lock::lock().


> Since squid is being used in couple locations as a security software it
> would be good for security admins to be able to have some history logs.

The generated certificate database is just an optimization/cache.
Logging certificate cache operations would probably be as useful/useless
as store.log is for the HTTP cache. It would be good to discuss and
target some specific use cases before designing where and how to log
certificate operations.

Alex.


