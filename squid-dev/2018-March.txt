From squid3 at treenet.co.nz  Thu Mar  1 04:48:00 2018
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Thu, 1 Mar 2018 17:48:00 +1300
Subject: [squid-dev] Bug 4710 resolution
Message-ID: <a6ca0141-46c4-b072-e741-26cbab9a6beb@treenet.co.nz>

Regarding <https://bugs.squid-cache.org/show_bug.cgi?id=4710>.

Is anyone working on a proper fix for this bug yet?

Unless there is other work which can resolve it relatively soon I am
going to start looking into a workaround of simply not passing eCAP any
details for the problem transactions for Squid-4.

Cheers
Amos

From rousskov at measurement-factory.com  Thu Mar  1 07:30:00 2018
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Thu, 1 Mar 2018 00:30:00 -0700
Subject: [squid-dev] Bug 4710 resolution
In-Reply-To: <a6ca0141-46c4-b072-e741-26cbab9a6beb@treenet.co.nz>
References: <a6ca0141-46c4-b072-e741-26cbab9a6beb@treenet.co.nz>
Message-ID: <cf24a59e-47ca-91f8-b373-a4a2d7fc50ae@measurement-factory.com>

On 02/28/2018 09:48 PM, Amos Jeffries wrote:
> Regarding <https://bugs.squid-cache.org/show_bug.cgi?id=4710>.
> 
> Is anyone working on a proper fix for this bug yet?

FWIW, I am not aware of anybody working on addressing that unconfirmed
bug. I only did the initial (and incomplete) triage.


> Unless there is other work which can resolve it relatively soon I am
> going to start looking into a workaround of simply not passing eCAP any
> details for the problem transactions for Squid-4.

Were you able to reproduce the bug? Can the latter (i.e., "not passing
problem transaction to eCAP") be done without any code modifications,
via an adaptation_service_access ACL?


Thank you,

Alex.

From squid3 at treenet.co.nz  Sun Mar  4 10:47:32 2018
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Sun, 4 Mar 2018 23:47:32 +1300
Subject: [squid-dev] Fedora rawhide issues
Message-ID: <57f56522-8b00-8998-74b4-7da7b7fd190b@treenet.co.nz>

FYI: the Fedora rawhide build node is finding compile issues due to its
new GCC-8. I am working on fixes for those, but some will require
refactoring which may take a while.

Amos


From eduard.bagdasaryan at measurement-factory.com  Sat Mar 10 22:36:32 2018
From: eduard.bagdasaryan at measurement-factory.com (Eduard Bagdasaryan)
Date: Sun, 11 Mar 2018 01:36:32 +0300
Subject: [squid-dev] Percent-encoded URLs
Message-ID: <7d54265d-9a14-ecb8-9bf4-58580f909f74@measurement-factory.com>

Hi Squid developers,


I need your competent help with the following issue.

While working on some public key generation issues I noticed that Squid
does not decode percent-encoded URLs (at least before creating public
keys). While trying to understand whether it is correct, I
searched RFC7230 family for proxy-related MUST requirements but
unfortunately did not find them. Another RFC3986 p. 6.2.2.2. describes
'percent-encoding normalization' of unreserved characters, but this is
not a 'MUST' requirement. So, at first glance, Squid does not violate
RFCs in this case. However, the fact that two equivalent URLs (with and
w/o percent encoding) are treated differently may cause some
confusion: for example, a 'DELETE' for such equivalent URL would fail.

So my questions are:

* are there any percent-encoding requirements for proxies?

* does Squid violate them?


Thank you,
Eduard.


From squid3 at treenet.co.nz  Sun Mar 11 06:51:46 2018
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Sun, 11 Mar 2018 19:51:46 +1300
Subject: [squid-dev] Percent-encoded URLs
In-Reply-To: <7d54265d-9a14-ecb8-9bf4-58580f909f74@measurement-factory.com>
References: <7d54265d-9a14-ecb8-9bf4-58580f909f74@measurement-factory.com>
Message-ID: <01eb95d0-7b03-c1e2-e0bb-25fe34862c2f@treenet.co.nz>

On 11/03/18 11:36, Eduard Bagdasaryan wrote:
> Hi Squid developers,
> 
> 
> I need your competent help with the following issue.
> 
> While working on some public key generation issues I noticed that Squid
> does not decode percent-encoded URLs (at least before creating public
> keys). While trying to understand whether it is correct, I
> searched RFC7230 family for proxy-related MUST requirements but
> unfortunately did not find them. Another RFC3986 p. 6.2.2.2. describes
> 'percent-encoding normalization' of unreserved characters, but this is
> not a 'MUST' requirement. So, at first glance, Squid does not violate
> RFCs in this case. However, the fact that two equivalent URLs (with and
> w/o percent encoding) are treated differently may cause some
> confusion: for example, a 'DELETE' for such equivalent URL would fail.
> 
> So my questions are:
> 
> * are there any percent-encoding requirements for proxies?
> 

AFAIK there are none specific to proxies. The client and server
requirements should be used on the relevant received or sent URLs.

IMO the decode should be done in URL::parse() method, and a re-encode
should be done in the getter methods as relevant for each URL section
(they are different, based on the different invalid-char sets).

FYI: When attempting to do that I was overridden by the QA requirement
that URLs "must not be changed" by Squid. The natural side effect is the
caching problem you describe, along with a DoS vulnerability which
apparently nobody in the "real world" cares about.


> * does Squid violate them?
> 

Squid complies with RFC 1738 (not RFC 3986) currently.


Cheers
Amos

From rousskov at measurement-factory.com  Sun Mar 11 16:11:04 2018
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Sun, 11 Mar 2018 10:11:04 -0600
Subject: [squid-dev] Percent-encoded URLs
In-Reply-To: <01eb95d0-7b03-c1e2-e0bb-25fe34862c2f@treenet.co.nz>
References: <7d54265d-9a14-ecb8-9bf4-58580f909f74@measurement-factory.com>
 <01eb95d0-7b03-c1e2-e0bb-25fe34862c2f@treenet.co.nz>
Message-ID: <1968ef41-e32b-1aec-a238-c5b7e6f3bcaa@measurement-factory.com>

On 03/10/2018 11:51 PM, Amos Jeffries wrote:
> On 11/03/18 11:36, Eduard Bagdasaryan wrote:
>> * are there any percent-encoding requirements for proxies?

> AFAIK there are none specific to proxies. The client and server
> requirements should be used on the relevant received or sent URLs.

Good point! The "server" part of Squid is probably violating (if not the
letter then the spirit of) URL handling requirements when it comes to
cache lookups.


> FYI: When attempting to do that I was overridden by the QA requirement
> that URLs "must not be changed" by Squid. The natural side effect is the
> caching problem you describe, along with a DoS vulnerability which
> apparently nobody in the "real world" cares about.

The FYI part is very misleading: It is possible to handle URLs correctly
(without caching problems and DoS vulnerabilities) while preserving URLs
(in general cases). It is not easy, but it is certainly doable. Also,
URL preservation is not driven by QA. Some might argue that it is
necessary for real-world compatibility; it is essentially a design
choice, not a QA requirement.

Alex.

From cyberparser at yandex.ru  Mon Mar 19 12:02:44 2018
From: cyberparser at yandex.ru (Serge)
Date: Mon, 19 Mar 2018 15:02:44 +0300
Subject: [squid-dev] Introduction
In-Reply-To: <CAHaQnLOAutavxtzZh4ipRrJULokM12S2STsEePEgNzUO5zbA_Q@mail.gmail.com>
References: <CAHaQnLOAutavxtzZh4ipRrJULokM12S2STsEePEgNzUO5zbA_Q@mail.gmail.com>
Message-ID: <433301521460964@web7j.yandex.ru>

An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20180319/76d35226/attachment.html>

From gkinkie at gmail.com  Mon Mar 19 13:14:53 2018
From: gkinkie at gmail.com (Francesco Chemolli)
Date: Mon, 19 Mar 2018 13:14:53 +0000
Subject: [squid-dev] Introduction
In-Reply-To: <433301521460964@web7j.yandex.ru>
References: <CAHaQnLOAutavxtzZh4ipRrJULokM12S2STsEePEgNzUO5zbA_Q@mail.gmail.com>
 <433301521460964@web7j.yandex.ru>
Message-ID: <CA+Y8hcP1ghuDZpW5qZtCwfVb_hUu3W=JNDLKsBwKdrUif2f=Wg@mail.gmail.com>

Please,
  Let’s all be respectful here. There is no need to call anyone names,
especially under the unfounded assumption of ill intent. There are plenty
of forums focused on policies and politics, and this isn’t one of them.



On Mon, 19 Mar 2018 at 12:08, Serge <cyberparser at yandex.ru> wrote:

> >>Hello, I'm a networking and security analyst who works for the
> government in Brazil.
> >>bla-bla-bla content filter
>
> Rephrasing your words, you're whore for the government and you're fighting
> against basic human freedoms. Freedom to gather information of any kind.
> Freedom to know the truth about corrupt politicians.
> Freedom of speech. In addition, your country's goverment structures even
> can not afford to pay for professional products so they're asking you to
> use free software, whose ideas are directly
> contary to what you are doing.
>
> After this, you're stupid enough to write to this mailing list asking
> community for the further assistance in your "noble endeavors" and you're
> even not asking some particular question. Well, may god help you.
>
> 18.03.2018, 15:06, "Danilo V" <danilovt at gmail.com>:
>
> Hello, I'm a networking and security analyst who works for the government
> in Brazil.
> I work especially with free software. I am currently allocated to a
> content filter customization project using docker, puppet, squid,
> squidguard and sarg.
>
> I would like to join the mailing list for help with the issues I have
> encountered.
>
> Thanks,
> Danilo Teixeira
> ,
>
> _______________________________________________
> squid-dev mailing list
> squid-dev at lists.squid-cache.org
> http://lists.squid-cache.org/listinfo/squid-dev
>
> _______________________________________________
> squid-dev mailing list
> squid-dev at lists.squid-cache.org
> http://lists.squid-cache.org/listinfo/squid-dev
>
-- 
@mobile
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20180319/cfa91b7a/attachment.html>

From rousskov at measurement-factory.com  Mon Mar 19 14:10:25 2018
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Mon, 19 Mar 2018 08:10:25 -0600
Subject: [squid-dev] Introduction
In-Reply-To: <CAHaQnLOAutavxtzZh4ipRrJULokM12S2STsEePEgNzUO5zbA_Q@mail.gmail.com>
References: <CAHaQnLOAutavxtzZh4ipRrJULokM12S2STsEePEgNzUO5zbA_Q@mail.gmail.com>
Message-ID: <58e584d9-7601-c6f6-195d-3739200ae822@measurement-factory.com>

On 02/05/2018 01:19 PM, Danilo V wrote:
> Hello, I'm a networking and security analyst who works for the
> government in Brazil.
> I work especially with free software. I am currently allocated to a
> content filter customization project using docker, puppet, squid,
> squidguard and sarg.
> 
> I would like to join the mailing list for help with the issues I have
> encountered.


Hello Danilo,

    Please accept my apologies for the inappropriate first response to
your introduction email. To minimize overheads and delays, we do not
moderate squid-dev at the moment, but we will start doing it if folks
abuse this trust. I hope you can ignore this unfortunate incident, and I
am sorry you had to deal with this unprofessional behavior.

Your development-related emails are welcomed here. For Squid
usage/deployment questions, please consider using the squid-users
mailing list.


Thank you,

Alex.

From michael.adm at gmail.com  Tue Mar 20 11:11:28 2018
From: michael.adm at gmail.com (Michael Pro)
Date: Tue, 20 Mar 2018 13:11:28 +0200
Subject: [squid-dev] tcp_outgoing_address and HTTPS
Message-ID: <CAA+Mow79_5nCkudiAUUQdPdW24afUSxSZF5qNAhXwVu2_apECQ@mail.gmail.com>

squid-5 master branch, not have  personal/private repository changes,
not use  cache_peer's ability, (if it's matters - not use transparent
proxying ability).

We have a set of rules (ACL's with url regex) for content, depending
on which we make a decision for the outgoing address, for example,
from 10.10.1.xx to 10.10.6.xx
-----log 1part {{{ -----
Acl.cc(151) matches: checked: tcp_outgoing_address 10.10.5.11 = 1
Checklist.cc(63) markFinished: 0x7fffffffe2b8 answer ALLOWED for match
FilledChecklist.cc(67) ~ACLFilledChecklist: ACLFilledChecklist
destroyed 0x7fffffffe2b8
Checklist.cc(197) ~ACLChecklist: ACLChecklist::~ACLChecklist:
destroyed 0x7fffffffe2b8
peer_select.cc(1026) handlePath: PeerSelector3438 found
local=10.10.5.11 remote=17.253.37.204:80 HIER_DIRECT flags=1,
destination #2 for http://iosapps.itunes.apple.com/...xxx...ipa
...
peer_select.cc(1002) interestedInitiator: PeerSelector3438
peer_select.cc(112) ~PeerSelector: http://iosapps.itunes.apple.com/...xxx...ipa
store.cc(464) unlock: peerSelect unlocking key
60080000000000001C0E000001000000 e:=p2IWV/0x815c09500*3
AsyncCallQueue.cc(55) fireNext: entering AsyncJob::start()
AsyncCall.cc(38) make: make call AsyncJob::start [call195753]
AsyncJob.cc(123) callStart: Comm::ConnOpener status in: [ job10909]
comm.cc(348) comm_openex: comm_openex: Attempt open socket for: 10.10.5.11
comm.cc(391) comm_openex: comm_openex: Opened socket local=10.10.5.11
remote=[::] FD 114 flags=1 : family=2, type=1, protocol=6
-----log 1part }}} -----
In the case of normal traffic (http), everything works fine, as shuld.

In the case of HTTPS with traffic analysis (ssl_bump) we have such a picture:
-----log 2part {{{ ------
Acl.cc(151) matches: checked: tcp_outgoing_address 10.10.5.120 = 1
Checklist.cc(63) markFinished: 0x7fffffffe2b8 answer ALLOWED for match
FilledChecklist.cc(67) ~ACLFilledChecklist: ACLFilledChecklist
destroyed 0x7fffffffe2b8
Checklist.cc(197) ~ACLChecklist: ACLChecklist::~ACLChecklist:
destroyed 0x7fffffffe2b8
peer_select.cc(1026) handlePath: PeerSelector569 found
local=10.10.5.120 remote=23.16.9.11:443 PINNED flags=1, destination #1
for https://some.https.com/...xxx...zip
peer_select.cc(1027) handlePath: always_direct = DENIED
peer_select.cc(1028) handlePath: never_direct = DENIED
peer_select.cc(1029) handlePath: timedout = 0
peer_select.cc(1002) interestedInitiator: PeerSelector569
FwdState.cc(443) startConnectionOrFail: https://some.https.com/...xxx...zip
HttpRequest.cc(472) clearError: old error details: 0/0
FwdState.cc(886) connectStart: fwdConnectStart:
https://some.https.com/...xxx...zip
FwdState.cc(905) connectStart: pinned peer connection: 0x812c51018
client_side.cc(4082) borrowPinnedConnection: local=10.10.2.120:47901
remote=23.16.9.11:443 HIER_DIRECT FD 28 flags=1
client_side.cc(4057) validatePinnedConnection: local=10.10.2.120:47901
remote=23.16.9.11:443 HIER_DIRECT FD 28 flags=1
AsyncCall.cc(56) cancel: will not call
ConnStateData::clientPinnedConnectionRead [call20129] because
comm_read_cancel
AsyncCall.cc(56) cancel: will not call
ConnStateData::clientPinnedConnectionRead [call20129] also because
comm_read_cancel
ModKqueue.cc(174) SetSelect: FD 28, type=1, handler=0,
client_data=0x0, timeout=0
comm.cc(964) comm_add_close_handler: comm_add_close_handler: FD 28,
handler=1, data=0x8028bf398
AsyncCall.cc(26) AsyncCall: The AsyncCall SomeCloseHandler
constructed, this=0x802a456d0 [call20139]
comm.cc(975) comm_add_close_handler: comm_add_close_handler: FD 28,
AsyncCall=0x802a456d01
FwdState.cc(987) dispatch: local=127.0.0.1:20990
remote=127.0.0.120:59799 FD 26 flags=1: Fetching GET
https://some.https.com/...xxx...zip
AsyncJob.cc(34) AsyncJob: AsyncJob constructed, this=0x81258fe38
type=HttpStateData [job1763]
store.cc(439) lock: Client locked key 3F020000000000001C0E000001000000
e:=p2IWV/0x812b2df004
...
peer_select.cc(112) ~PeerSelector: https://some.https.com/...xxx...zip
store.cc(464) unlock: peerSelect unlocking key
3F020000000000001C0E000001000000 e:=p2IWV/0x812b2df004
AsyncCallQueue.cc(55) fireNext: entering AsyncJob::start()
AsyncCall.cc(38) make: make call AsyncJob::start [call20141]
AsyncJob.cc(123) callStart: HttpStateData status in: [ job1763]
http.cc(2838) sendRequest: local=10.10.2.120:47901
remote=23.16.9.11:443 HIER_DIRECT FD 28 flags=1, request 0x8125e88005,
this 0x81258fd18.
AsyncCall.cc(26) AsyncCall: The AsyncCall HttpStateData::httpTimeout
constructed, this=0x812492f80 [call20142]
comm.cc(554) commSetConnTimeout: local=10.10.2.120:47901
remote=23.16.9.11:443 HIER_DIRECT FD 28 flags=1 timeout 86400
http.cc(2204) maybeMakeSpaceAvailable: may read up to 131072 bytes
info buf(0/131072) from local=10.10.2.120:47901
remote=213.156.90.131:443 HIER_DIRECT FD 28 flags=1
AsyncCall.cc(26) AsyncCall: The AsyncCall HttpStateData::readReply
constructed, this=0x812493020 [call20143]
Read.cc(57) comm_read_base: comm_read, queueing read for
local=10.10.2.120:47901 remote=23.16.9.11:443 HIER_DIRECT FD 28
flags=1; asynCall 0x812493020*1
ModKqueue.cc(174) SetSelect: FD 28, type=1, handler=1,
client_data=0x80ce04728, timeout=0
AsyncCall.cc(26) AsyncCall: The AsyncCall HttpStateData::wroteLast
constructed, this=0x812493160 [call20144]
-----log 2part }}} -----

I understand that without analyzing the traffic and not knowing the
final goal for the beginning, we can not manage the process further.
Question: how can we break the established channel (unpinn it) along
the old route and establish a new channel along the new route, when we
already know how.

IN 127.0.0.1:443 (22.33.44.55:443 ???) ---> OUT 10.10.1.1 ---> (Catch
22.33.44.55:443/this/is/it.zip) ---> Kill IN ... ??? OUT 10.10.1.1
---> Establish OUT 10.10.5.1 ---> 22.33.44.55:443/this/is/it.zip

I'm willing to pay a large price for traffic congestion in this case,
since the goal justifies it.

From squid3 at treenet.co.nz  Tue Mar 20 13:55:38 2018
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Wed, 21 Mar 2018 02:55:38 +1300
Subject: [squid-dev] [squid-users] tcp_outgoing_address and HTTPS
In-Reply-To: <CAA+Mow79_5nCkudiAUUQdPdW24afUSxSZF5qNAhXwVu2_apECQ@mail.gmail.com>
References: <CAA+Mow79_5nCkudiAUUQdPdW24afUSxSZF5qNAhXwVu2_apECQ@mail.gmail.com>
Message-ID: <856483c6-3a0d-b75c-81ce-ec471aa8d18f@treenet.co.nz>

On 21/03/18 00:11, Michael Pro wrote:
> squid-5 master branch, not have  personal/private repository changes,
> not use  cache_peer's ability, (if it's matters - not use transparent
> proxying ability).
> 
> We have a set of rules (ACL's with url regex) for content, depending
> on which we make a decision for the outgoing address, for example,
> from 10.10.1.xx to 10.10.6.xx
> -----log 1part {{{ -----
> Acl.cc(151) matches: checked: tcp_outgoing_address 10.10.5.11 = 1
> Checklist.cc(63) markFinished: 0x7fffffffe2b8 answer ALLOWED for match
> FilledChecklist.cc(67) ~ACLFilledChecklist: ACLFilledChecklist
> destroyed 0x7fffffffe2b8
> Checklist.cc(197) ~ACLChecklist: ACLChecklist::~ACLChecklist:
> destroyed 0x7fffffffe2b8
> peer_select.cc(1026) handlePath: PeerSelector3438 found
> local=10.10.5.11 remote=17.253.37.204:80 HIER_DIRECT flags=1,
> destination #2 for http://iosapps.itunes.apple.com/...xxx...ipa
> ...
> peer_select.cc(1002) interestedInitiator: PeerSelector3438
> peer_select.cc(112) ~PeerSelector: http://iosapps.itunes.apple.com/...xxx...ipa
> store.cc(464) unlock: peerSelect unlocking key
> 60080000000000001C0E000001000000 e:=p2IWV/0x815c09500*3
> AsyncCallQueue.cc(55) fireNext: entering AsyncJob::start()
> AsyncCall.cc(38) make: make call AsyncJob::start [call195753]
> AsyncJob.cc(123) callStart: Comm::ConnOpener status in: [ job10909]
> comm.cc(348) comm_openex: comm_openex: Attempt open socket for: 10.10.5.11
> comm.cc(391) comm_openex: comm_openex: Opened socket local=10.10.5.11
> remote=[::] FD 114 flags=1 : family=2, type=1, protocol=6
> -----log 1part }}} -----
> In the case of normal traffic (http), everything works fine, as shuld.
> 

The difference to be aware of is that there is zero security on this
type of HTTP. So while it is better not to play with destinations, and
Squid default is to go where the client wanted - it is permitted to go
elsewhere if a better source is found.


> In the case of HTTPS with traffic analysis (ssl_bump) we have such a picture:
> -----log 2part {{{ ------
> Acl.cc(151) matches: checked: tcp_outgoing_address 10.10.5.120 = 1
> Checklist.cc(63) markFinished: 0x7fffffffe2b8 answer ALLOWED for match
> FilledChecklist.cc(67) ~ACLFilledChecklist: ACLFilledChecklist
> destroyed 0x7fffffffe2b8
> Checklist.cc(197) ~ACLChecklist: ACLChecklist::~ACLChecklist:
> destroyed 0x7fffffffe2b8
> peer_select.cc(1026) handlePath: PeerSelector569 found
> local=10.10.5.120 remote=23.16.9.11:443 PINNED flags=1, destination #1
> for https://some.https.com/...xxx...zip

What PINNED means to Squid is that the client TCP connection is tied up
with some details related to some specific TCP server connection.

In this case the TLS crypto used during the bumping process took crypto
details from the client connection and gave them to the server, then
from the server and gave them to the client. Resulting in a forced
end-to-end relationship between the clinet and server for all traffic
over both those connections.
 The only thing Squid can do is to server some content from cache as
normal HITs, or if you specifically configure ICAP/eCAP service they can
modify the messages as they flow. Delivering the traffic to another
server is not permissable because the HTTP messages can (and often are)
tied to the TLS crypto details as well in ways that are not visible to
Squid.

For example; it is becoming very popular for the endpoints to crypto
sign messages or embed a hash signature which can only be verified valid
using details the server and client exchanged up front. No other server
would be able to send valid values and the client breaks if it is wrong.
 This kind of thing survives even when SSL-Bump'ing because of Squid
pinning, but does add the restrictions you found.


> 
> I understand that without analyzing the traffic and not knowing the
> final goal for the beginning, we can not manage the process further.
> Question: how can we break the established channel (unpinn it) along
> the old route and establish a new channel along the new route, when we
> already know how.

There are three possibilities that I am aware of - in no particular order:

1) An ICAP service can do whatever it pleases with requests it receives.
We hold no responsibility for anything happening there and I publicly
advise against playing with the crypto that way - the above issues are
the least of the problems to be faced.


2) It is technically possible to make Squid open a CONNECT tunnel
through an HTTP peer proxy to the origin instead of going there
directly. The only thing preventing this is nobody writing the necessary
code.

It has been on my (and many others) wishlist for a long while but still
nobody has been able to work on it. Any assistance towards getting that
coded is very, very welcome.


3) The client-first type of bumping does not involve any server crypto.
This is *highly* unsafe and often encounters problems like the ICAP
approach and for all the same reasons.

BUT that said, if you are sufficiently in control of the traffic to be
sure of its safety then Squid can do it by simply using the bump action
at "step 1" of the SSL-Bump process - rather than the recommended step 2
or 3.

We have err'ed on the side of security with these things so it may not
work right now. But it is not technically required to pin for this
specific type of bumped connection - so the case could be made that it
is a bug to fix if Squid does force pinning on that traffic.

Amos

From squid3 at treenet.co.nz  Tue Mar 20 14:38:51 2018
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Wed, 21 Mar 2018 03:38:51 +1300
Subject: [squid-dev] Squid User-Ip
In-Reply-To: <1519843524337-0.post@n4.nabble.com>
References: <1519843524337-0.post@n4.nabble.com>
Message-ID: <ed895bb3-c77f-d98d-a105-2ec0d84293e7@treenet.co.nz>

On 01/03/18 07:45, dean wrote:
> I would like to know to which authenticated user a certain IP corresponds at
> any time at the code level
> 

What are you trying to do exactly?


Be aware that HTTP authentication credentials are attached to messages
not to IP's.

HTTP itself is a stateless and multiplexed protocol. Meaning any given
TCP/IP connection can be delivering or receiving message for any number
of "users" and messages from any user can be spread over any number of
different TCP/IP connections - possibly simultaneously.

Amos

From rousskov at measurement-factory.com  Tue Mar 20 15:44:37 2018
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Tue, 20 Mar 2018 09:44:37 -0600
Subject: [squid-dev] [squid-users] tcp_outgoing_address and HTTPS
In-Reply-To: <856483c6-3a0d-b75c-81ce-ec471aa8d18f@treenet.co.nz>
References: <CAA+Mow79_5nCkudiAUUQdPdW24afUSxSZF5qNAhXwVu2_apECQ@mail.gmail.com>
 <856483c6-3a0d-b75c-81ce-ec471aa8d18f@treenet.co.nz>
Message-ID: <effe0547-49ae-4356-7bc2-f7cfcf692c26@measurement-factory.com>

On 03/20/2018 07:55 AM, Amos Jeffries wrote:
> 2) It is technically possible to make Squid open a CONNECT tunnel
> through an HTTP peer proxy to the origin instead of going there
> directly. The only thing preventing this is nobody writing the necessary
> code.
> 
> It has been on my (and many others) wishlist for a long while but still
> nobody has been able to work on it.

FWIW, Factory is working on it now.

Alex.

From eliezer at ngtech.co.il  Wed Mar 28 07:21:08 2018
From: eliezer at ngtech.co.il (Eliezer Croitoru)
Date: Wed, 28 Mar 2018 10:21:08 +0300
Subject: [squid-dev] Introduction
In-Reply-To: <a0299fa257c1417d89885977f1de5815@EXMAIL.allfon.in>
References: <50adc94e2010405f94272dba1f3e0bbb@EXMAIL.allfon.in>
 <034f01d3ac0d$2b699b50$823cd1f0$@ngtech.co.il>
 <a0299fa257c1417d89885977f1de5815@EXMAIL.allfon.in>
Message-ID: <01da01d3c665$57c45ec0$074d1c40$@ngtech.co.il>

Sorry for the late response, I somehow missed your response.

I will try to review the squid.conf and see if I can help with something.

 

If I'm not responding in a few days send me a PM to bump it up.

 

Eliezer

 

----

 <http://ngtech.co.il/lmgtfy/> Eliezer Croitoru
Linux System Administrator
Mobile: +972-5-28704261
Email: eliezer at ngtech.co.il



 

From: Khushal Jain Shripal <KhushalJain.S at excelacom.in> 
Sent: Friday, February 23, 2018 05:55
To: Eliezer Croitoru <eliezer at ngtech.co.il>; squid-dev at lists.squid-cache.org
Cc: SkoolLive_Offshore_Team <SkoolLive_Offshore_Team at excelacom.in>; Gowtham
Anandaraj <Gowtham.A at excelacom.in>
Subject: RE: [squid-dev] Introduction

 

Hi Eliezer,

 

We have installed Squid Cache.

1.       We configured http port number.

2.       We gave hostname as localhost and port number in Proxy Settings of
Windows.

3.       Cache folder was created and cache data exists when we tried to
access http sites.

a.       For instance, we tried to access http://excelacom.in we were able
to cache and store the data in cache folder.

 

But when we tried to access https sites, we were not able to cache https
sites.

 

Attached is our Squid.conf for your reference.

 

Can you please provide us Squid.Conf file to access and cache https sites.

It would be more helpful to us.

 

 

Regards, 

 




Khushal Jain Shripal

Business Analyst


Excelacom Technologies Pvt Ltd

p: +91.9003028627

Skype ID: khushalshripal

From: squid-dev [mailto:squid-dev-bounces at lists.squid-cache.org] On Behalf
Of Eliezer Croitoru
Sent: Friday, February 23, 2018 12:14 AM
To: Gowtham Anandaraj <Gowtham.A at excelacom.in
<mailto:Gowtham.A at excelacom.in> >; squid-dev at lists.squid-cache.org
<mailto:squid-dev at lists.squid-cache.org> 
Subject: Re: [squid-dev] Introduction

 

Hey,

 

Can you be more specific?

 

Eliezer

 

----

Eliezer Croitoru <http://ngtech.co.il/lmgtfy/> 
Linux System Administrator
Mobile: +972-5-28704261
Email: eliezer at ngtech.co.il <mailto:eliezer at ngtech.co.il> 



 

From: squid-dev [mailto:squid-dev-bounces at lists.squid-cache.org] On Behalf
Of Gowtham Anandaraj
Sent: Monday, February 12, 2018 14:29
To: squid-dev at lists.squid-cache.org <mailto:squid-dev at lists.squid-cache.org>

Subject: [squid-dev] Introduction

 

Hello Squid Dev,

 

It's a great opportunity to learn Squid.

My Name is Gowtham , working as Programmer Analyst with over 3 years of
experience.

 

Currently I'm using squid for my project for caching, but I'm not able to
cache https sites.

Any help would be appreciated. 

 

Thanks,




Gowtham Anandaraj

Program Analyst


Excelacom Technologies Pvt Ltd

5/D5-IT Park, SIPCOT, Navallur Post, Siruseri, Chennai 603103   

T +91 44 4743 3000 | F +91 44 3068 3111 | E  <mailto:gowtham.a at excelacom.in>
gowtham.a at excelacom.in  | S gowthammiley |M 9524031314

[NOTICE: This e-mail is confidential and may also be privileged. If you are
not the intended recipient, please notify us immediately by replying to this
message and then delete it from your system. You should not copy or use it
for any purpose, nor disclose its contents to any other person. Thank you.]

 

 

 

  _____  


DISCLAIMER INFORMATION

The information contained in this email is confidential and may contain
proprietary information. It is meant solely for the intended recipient.
Access to this email by anyone else is unauthorized. If you are not the
intended recipient, any disclosure, copying, distribution or any action
taken or omitted in reliance on this, is prohibited and may be unlawful. No
liability or responsibility is accepted if information or data is, for
whatever reason corrupted or does not reach its intended recipient.
Excelacom Technologies Private Ltd reserves the right to take any action in
accordance with its email policy. If you have received this communication in
error, please delete this mail & notify us immediately at
webadmin at excelacom.in <mailto:webadmin at excelacom.in> 

WARNING:
Computer viruses can be transmitted via email. The recipient should check
this email and any attachments for the presence of viruses. The company will
not accept any liability or any damage caused by any virus transmitted by
this email

 

  _____  


DISCLAIMER INFORMATION

The information contained in this email is confidential and may contain
proprietary information. It is meant solely for the intended recipient.
Access to this email by anyone else is unauthorized. If you are not the
intended recipient, any disclosure, copying, distribution or any action
taken or omitted in reliance on this, is prohibited and may be unlawful. No
liability or responsibility is accepted if information or data is, for
whatever reason corrupted or does not reach its intended recipient.
Excelacom Technologies Private Ltd reserves the right to take any action in
accordance with its email policy. If you have received this communication in
error, please delete this mail & notify us immediately at
webadmin at excelacom.in <mailto:webadmin at excelacom.in> 

WARNING:
Computer viruses can be transmitted via email. The recipient should check
this email and any attachments for the presence of viruses. The company will
not accept any liability or any damage caused by any virus transmitted by
this email

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20180328/a174a990/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 2199 bytes
Desc: not available
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20180328/a174a990/attachment-0003.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 11297 bytes
Desc: not available
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20180328/a174a990/attachment-0004.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 11298 bytes
Desc: not available
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20180328/a174a990/attachment-0005.png>

