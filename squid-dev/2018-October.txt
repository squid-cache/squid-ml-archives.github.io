From ahmed.zaeem at netstream.ps  Mon Oct  1 18:28:31 2018
From: ahmed.zaeem at netstream.ps (--Ahmad--)
Date: Mon, 1 Oct 2018 21:28:31 +0300
Subject: [squid-dev] modify source code and change the name from "squid" to
	other name
Message-ID: <F378E89D-631A-4D2C-9672-E6DAAAC06472@netstream.ps>

Hey  Folks 
my question may be crazy a little bit .

i want to change everything in squid config files and rename it to ahmad.

so i want change eveverythingeytng in folders , files  from squid  to —> stinger  and have stinger conf files and run instance as stinger instead of squid .

so i changed recursively everything and replace squid with “stinger”



here what i made :

find /root/squid-3.5.22 -type f -exec sed -i -e 's/squid/stinger/g' {} \;
find /root/squid-3.5.22 -type f -exec sed -i -e 's/Squid/Stinger/g' {} \;
find /root/squid-3.5.22 -type f -exec sed -i -e 's/SQUID/STINGER/g' {} \;

find . -iname "*squid*" -exec rename squid stinger '{}' \;
find . -iname "*squid*" -exec rename squid stinger '{}' \;
find . -iname "*squid*" -exec rename Squid Stinger '{}' \;

###################





 but compilation give me error 



lo heap.lo iso3307.lo radix.lo rfc1035.lo rfc1123.lo rfc2671.lo rfc3596.lo Splay.lo stub_memaccount.lo util.lo xusleep.lo  
libtool: link: /usr/bin/ar cru .libs/libmiscutil.a .libs/MemPool.o .libs/MemPoolChunked.o .libs/MemPoolMalloc.o .libs/getfullhostname.o .libs/heap.o .libs/iso3307.o .libs/radix.o .libs/rfc1035.o .libs/rfc1123.o .libs/rfc2671.o .libs/rfc3596.o .libs/Splay.o .libs/stub_memaccount.o .libs/util.o .libs/xusleep.o 
libtool: link: ranlib .libs/libmiscutil.a
libtool: link: ( cd ".libs" && rm -f "libmiscutil.la <http://libmiscutil.la/>" && ln -s "../libmiscutil.la <http://libmiscutil.la/>" "libmiscutil.la <http://libmiscutil.la/>" )
make[2]: Leaving directory `/root/squid-3.5.22/lib'
make[1]: Leaving directory `/root/squid-3.5.22/lib'
Making all in libltdl
make[1]: Entering directory `/root/squid-3.5.22/libltdl'
CDPATH="${ZSH_VERSION+.}:" && cd . && /bin/sh /root/squid-3.5.22/cfgaux/missing aclocal-1.15 -I m4
/root/squid-3.5.22/cfgaux/missing: line 81: aclocal-1.15: command not found
WARNING: 'aclocal-1.15' is missing on your system.
         You should only need it if you modified 'acinclude.m4' or
         'configure.ac' or m4 files included by 'configure.ac'.
         The 'aclocal' program is part of the GNU Automake package:
         <http://www.gnu.org/software/automake <http://www.gnu.org/software/automake>>
         It also requires GNU Autoconf, GNU m4 and Perl in order to run:
         <http://www.gnu.org/software/autoconf <http://www.gnu.org/software/autoconf>>
         <http://www.gnu.org/software/m4/ <http://www.gnu.org/software/m4/>>
         <http://www.perl.org/ <http://www.perl.org/>>
make[1]: *** [aclocal.m4] Error 127
make[1]: Leaving directory `/root/squid-3.5.22/libltdl'
make: *** [all-recursive] Error 1
[root at li1802-227 squid-3.5.22]# 



any help ?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20181001/18be57d9/attachment.html>

From rousskov at measurement-factory.com  Mon Oct  1 20:16:07 2018
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Mon, 1 Oct 2018 14:16:07 -0600
Subject: [squid-dev] modify source code and change the name from "squid"
 to other name
In-Reply-To: <F378E89D-631A-4D2C-9672-E6DAAAC06472@netstream.ps>
References: <F378E89D-631A-4D2C-9672-E6DAAAC06472@netstream.ps>
Message-ID: <11342b75-b641-f94f-e270-4308e4ff1b56@measurement-factory.com>

On 10/01/2018 12:28 PM, --Ahmad-- wrote:

> i want to change everything in squid config files and rename it to ahmad.
> 
> so i want change eveverythingeytng in folders , files  from squid  to —>
> stinger  and have stinger conf files and run instance as stinger instead
> of squid .

What are you trying to accomplish by this change? In other words, why
are you doing this?

Alex.


> so i changed recursively everything and replace squid with “stinger”
> 
> 
> 
> here what i made :
> 
> find /root/squid-3.5.22 -type f -exec sed -i -e 's/squid/stinger/g' {} \;
> find /root/squid-3.5.22 -type f -exec sed -i -e 's/Squid/Stinger/g' {} \;
> find /root/squid-3.5.22 -type f -exec sed -i -e 's/SQUID/STINGER/g' {} \;
> 
> find . -iname "*squid*" -exec rename squid stinger '{}' \;
> find . -iname "*squid*" -exec rename squid stinger '{}' \;
> find . -iname "*squid*" -exec rename Squid Stinger '{}' \;
> 
> ###################
> 
> 
> 
> 
> 
>  but compilation give me error 
> 
> 
> 
> lo heap.lo iso3307.lo radix.lo rfc1035.lo rfc1123.lo rfc2671.lo
> rfc3596.lo Splay.lo stub_memaccount.lo util.lo xusleep.lo  
> libtool: link: /usr/bin/ar cru .libs/libmiscutil.a .libs/MemPool.o
> .libs/MemPoolChunked.o .libs/MemPoolMalloc.o .libs/getfullhostname.o
> .libs/heap.o .libs/iso3307.o .libs/radix.o .libs/rfc1035.o
> .libs/rfc1123.o .libs/rfc2671.o .libs/rfc3596.o .libs/Splay.o
> .libs/stub_memaccount.o .libs/util.o .libs/xusleep.o 
> libtool: link: ranlib .libs/libmiscutil.a
> libtool: link: ( cd ".libs" && rm -f "libmiscutil.la
> <http://libmiscutil.la>" && ln -s "../libmiscutil.la
> <http://libmiscutil.la>" "libmiscutil.la <http://libmiscutil.la>" )
> make[2]: Leaving directory `/root/squid-3.5.22/lib'
> make[1]: Leaving directory `/root/squid-3.5.22/lib'
> Making all in libltdl
> make[1]: Entering directory `/root/squid-3.5.22/libltdl'
> CDPATH="${ZSH_VERSION+.}:" && cd . && /bin/sh
> /root/squid-3.5.22/cfgaux/missing aclocal-1.15 -I m4
> /root/squid-3.5.22/cfgaux/missing: line 81: aclocal-1.15: command not found
> WARNING: 'aclocal-1.15' is missing on your system.
>          You should only need it if you modified 'acinclude.m4' or
>          'configure.ac' or m4 files included by 'configure.ac'.
>          The 'aclocal' program is part of the GNU Automake package:
>          <http://www.gnu.org/software/automake>
>          It also requires GNU Autoconf, GNU m4 and Perl in order to run:
>          <http://www.gnu.org/software/autoconf>
>          <http://www.gnu.org/software/m4/>
>          <http://www.perl.org/>
> make[1]: *** [aclocal.m4] Error 127
> make[1]: Leaving directory `/root/squid-3.5.22/libltdl'
> make: *** [all-recursive] Error 1
> [root at li1802-227 squid-3.5.22]# 
> 
> 
> 
> any help ?
> 
> 
> 
> _______________________________________________
> squid-dev mailing list
> squid-dev at lists.squid-cache.org
> http://lists.squid-cache.org/listinfo/squid-dev
> 


From ahmed.zaeem at netstream.ps  Mon Oct  1 20:36:50 2018
From: ahmed.zaeem at netstream.ps (--Ahmad--)
Date: Mon, 1 Oct 2018 23:36:50 +0300
Subject: [squid-dev] modify source code and change the name from "squid"
 to other name
In-Reply-To: <11342b75-b641-f94f-e270-4308e4ff1b56@measurement-factory.com>
References: <F378E89D-631A-4D2C-9672-E6DAAAC06472@netstream.ps>
 <11342b75-b641-f94f-e270-4308e4ff1b56@measurement-factory.com>
Message-ID: <30539ABD-8F38-45F1-8769-47E9D070A23B@netstream.ps>

just curious to do and tell my friends i have some thing uniqe :)

is that a complex thing to be accomplished ?


do you need to know what before helping me ? isn’t it an open source code ?

> On 1 Oct 2018, at 23:16, Alex Rousskov <rousskov at measurement-factory.com> wrote:
> 
> On 10/01/2018 12:28 PM, --Ahmad-- wrote:
> 
>> i want to change everything in squid config files and rename it to ahmad.
>> 
>> so i want change eveverythingeytng in folders , files  from squid  to —>
>> stinger  and have stinger conf files and run instance as stinger instead
>> of squid .
> 
> What are you trying to accomplish by this change? In other words, why
> are you doing this?
> 
> Alex.
> 
> 
>> so i changed recursively everything and replace squid with “stinger”
>> 
>> 
>> 
>> here what i made :
>> 
>> find /root/squid-3.5.22 -type f -exec sed -i -e 's/squid/stinger/g' {} \;
>> find /root/squid-3.5.22 -type f -exec sed -i -e 's/Squid/Stinger/g' {} \;
>> find /root/squid-3.5.22 -type f -exec sed -i -e 's/SQUID/STINGER/g' {} \;
>> 
>> find . -iname "*squid*" -exec rename squid stinger '{}' \;
>> find . -iname "*squid*" -exec rename squid stinger '{}' \;
>> find . -iname "*squid*" -exec rename Squid Stinger '{}' \;
>> 
>> ###################
>> 
>> 
>> 
>> 
>> 
>>  but compilation give me error 
>> 
>> 
>> 
>> lo heap.lo iso3307.lo radix.lo rfc1035.lo rfc1123.lo rfc2671.lo
>> rfc3596.lo Splay.lo stub_memaccount.lo util.lo xusleep.lo  
>> libtool: link: /usr/bin/ar cru .libs/libmiscutil.a .libs/MemPool.o
>> .libs/MemPoolChunked.o .libs/MemPoolMalloc.o .libs/getfullhostname.o
>> .libs/heap.o .libs/iso3307.o .libs/radix.o .libs/rfc1035.o
>> .libs/rfc1123.o .libs/rfc2671.o .libs/rfc3596.o .libs/Splay.o
>> .libs/stub_memaccount.o .libs/util.o .libs/xusleep.o 
>> libtool: link: ranlib .libs/libmiscutil.a
>> libtool: link: ( cd ".libs" && rm -f "libmiscutil.la <http://libmiscutil.la/>
>> <http://libmiscutil.la <http://libmiscutil.la/>>" && ln -s "../libmiscutil.la <http://libmiscutil.la/>
>> <http://libmiscutil.la <http://libmiscutil.la/>>" "libmiscutil.la <http://libmiscutil.la/> <http://libmiscutil.la <http://libmiscutil.la/>>" )
>> make[2]: Leaving directory `/root/squid-3.5.22/lib'
>> make[1]: Leaving directory `/root/squid-3.5.22/lib'
>> Making all in libltdl
>> make[1]: Entering directory `/root/squid-3.5.22/libltdl'
>> CDPATH="${ZSH_VERSION+.}:" && cd . && /bin/sh
>> /root/squid-3.5.22/cfgaux/missing aclocal-1.15 -I m4
>> /root/squid-3.5.22/cfgaux/missing: line 81: aclocal-1.15: command not found
>> WARNING: 'aclocal-1.15' is missing on your system.
>>          You should only need it if you modified 'acinclude.m4' or
>>          'configure.ac' or m4 files included by 'configure.ac'.
>>          The 'aclocal' program is part of the GNU Automake package:
>>          <http://www.gnu.org/software/automake>
>>          It also requires GNU Autoconf, GNU m4 and Perl in order to run:
>>          <http://www.gnu.org/software/autoconf>
>>          <http://www.gnu.org/software/m4/>
>>          <http://www.perl.org/>
>> make[1]: *** [aclocal.m4] Error 127
>> make[1]: Leaving directory `/root/squid-3.5.22/libltdl'
>> make: *** [all-recursive] Error 1
>> [root at li1802-227 squid-3.5.22]# 
>> 
>> 
>> 
>> any help ?
>> 
>> 
>> 
>> _______________________________________________
>> squid-dev mailing list
>> squid-dev at lists.squid-cache.org <mailto:squid-dev at lists.squid-cache.org>
>> http://lists.squid-cache.org/listinfo/squid-dev <http://lists.squid-cache.org/listinfo/squid-dev>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20181001/0c0381bf/attachment-0001.html>

From rousskov at measurement-factory.com  Mon Oct  1 21:08:33 2018
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Mon, 1 Oct 2018 15:08:33 -0600
Subject: [squid-dev] modify source code and change the name from "squid"
 to other name
In-Reply-To: <30539ABD-8F38-45F1-8769-47E9D070A23B@netstream.ps>
References: <F378E89D-631A-4D2C-9672-E6DAAAC06472@netstream.ps>
 <11342b75-b641-f94f-e270-4308e4ff1b56@measurement-factory.com>
 <30539ABD-8F38-45F1-8769-47E9D070A23B@netstream.ps>
Message-ID: <359912dd-035a-b35a-cd78-091b7bc4a20b@measurement-factory.com>

On 10/01/2018 02:36 PM, --Ahmad-- wrote:
> just curious to do and tell my friends i have some thing uniqe :)

Understood, thank you.


> is that a complex thing to be accomplished ?

Probably not, but I have not studied the problem carefully.


> do you need to know what before helping me ?

Personally, I need to be motivated enough to spend my time on your
problem. Knowing that the person asking for help has an important,
general use case increases my motivation. Your specific request does not
meet those criteria, but that does not mean others will not help you;
they may have different criteria and/or more free time.


> isn’t it an open source code ?

Yes, it is. There is virtually no connection between Squid license and
others' desire to help you though. Being open source does not imply free
help with every problem!

Alex.


>> On 1 Oct 2018, at 23:16, Alex Rousskov wrote:
>>
>> On 10/01/2018 12:28 PM, --Ahmad-- wrote:
>>
>>> i want to change everything in squid config files and rename it to ahmad.
>>>
>>> so i want change eveverythingeytng in folders , files  from squid  to —>
>>> stinger  and have stinger conf files and run instance as stinger instead
>>> of squid .
>>
>> What are you trying to accomplish by this change? In other words, why
>> are you doing this?
>>
>> Alex.
>>
>>
>>> so i changed recursively everything and replace squid with “stinger”
>>>
>>>
>>>
>>> here what i made :
>>>
>>> find /root/squid-3.5.22 -type f -exec sed -i -e 's/squid/stinger/g' {} \;
>>> find /root/squid-3.5.22 -type f -exec sed -i -e 's/Squid/Stinger/g' {} \;
>>> find /root/squid-3.5.22 -type f -exec sed -i -e 's/SQUID/STINGER/g' {} \;
>>>
>>> find . -iname "*squid*" -exec rename squid stinger '{}' \;
>>> find . -iname "*squid*" -exec rename squid stinger '{}' \;
>>> find . -iname "*squid*" -exec rename Squid Stinger '{}' \;
>>>
>>> ###################
>>>
>>>
>>>
>>>
>>>
>>>  but compilation give me error 
>>>
>>>
>>>
>>> lo heap.lo iso3307.lo radix.lo rfc1035.lo rfc1123.lo rfc2671.lo
>>> rfc3596.lo Splay.lo stub_memaccount.lo util.lo xusleep.lo  
>>> libtool: link: /usr/bin/ar cru .libs/libmiscutil.a .libs/MemPool.o
>>> .libs/MemPoolChunked.o .libs/MemPoolMalloc.o .libs/getfullhostname.o
>>> .libs/heap.o .libs/iso3307.o .libs/radix.o .libs/rfc1035.o
>>> .libs/rfc1123.o .libs/rfc2671.o .libs/rfc3596.o .libs/Splay.o
>>> .libs/stub_memaccount.o .libs/util.o .libs/xusleep.o 
>>> libtool: link: ranlib .libs/libmiscutil.a
>>> libtool: link: ( cd ".libs" && rm -f "libmiscutil.la
>>> <http://libmiscutil.la/>
>>> <http://libmiscutil.la <http://libmiscutil.la/>>" && ln -s
>>> "../libmiscutil.la <http://libmiscutil.la/>
>>> <http://libmiscutil.la <http://libmiscutil.la/>>" "libmiscutil.la
>>> <http://libmiscutil.la/> <http://libmiscutil.la
>>> <http://libmiscutil.la/>>" )
>>> make[2]: Leaving directory `/root/squid-3.5.22/lib'
>>> make[1]: Leaving directory `/root/squid-3.5.22/lib'
>>> Making all in libltdl
>>> make[1]: Entering directory `/root/squid-3.5.22/libltdl'
>>> CDPATH="${ZSH_VERSION+.}:" && cd . && /bin/sh
>>> /root/squid-3.5.22/cfgaux/missing aclocal-1.15 -I m4
>>> /root/squid-3.5.22/cfgaux/missing: line 81: aclocal-1.15: command not
>>> found
>>> WARNING: 'aclocal-1.15' is missing on your system.
>>>          You should only need it if you modified 'acinclude.m4' or
>>>          'configure.ac' or m4 files included by 'configure.ac'.
>>>          The 'aclocal' program is part of the GNU Automake package:
>>>          <http://www.gnu.org/software/automake>
>>>          It also requires GNU Autoconf, GNU m4 and Perl in order to run:
>>>          <http://www.gnu.org/software/autoconf>
>>>          <http://www.gnu.org/software/m4/>
>>>          <http://www.perl.org/>
>>> make[1]: *** [aclocal.m4] Error 127
>>> make[1]: Leaving directory `/root/squid-3.5.22/libltdl'
>>> make: *** [all-recursive] Error 1
>>> [root at li1802-227 squid-3.5.22]# 
>>>
>>>
>>>
>>> any help ?
>>>
>>>
>>>
>>> _______________________________________________
>>> squid-dev mailing list
>>> squid-dev at lists.squid-cache.org <mailto:squid-dev at lists.squid-cache.org>
>>> http://lists.squid-cache.org/listinfo/squid-dev
> 


From squid3 at treenet.co.nz  Mon Oct  1 22:29:24 2018
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Tue, 2 Oct 2018 11:29:24 +1300
Subject: [squid-dev] modify source code and change the name from "squid"
 to other name
In-Reply-To: <30539ABD-8F38-45F1-8769-47E9D070A23B@netstream.ps>
References: <F378E89D-631A-4D2C-9672-E6DAAAC06472@netstream.ps>
 <11342b75-b641-f94f-e270-4308e4ff1b56@measurement-factory.com>
 <30539ABD-8F38-45F1-8769-47E9D070A23B@netstream.ps>
Message-ID: <ebfde789-4338-15a7-c9cb-c8aa04f37c6b@treenet.co.nz>

On 2/10/18 9:36 AM, --Ahmad-- wrote:
> just curious to do and tell my friends i have some thing uniqe :)
> 

Renaming source code is not unique. Squid-2.6 and Squid-2.7 were
actually a fork of the main Squid source code. "Lusca" is the name of a
proxy forked off Squid-2.7. "SquidNT" is another old one which was a
Windows rename of Squid-2.4 (or 2.5). There are others I forget exactly
the names of.

If you pay attention to the license details of Squid (in the CREDITS
file) you will notice from the first entry that the original Squid
itself was a renaming and extension of an even older proxy software
called 'cached' by the Harvest Project.


> is that a complex thing to be accomplished ?
> 

Your time so far would have been better spent gathering your friends on
a beach and showing them a handful of sand thrown in the air.

No handful of sand in history has ever been thrown and fallen the same
way as that handful will have. That action is both far more complex,
much more truly unique, and just as useful as your requested change
appears to be.

If you are just looking for something to do and possibly impress others,
our Squid Project roadmap (<https://wiki.squid-cache.org/RoadMap> and
<https://wiki.squid-cache.org/RoadMap/Tasks>) and bugzilla
(<https://bugs.squid-cache.org/>) have long lists of things that need to
be worked on.


> 
> do you need to know what before helping me ? isn’t it an open source code ?
> 

Squid is GPL licensed code. To change it you are required to comply with
the relevant GPL license in how you use the result.

One of those license requirements is that your code must be likewise
public and open source under the GPLv2 or later. So you are needing to
publicly acknowledge that it is Squid source code your changes are based
on, and exactly what you have changed to make it different from Squid.


At no point does the GPL license require anyone to spend their time
assisting you do any changes. And your friends are not likely to be
impressed with simply copying and running sed on some source code files.
They could do the same.

Alex and I respond to requests for help because it is in our own
separate interests to stay aware of what problems people are having with
Squid and what types of network environment it is being used for. So we
can make decisions about what things we need to focus on doing to keep
Squid being useful for the world at large.

Admin the world over have no regular need to rename random files and
words inside the source code we publish. So there is no interest in
spending our own precious time helping you with this particular request.


No one is preventing you posting, but the more this type of unexplained
request is repeated the less interest anyone has of even reading your
emails again let alone answering and helping. One day you may have a
real urgent problem and nobody looks at the help request for days.

HTH
Amos

From ahmed.zaeem at netstream.ps  Mon Oct  1 22:32:03 2018
From: ahmed.zaeem at netstream.ps (--Ahmad--)
Date: Tue, 2 Oct 2018 01:32:03 +0300
Subject: [squid-dev] modify source code and change the name from "squid"
 to other name
In-Reply-To: <359912dd-035a-b35a-cd78-091b7bc4a20b@measurement-factory.com>
References: <F378E89D-631A-4D2C-9672-E6DAAAC06472@netstream.ps>
 <11342b75-b641-f94f-e270-4308e4ff1b56@measurement-factory.com>
 <30539ABD-8F38-45F1-8769-47E9D070A23B@netstream.ps>
 <359912dd-035a-b35a-cd78-091b7bc4a20b@measurement-factory.com>
Message-ID: <D013F02D-0A1A-4C09-8BF0-5C912E89D864@netstream.ps>

ok but i guess the issue im facing is not belong to squid may be to autoconf ??

>>>> /root/squid-3.5.22/cfgaux/missing aclocal-1.15 -I m4
>>>> /root/squid-3.5.22/cfgaux/missing: line 81: aclocal-1.15: command not
>>>> found
>>>> WARNING: 'aclocal-1.15' is missing on your system.
>>>>          You should only need it if you modified 'acinclude.m4' or
>>>>          'configure.ac' or m4 files included by 'configure.ac'.
>>>>          The 'aclocal' program is part of the GNU Automake package:
>>>>          <http://www.gnu.org/software/automake>
>>>>          It also requires GNU Autoconf, GNU m4 and Perl in order to run:
>>>>          <http://www.gnu.org/software/autoconf>
>>>>          <http://www.gnu.org/software/m4/>
>>>>          <http://www.perl.org/>
>>>> make[1]: *** [aclocal.m4] Error 127
>>>> make[1]: Leaving directory `/root/squid-3.5.22/libltdl'
>>>> make: *** [all-recursive] Error 1
>>>> [root at li1802-227 squid-3.5.22]# 


could be bec i touched the source code we have the error above .

if you focous you will find the error as WARNING :


>>>> WARNING: 'aclocal-1.15' is missing on your system.
>>>>          You should only need it if you modified 'acinclude.m4' or
>>>>          'configure.ac' or m4 files included by 'configure.ac'.
>>>>          The 'aclocal' program is part of the GNU Automake package:
>>>>          <http://www.gnu.org/software/automake>
>>>>          It also requires GNU Autoconf, GNU m4 and Perl in order to run:
>>>>          <http://www.gnu.org/software/autoconf>
>>>>          <http://www.gnu.org/software/m4/>
>>>>          <http://www.perl.org/>

followed :
https://stackoverflow.com/questions/33278928/how-to-overcome-aclocal-1-15-is-missing-on-your-system-warning-when-compilin
Before running ./configure try running autoreconf -f -i



but not working same result .



Thanks 


> On 2 Oct 2018, at 0:08, Alex Rousskov <rousskov at measurement-factory.com> wrote:
> 
> On 10/01/2018 02:36 PM, --Ahmad-- wrote:
>> just curious to do and tell my friends i have some thing uniqe :)
> 
> Understood, thank you.
> 
> 
>> is that a complex thing to be accomplished ?
> 
> Probably not, but I have not studied the problem carefully.
> 
> 
>> do you need to know what before helping me ?
> 
> Personally, I need to be motivated enough to spend my time on your
> problem. Knowing that the person asking for help has an important,
> general use case increases my motivation. Your specific request does not
> meet those criteria, but that does not mean others will not help you;
> they may have different criteria and/or more free time.
> 
> 
>> isn’t it an open source code ?
> 
> Yes, it is. There is virtually no connection between Squid license and
> others' desire to help you though. Being open source does not imply free
> help with every problem!
> 
> Alex.
> 
> 
>>> On 1 Oct 2018, at 23:16, Alex Rousskov wrote:
>>> 
>>> On 10/01/2018 12:28 PM, --Ahmad-- wrote:
>>> 
>>>> i want to change everything in squid config files and rename it to ahmad.
>>>> 
>>>> so i want change eveverythingeytng in folders , files  from squid  to —>
>>>> stinger  and have stinger conf files and run instance as stinger instead
>>>> of squid .
>>> 
>>> What are you trying to accomplish by this change? In other words, why
>>> are you doing this?
>>> 
>>> Alex.
>>> 
>>> 
>>>> so i changed recursively everything and replace squid with “stinger”
>>>> 
>>>> 
>>>> 
>>>> here what i made :
>>>> 
>>>> find /root/squid-3.5.22 -type f -exec sed -i -e 's/squid/stinger/g' {} \;
>>>> find /root/squid-3.5.22 -type f -exec sed -i -e 's/Squid/Stinger/g' {} \;
>>>> find /root/squid-3.5.22 -type f -exec sed -i -e 's/SQUID/STINGER/g' {} \;
>>>> 
>>>> find . -iname "*squid*" -exec rename squid stinger '{}' \;
>>>> find . -iname "*squid*" -exec rename squid stinger '{}' \;
>>>> find . -iname "*squid*" -exec rename Squid Stinger '{}' \;
>>>> 
>>>> ###################
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>>  but compilation give me error 
>>>> 
>>>> 
>>>> 
>>>> lo heap.lo iso3307.lo radix.lo rfc1035.lo rfc1123.lo rfc2671.lo
>>>> rfc3596.lo Splay.lo stub_memaccount.lo util.lo xusleep.lo  
>>>> libtool: link: /usr/bin/ar cru .libs/libmiscutil.a .libs/MemPool.o
>>>> .libs/MemPoolChunked.o .libs/MemPoolMalloc.o .libs/getfullhostname.o
>>>> .libs/heap.o .libs/iso3307.o .libs/radix.o .libs/rfc1035.o
>>>> .libs/rfc1123.o .libs/rfc2671.o .libs/rfc3596.o .libs/Splay.o
>>>> .libs/stub_memaccount.o .libs/util.o .libs/xusleep.o 
>>>> libtool: link: ranlib .libs/libmiscutil.a
>>>> libtool: link: ( cd ".libs" && rm -f "libmiscutil.la
>>>> <http://libmiscutil.la/>
>>>> <http://libmiscutil.la <http://libmiscutil.la/>>" && ln -s
>>>> "../libmiscutil.la <http://libmiscutil.la/>
>>>> <http://libmiscutil.la <http://libmiscutil.la/>>" "libmiscutil.la
>>>> <http://libmiscutil.la/> <http://libmiscutil.la
>>>> <http://libmiscutil.la/>>" )
>>>> make[2]: Leaving directory `/root/squid-3.5.22/lib'
>>>> make[1]: Leaving directory `/root/squid-3.5.22/lib'
>>>> Making all in libltdl
>>>> make[1]: Entering directory `/root/squid-3.5.22/libltdl'
>>>> CDPATH="${ZSH_VERSION+.}:" && cd . && /bin/sh
>>>> /root/squid-3.5.22/cfgaux/missing aclocal-1.15 -I m4
>>>> /root/squid-3.5.22/cfgaux/missing: line 81: aclocal-1.15: command not
>>>> found
>>>> WARNING: 'aclocal-1.15' is missing on your system.
>>>>          You should only need it if you modified 'acinclude.m4' or
>>>>          'configure.ac' or m4 files included by 'configure.ac'.
>>>>          The 'aclocal' program is part of the GNU Automake package:
>>>>          <http://www.gnu.org/software/automake>
>>>>          It also requires GNU Autoconf, GNU m4 and Perl in order to run:
>>>>          <http://www.gnu.org/software/autoconf>
>>>>          <http://www.gnu.org/software/m4/>
>>>>          <http://www.perl.org/>
>>>> make[1]: *** [aclocal.m4] Error 127
>>>> make[1]: Leaving directory `/root/squid-3.5.22/libltdl'
>>>> make: *** [all-recursive] Error 1
>>>> [root at li1802-227 squid-3.5.22]# 
>>>> 
>>>> 
>>>> 
>>>> any help ?
>>>> 
>>>> 
>>>> 
>>>> _______________________________________________
>>>> squid-dev mailing list
>>>> squid-dev at lists.squid-cache.org <mailto:squid-dev at lists.squid-cache.org>
>>>> http://lists.squid-cache.org/listinfo/squid-dev
>> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20181002/d0e2e893/attachment-0001.html>

From eduard.bagdasaryan at measurement-factory.com  Thu Oct  4 18:30:27 2018
From: eduard.bagdasaryan at measurement-factory.com (Eduard Bagdasaryan)
Date: Thu, 4 Oct 2018 21:30:27 +0300
Subject: [squid-dev] Incremental parsing of chunked quoted extensions
Message-ID: <166a68fa-4fef-3a41-970f-0439ce3c0e2d@measurement-factory.com>

Hello all,

There is a bug in Squid during incremental parsing of quoted chunked
extensions, resulting in unexpected throwing in
One::Parser::skipLineTerminator(). The underlying problem comes from
the fact that Http::One::Tokenizer::qdText() cannot parse
incrementally because it cannot distinguish "an invalid input" from
"need more data" case.

I see two approaches for fixing this problem:

* Low-level.
   Supply Parser::Tokenizer and its children with incremental parsing
   functionality. It looks like this would require much non-trivial work.

* High-level.
   Avoid incremental parsing of chunked extensions and parse them all
   at once. In other words, we need to adjust the Tokenizer caller
   to buffer the whole chunk extension line before passing it to the
   Tokenizer in order to avoid "need more data" case, causing that bug.

Is the incremental parsing of chunked extensions all-important here?
If no, can I proceed with (2) approach fixing this bug?


Thanks,
Eduard.

From rousskov at measurement-factory.com  Fri Oct  5 15:34:52 2018
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Fri, 5 Oct 2018 09:34:52 -0600
Subject: [squid-dev] Incremental parsing of chunked quoted extensions
In-Reply-To: <166a68fa-4fef-3a41-970f-0439ce3c0e2d@measurement-factory.com>
References: <166a68fa-4fef-3a41-970f-0439ce3c0e2d@measurement-factory.com>
Message-ID: <fb5ae31e-3910-b8dd-8ab3-5e4e61d8cad5@measurement-factory.com>

On 10/04/2018 12:30 PM, Eduard Bagdasaryan wrote:
> Hello all,
> 
> There is a bug in Squid during incremental parsing of quoted chunked
> extensions, resulting in unexpected throwing in
> One::Parser::skipLineTerminator(). The underlying problem comes from
> the fact that Http::One::Tokenizer::qdText() cannot parse
> incrementally because it cannot distinguish "an invalid input" from
> "need more data" case.
> 
> I see two approaches for fixing this problem:
> 
> * Low-level.
>   Supply Parser::Tokenizer and its children with incremental parsing
>   functionality. It looks like this would require much non-trivial work.
> 
> * High-level.
>   Avoid incremental parsing of chunked extensions and parse them all
>   at once. 

> Is the incremental parsing of chunked extensions all-important here?

IMO, it is not important: The vast majority of chunks have no extensions
at all, and the vast majority of chunks with extensions have small
extensions. Thus, the performance improvement from incremental parsing
would be an extremely rare event. Such improvements are never "all
important" (and are often not worth their complexity).

Parsing of chunked extensions does not need to be incremental. However,
parsing of chunked encoding as a whole has to be incremental --
reparsing data chunks _is_ expensive, and we should not wait for the end
of the message body (or even for the end of the chunk) even if reparsing
were cheap. Thus, TeChunkedParser has to be incremental.

Whether the incremental pieces of TeChunkedParser should be used when
parsing chunk extensions is a separate question. I will partially answer
it further below.


>   In other words, we need to adjust the Tokenizer caller
>   to buffer the whole chunk extension line before passing it to the
>   Tokenizer in order to avoid "need more data" case, causing that bug.

I doubt that writing code to explicitly buffer the whole line before
parsing extensions is necessary. It is definitely not desirable because
it slows things down in _common_ cases. I would adjust the code to
follow this sketch instead:

    while (!atEof()) {
        if (skipLineTerminator())
            return true; // reached the end of extensions (if any)
        if (parseChunkExtension())
            continue; // got one extension; there may be more
        if (tok.skipAll(NotLF) && skip(LF))
            throw "cannot parse chunk extension"; // <garbage> CR*LF
        return false; // need more data to finish parsing extension
    }
    return false; // need data to start parsing extension or CRLF

where skipLineTerminator() is, essentially,

    return tok.skip(CRLF)) || (relaxed_parser && tok.skipOne(LF));


As you can see, the above sketch is optimized for the common cases and
blindly seeks to the end of the line only in rare cases of partially
received or malformed extensions.

Please note that whether the above sketch is used incrementally is an
_orthogonal_ question:

* In incremental parsing, a successful parseChunkExtension() would
update object state to remember the parsed extension and advance the
parsing position to never come back to the same spot. The loop caller
would advance the parsing position/state if (and only if) the loop
returns true.

* In non-incremental parsing, a successful parseChunkExtension() would
update its parameter (not shown) to remember the parsed extension. The
loop caller would update object state ("committing" that not shown
parameter info) and advance the parsing position if (and only if) the
loop returns true. [ Alternatively, a successful parseChunkExtension()
would update object state directly, sometimes overwriting the previous
(identical) value many times. The current useOriginBody code uses that
simpler scheme. However, even with this simpler alternative, the
advancement is controlled by the loop caller. ]

Should we fix and continue to use incremental parsing here or abandon
it? The answer probably depends on overall code simplicity. Since we
have to use incremental parsing for parsing chunked encoding as a whole
(as discussed in the beginning of this email), we may continue to use it
for parsing extensions if (and only if) doing so does not complicate things.


HTH,

Alex.

From eduard.bagdasaryan at measurement-factory.com  Tue Oct 16 11:49:23 2018
From: eduard.bagdasaryan at measurement-factory.com (Eduard Bagdasaryan)
Date: Tue, 16 Oct 2018 14:49:23 +0300
Subject: [squid-dev] Incremental parsing of chunked quoted extensions
In-Reply-To: <fb5ae31e-3910-b8dd-8ab3-5e4e61d8cad5@measurement-factory.com>
References: <166a68fa-4fef-3a41-970f-0439ce3c0e2d@measurement-factory.com>
 <fb5ae31e-3910-b8dd-8ab3-5e4e61d8cad5@measurement-factory.com>
Message-ID: <0fd0b5d2-9ed0-bba0-b72c-95af9ee06f76@measurement-factory.com>

Since there have not been any objections so far, I am going
to start implementing the incremental parsing approach,
outlined here.


Eduard.

On 05.10.2018 18:34, Alex Rousskov wrote:
> I doubt that writing code to explicitly buffer the whole line before
> parsing extensions is necessary. It is definitely not desirable because
> it slows things down in_common_  cases. I would adjust the code to
> follow this sketch instead:
>
>      while (!atEof()) {
>          if (skipLineTerminator())
>              return true; // reached the end of extensions (if any)
>          if (parseChunkExtension())
>              continue; // got one extension; there may be more
>          if (tok.skipAll(NotLF) && skip(LF))
>              throw "cannot parse chunk extension"; // <garbage> CR*LF
>          return false; // need more data to finish parsing extension
>      }
>      return false; // need data to start parsing extension or CRLF
>
> where skipLineTerminator() is, essentially,
>
>      return tok.skip(CRLF)) || (relaxed_parser && tok.skipOne(LF));
>
>
> As you can see, the above sketch is optimized for the common cases and
> blindly seeks to the end of the line only in rare cases of partially
> received or malformed extensions.
>
> Please note that whether the above sketch is used incrementally is an
> _orthogonal_  question:
>
> * In incremental parsing, a successful parseChunkExtension() would
> update object state to remember the parsed extension and advance the
> parsing position to never come back to the same spot. The loop caller
> would advance the parsing position/state if (and only if) the loop
> returns true.
>
> * In non-incremental parsing, a successful parseChunkExtension() would
> update its parameter (not shown) to remember the parsed extension. The
> loop caller would update object state ("committing" that not shown
> parameter info) and advance the parsing position if (and only if) the
> loop returns true. [ Alternatively, a successful parseChunkExtension()
> would update object state directly, sometimes overwriting the previous
> (identical) value many times. The current useOriginBody code uses that
> simpler scheme. However, even with this simpler alternative, the
> advancement is controlled by the loop caller. ]
>
> Should we fix and continue to use incremental parsing here or abandon
> it? The answer probably depends on overall code simplicity. Since we
> have to use incremental parsing for parsing chunked encoding as a whole
> (as discussed in the beginning of this email), we may continue to use it
> for parsing extensions if (and only if) doing so does not complicate things.


