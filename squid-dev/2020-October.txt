From dwojslaw at redhat.com  Thu Oct 29 11:17:26 2020
From: dwojslaw at redhat.com (Damian Wojslaw)
Date: Thu, 29 Oct 2020 12:17:26 +0100
Subject: [squid-dev] rfc1738.c
Message-ID: <CAKh_g9FGr4HN8MPzPkRV8ed=QFcHyjy=RfwO-Kb0o19SxGDGyg@mail.gmail.com>

Helo

I've been recently following the PR that addresses issue with
authentication in cachemgr.cc.
It was mentioned that rfc1738_do_escape could use changing so it doesn't
return static buffer.
I'm interested in working on it. I'm also interested in getting my hands in
cachegr.cc, as it was described as neglected in the PR. This last remark
would give me hope that my speed of work wouldn't be too slow.
I'd probably require some mentoring in the process. If there are no NACKs,
I'd like to start working on it.

Any suggestions are most welcome.

Regards

-- 
Damian Wojsław
He/Him/His
Software Maintenance Engineer EMEA
irc: madwizard
@RedHat <https://twitter.com/redhat>   Red Hat
<https://www.linkedin.com/company/red-hat>  Red Hat
<https://www.facebook.com/RedHatInc>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20201029/96baaf58/attachment.htm>

From squid3 at treenet.co.nz  Thu Oct 29 11:41:18 2020
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Fri, 30 Oct 2020 00:41:18 +1300
Subject: [squid-dev] rfc1738.c
In-Reply-To: <CAKh_g9FGr4HN8MPzPkRV8ed=QFcHyjy=RfwO-Kb0o19SxGDGyg@mail.gmail.com>
References: <CAKh_g9FGr4HN8MPzPkRV8ed=QFcHyjy=RfwO-Kb0o19SxGDGyg@mail.gmail.com>
Message-ID: <b0a55914-7aac-9db7-b065-13c8d386519c@treenet.co.nz>

On 30/10/20 12:17 am, Damian Wojslaw wrote:
> Helo
> 
> I've been recently following the PR that addresses issue with 
> authentication in cachemgr.cc.
> It was mentioned that rfc1738_do_escape could use changing so it doesn't 
> return static buffer.

The latest Squid have AnyP::Uri::Encode() whic uses a caller provided 
buffer. What needs doing now is finding old rfc1738*_escape() which can 
be replaced with the new API.

For example; code like urlCanonicalCleanWithoutRequest() where the data 
is stored in an SBuf, but converted to char* in order to use the rfc1738 
API.

Also a AnyP::Uri::Decode function needs adding so we can convert the 
rfc1738_*unescape() callers too.


> I'm interested in working on it. I'm also interested in getting my hands 
> in cachegr.cc, as it was described as neglected in the PR. This last 
> remark would give me hope that my speed of work wouldn't be too slow.
> I'd probably require some mentoring in the process. If there are no 
> NACKs, I'd like to start working on it.

The cachemgr.cc code is "neglected" primarily because it is deprecated. 
It has been replaced by reports served directly in HTTP by the proxy.


Amos

From dwojslaw at redhat.com  Thu Oct 29 14:16:38 2020
From: dwojslaw at redhat.com (Damian Wojslaw)
Date: Thu, 29 Oct 2020 15:16:38 +0100
Subject: [squid-dev] rfc1738.c
In-Reply-To: <b0a55914-7aac-9db7-b065-13c8d386519c@treenet.co.nz>
References: <CAKh_g9FGr4HN8MPzPkRV8ed=QFcHyjy=RfwO-Kb0o19SxGDGyg@mail.gmail.com>
 <b0a55914-7aac-9db7-b065-13c8d386519c@treenet.co.nz>
Message-ID: <CAKh_g9GypYN925U7D2Bhk5Z+_=9Ghr_JVWMYj_P_DM6_fEsqbg@mail.gmail.com>

On Thu, Oct 29, 2020 at 12:49 PM Amos Jeffries <squid3 at treenet.co.nz> wrote:

>
> The latest Squid have AnyP::Uri::Encode() whic uses a caller provided
> buffer. What needs doing now is finding old rfc1738*_escape() which can
> be replaced with the new API.
>
> For example; code like urlCanonicalCleanWithoutRequest() where the data
> is stored in an SBuf, but converted to char* in order to use the rfc1738
> API.
>
> Also a AnyP::Uri::Decode function needs adding so we can convert the
> rfc1738_*unescape() callers too.
>

Ok, I'll get myself familiar with that.


> The cachemgr.cc code is "neglected" primarily because it is deprecated.
> It has been replaced by reports served directly in HTTP by the proxy.
>

Thank you


> Amos
>
-- 
Damian Wojsław
He/Him/His
Software Maintenance Engineer EMEA
irc: madwizard
@RedHat <https://twitter.com/redhat>   Red Hat
<https://www.linkedin.com/company/red-hat>  Red Hat
<https://www.facebook.com/RedHatInc>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20201029/258d8912/attachment.htm>

From rousskov at measurement-factory.com  Thu Oct 29 19:43:49 2020
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Thu, 29 Oct 2020 15:43:49 -0400
Subject: [squid-dev] rfc1738.c
In-Reply-To: <CAKh_g9FGr4HN8MPzPkRV8ed=QFcHyjy=RfwO-Kb0o19SxGDGyg@mail.gmail.com>
References: <CAKh_g9FGr4HN8MPzPkRV8ed=QFcHyjy=RfwO-Kb0o19SxGDGyg@mail.gmail.com>
Message-ID: <5441f580-4bc2-cbc4-2497-35b5d2db7b47@measurement-factory.com>

On 10/29/20 7:17 AM, Damian Wojslaw wrote:

> It was mentioned that rfc1738_do_escape could use changing so it doesn't
> return static buffer.

Yes. Most likely, rfc1738 family of functions should return an SBuf, but
refactoring that may require a serious effort, on several layers. This
is not the easiest Squid XXX to fix by far!

However, please do not misinterpret my comment as a NACK. Just be
prepared to move rfc1738 code into src/ where it belongs and work on
refactoring the API to remove those ugly macros and rework a
difficult-to-grok set of positive and negative flags.


> I'm also interested in getting my hands in cachegr.cc, as it was
> described as neglected in the PR.

If there may be consensus that cachemgr.cc should be removed, then
consider confirming that consensus (here) and removing cachemgr. Doing
so may be a lot easier than fixing rfc1738_do_escape().


Thank you,

Alex.

From rousskov at measurement-factory.com  Thu Oct 29 19:52:48 2020
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Thu, 29 Oct 2020 15:52:48 -0400
Subject: [squid-dev] rfc1738.c
In-Reply-To: <b0a55914-7aac-9db7-b065-13c8d386519c@treenet.co.nz>
References: <CAKh_g9FGr4HN8MPzPkRV8ed=QFcHyjy=RfwO-Kb0o19SxGDGyg@mail.gmail.com>
 <b0a55914-7aac-9db7-b065-13c8d386519c@treenet.co.nz>
Message-ID: <e2bd612a-5096-2c7c-467d-74c4bb83448d@measurement-factory.com>

On 10/29/20 7:41 AM, Amos Jeffries wrote:

> The latest Squid have AnyP::Uri::Encode() whic uses a caller provided
> buffer.

Just to avoid misunderstanding: AnyP::Uri::Encode() uses a
caller-provided buffer as _input_. So does rfc1738*_escape(), of course.
That kind of input is unavoidable and is not really the issue that
prompted my earlier comments about rfc1738_do_escape() dangers.

The primary in-scope problem with rfc1738*_escape() is the _output_
interface. If those functions cannot be completely removed, they should
return an SBuf. The exact best input interface will depend on the
callers, but it will always remain a "caller provided buffer".


HTH,

Alex.

