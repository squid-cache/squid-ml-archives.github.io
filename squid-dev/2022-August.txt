From squid3 at treenet.co.nz  Tue Aug  2 02:32:26 2022
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Tue, 2 Aug 2022 14:32:26 +1200
Subject: [squid-dev] RFC submodule repositories
In-Reply-To: <c7e8581e-8aac-afec-f61d-380266ed3caf@measurement-factory.com>
References: <8acf76b2-0ca4-bc26-07f0-24db50a1d1c4@treenet.co.nz>
 <c7e8581e-8aac-afec-f61d-380266ed3caf@measurement-factory.com>
Message-ID: <26048d32-4ec9-b23a-f50b-0f40e10f3001@treenet.co.nz>

On 1/08/22 03:09, Alex Rousskov wrote:
> On 7/31/22 00:29, Amos Jeffries wrote:
>> When PR #937 merges we will have the ability to shuffle old helpers 
>> into a separate repository that users can import as a submodule to 
>> build with their Squid as-needed.
> 
> In my experience, git submodules are a powerful feature that is rather 
> difficult to use correctly. Some of submodule aspects do not feel 
> "natural" to many humans. I am pretty sure that proper introduction of 
> submodules will require a lot of our time and nerve cells. What will we 
> optimize by introducing such a significant complication as git submodules?
> 


( So every change to Squid has to be justified as an optimization now. 
Right... )

We "optimize" future code maintenance workload with the ability to drop 
outdated helpers which are still required by a small group of users but 
no longer want to be actively developed by the core dev team.

Case in point being CERN who still require our bundled LanManager 
helper(s) for some internal needs. That requires a lot of deprecated and 
rarely touched code being maintained for only one (albeit important) 
user case.
  That code could all be shuffled to a separate repository outside the 
official Squid release, but maintained by developers that support CERN 
needs.


> 
>> What (if any) updates do we need to make to Anubis and other 
>> infrastructure so support git submodules ?
> 
> That answer probably depends, in part, on what support guarantees we are 
> going to issue for those submodules and on what our submodule update 
> policy will be. Integrating two or more git repositories together is a 
> complicated issue...
> 

IMO we should maintain at least one helper officially as a submodule to 
ensure the git submodule mechanisms remain viable for distributors as a 
modern replacement for the old squid-2 way of building their custom helpers.


Cheers
Amos

From stu at spacehopper.org  Tue Aug  2 07:35:20 2022
From: stu at spacehopper.org (Stuart Henderson)
Date: Tue, 2 Aug 2022 07:35:20 -0000 (UTC)
Subject: [squid-dev] RFC submodule repositories
References: <8acf76b2-0ca4-bc26-07f0-24db50a1d1c4@treenet.co.nz>
 <c7e8581e-8aac-afec-f61d-380266ed3caf@measurement-factory.com>
 <26048d32-4ec9-b23a-f50b-0f40e10f3001@treenet.co.nz>
Message-ID: <slrntehkto.fat.stu.lists@naiad.spacehopper.org>

As a package maintainer: the workflow for package builds on many OS uses
tar downloads and if these are produced by git-archive (e.g. as done on
github's "download source" links) they don't include submodules.

So, if used for some helper which is normally included in OS packages,
submodules can make it harder to test changes from git commits (for
example, to see if a recently committed change fixes a problem).

Of course a tar can be built locally if needed, just adds some extra
steps, and perhaps there are benefits from submodules to outweigh this.



From gkinkie at gmail.com  Tue Aug  2 08:33:17 2022
From: gkinkie at gmail.com (Francesco Chemolli)
Date: Tue, 2 Aug 2022 09:33:17 +0100
Subject: [squid-dev] RFC submodule repositories
In-Reply-To: <26048d32-4ec9-b23a-f50b-0f40e10f3001@treenet.co.nz>
References: <8acf76b2-0ca4-bc26-07f0-24db50a1d1c4@treenet.co.nz>
 <c7e8581e-8aac-afec-f61d-380266ed3caf@measurement-factory.com>
 <26048d32-4ec9-b23a-f50b-0f40e10f3001@treenet.co.nz>
Message-ID: <CA+Y8hcNKcfzs_zR4X12-LvLv6NnXO0VUQ4-wK8LqoZv+VVO-tQ@mail.gmail.com>

>
>
> ( So every change to Squid has to be justified as an optimization now.
> Right... )
>

My experience with submodules is not great; I often ended up with detached
sub-branches that were a pain to deal with. Given that, I am trying to
understand if it's worth it, that's all. As opposed to, say, looking for a
way to installing the bits that are essential to building helpers in some
sort of squid-dev package, so we can just spin off completely those helpers
we don't want to maintain


-- 
    Francesco
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20220802/e426d786/attachment.htm>

From ngtech1ltd at gmail.com  Tue Aug  2 15:16:14 2022
From: ngtech1ltd at gmail.com (ngtech1ltd at gmail.com)
Date: Tue, 2 Aug 2022 18:16:14 +0300
Subject: [squid-dev] RFC submodule repositories
In-Reply-To: <26048d32-4ec9-b23a-f50b-0f40e10f3001@treenet.co.nz>
References: <8acf76b2-0ca4-bc26-07f0-24db50a1d1c4@treenet.co.nz>
 <c7e8581e-8aac-afec-f61d-380266ed3caf@measurement-factory.com>
 <26048d32-4ec9-b23a-f50b-0f40e10f3001@treenet.co.nz>
Message-ID: <005401d8a682$cf041460$6d0c3d20$@gmail.com>

Hey Amos,

I believe we are trying to benefit something from the updates.
CERN have been using my packages for a very long time now.
But as you can see their updates are at:
http://linuxsoft.cern.ch/mirror/

and it states latest update at 2019 so they have not upgraded their mirror for at-least 2-3 years now and I believe that they can stand by them self.
I am merely packaging for who ever needs it.
>From my point of view there are core helpers and deprecates helpers.
For example ssl_crtd is one of the squid core helpers for couple groups for a very long time now.

I can try to pack squid helpers as a stand alone package given that I will have something like what you suggest.

We can try to make a list of the helpers and suggest a pass vote per each of them.

Eliezer

----
Eliezer Croitoru
NgTech, Tech Support
Mobile: +972-5-28704261
Email: ngtech1ltd at gmail.com
Web: https://ngtech.co.il/
My-Tube: https://tube.ngtech.co.il/

-----Original Message-----
From: squid-dev <squid-dev-bounces at lists.squid-cache.org> On Behalf Of Amos Jeffries
Sent: Tuesday, 2 August 2022 5:32
To: squid-dev at lists.squid-cache.org
Subject: Re: [squid-dev] RFC submodule repositories

On 1/08/22 03:09, Alex Rousskov wrote:
> On 7/31/22 00:29, Amos Jeffries wrote:
>> When PR #937 merges we will have the ability to shuffle old helpers 
>> into a separate repository that users can import as a submodule to 
>> build with their Squid as-needed.
> 
> In my experience, git submodules are a powerful feature that is rather 
> difficult to use correctly. Some of submodule aspects do not feel 
> "natural" to many humans. I am pretty sure that proper introduction of 
> submodules will require a lot of our time and nerve cells. What will we 
> optimize by introducing such a significant complication as git submodules?
> 


( So every change to Squid has to be justified as an optimization now. 
Right... )

We "optimize" future code maintenance workload with the ability to drop 
outdated helpers which are still required by a small group of users but 
no longer want to be actively developed by the core dev team.

Case in point being CERN who still require our bundled LanManager 
helper(s) for some internal needs. That requires a lot of deprecated and 
rarely touched code being maintained for only one (albeit important) 
user case.
  That code could all be shuffled to a separate repository outside the 
official Squid release, but maintained by developers that support CERN 
needs.


> 
>> What (if any) updates do we need to make to Anubis and other 
>> infrastructure so support git submodules ?
> 
> That answer probably depends, in part, on what support guarantees we are 
> going to issue for those submodules and on what our submodule update 
> policy will be. Integrating two or more git repositories together is a 
> complicated issue...
> 

IMO we should maintain at least one helper officially as a submodule to 
ensure the git submodule mechanisms remain viable for distributors as a 
modern replacement for the old squid-2 way of building their custom helpers.


Cheers
Amos
_______________________________________________
squid-dev mailing list
squid-dev at lists.squid-cache.org
http://lists.squid-cache.org/listinfo/squid-dev


From rousskov at measurement-factory.com  Tue Aug  2 16:40:57 2022
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Tue, 2 Aug 2022 12:40:57 -0400
Subject: [squid-dev] RFC submodule repositories
In-Reply-To: <26048d32-4ec9-b23a-f50b-0f40e10f3001@treenet.co.nz>
References: <8acf76b2-0ca4-bc26-07f0-24db50a1d1c4@treenet.co.nz>
 <c7e8581e-8aac-afec-f61d-380266ed3caf@measurement-factory.com>
 <26048d32-4ec9-b23a-f50b-0f40e10f3001@treenet.co.nz>
Message-ID: <be77cdd9-c270-14c2-f53c-e17d28096100@measurement-factory.com>

On 8/1/22 22:32, Amos Jeffries wrote:
> On 1/08/22 03:09, Alex Rousskov wrote:
>> On 7/31/22 00:29, Amos Jeffries wrote:
>>> When PR #937 merges we will have the ability to shuffle old helpers 
>>> into a separate repository that users can import as a submodule to 
>>> build with their Squid as-needed.

>> What will we optimize by introducing such a significant
>> complication as git submodules?


> ( So every change to Squid has to be justified as an optimization now. 
> Right... )

The verb "optimize" is generally defined as "to make the best or most 
efficient use". In computing, that definition is relaxed to mean any 
improvement (not necessarily the "best"). Both definitions would work in 
this context, but I used "optimize" in the latter ("to improve") sense. 
I hope we can all agree that Squid changes should improve Squid.


> We "optimize" future code maintenance workload with the ability to drop 
> outdated helpers which are still required by a small group of users but 
> no longer want to be actively developed by the core dev team.

N.B. Unless something else changes, simply moving "dropped" helper code 
to a submodule would require reviewing dropped helper update PRs in an 
aggregate "take it or leave it" mode. No dropped helper code change 
requests would be appropriate for such "updated dropped helper H to 
version V" pull requests. I do not know whether that will improve core 
developer lives, but it is likely to require making more judgement calls 
than we have to make today, and jusdgement calls can be especially 
controversial/painful.

How would moving "dropped" helper code to a submodule help core 
developers? AFAICT, just moving a dropped helper into a submodule 
creates more work for core developers because they now have one more 
thing to worry about. Git submodules (and git in general!) have very 
little impact on making "./bootstrap.sh && ./configure && make && sudo 
make install" produce the desired outcome -- with or without submodules, 
we still need to make the whole thing build and work correctly. Thus, 
any improvements must be rooted in some other, yet unspecified Project 
changes besides moving some helper code into submodules. What other 
changes will make that extra core developer work worth it?

In other words, it is possible that the RFC associates "git submodules" 
with some unspecified changes outside the Squid git repository 
structure[1] that RFC readers cannot guess. Identifying any important 
changes the RFC associates with git submodules may help us make progress.

[1] For example, one common submodule use case is having different 
users/permissions for different parts of the Project -- essentially 
having multiple core developer teams with varying levels of access to 
critical Project resources, but all collaborating under one Project 
roof. It is often impractical to achieve that kind of access controls 
within one git/GitHub repository. I am not saying this example applies 
to this RFC -- I am just illustrating how submodules may facilitate 
important changes outside of low-level git mechanisms themselves.


> Case in point being CERN who still require our bundled LanManager 
> helper(s) for some internal needs. That requires a lot of deprecated and 
> rarely touched code being maintained for only one (albeit important) 
> user case.
>  ?That code could all be shuffled to a separate repository outside the 
> official Squid release, but maintained by developers that support CERN 
> needs.

Sure, but we clearly do not need git submodules to "shuffle LanManager
helper(s) code to a separate repository". Why submodules? The RFC 
implies, without elaborating, that submodules are the right solution to 
some problem. Several RFC reviewers correctly point out that submodules 
are associated with significant "cons". I am asking what the "pros" are. 
It is a very reasonable request IMO.

Agreeing on the _problem_ definition may also help shorten the number of 
iterations required to reach consensus. What do we really mean when we 
say that "dropped" helpers are "not actively developed by core 
developers"? To me, the lack of core developer involvement implies that 
PRs against Squid master may break "dropped" helpers and that "dropped" 
helper needs are assigned much lower weight compared to "native" Squid 
improvement needs, but others are likely to interpret that phrase 
differently.


>>> What (if any) updates do we need to make to Anubis and other 
>>> infrastructure so support git submodules ?
>>
>> That answer probably depends, in part, on what support guarantees we 
>> are going to issue for those submodules and on what our submodule 
>> update policy will be.

> IMO we should maintain at least one helper officially as a submodule to 
> ensure the git submodule mechanisms remain viable for distributors as a 
> modern replacement for the old squid-2 way of building their custom 
> helpers.

The above paragraph does not supply the information required for me to 
answer your original question. To make progress, let's temporary assume, 
for simplicity sake, that all "dropped" helpers are moved to "officially 
maintained" submodules. Now, will "./bootstrap...make install" sequence 
be allowed to ignore submodule existence? Ignore build failures related 
to submodules? Treat submodule code specially in some other way?

If the answer to those questions is "no", then the automation/CI changes 
(that I can think of) would revolve around adding commands to fetch 
submodules before running that sequence (e.g., "git submodules 
update..."). Doing so should be easy in our current Semaphore CI. I am 
not sure about Jenkins.

Alex.

From pponakanti at roblox.com  Mon Aug  8 23:19:29 2022
From: pponakanti at roblox.com (Praveen Ponakanti)
Date: Mon, 8 Aug 2022 16:19:29 -0700
Subject: [squid-dev] Fwd: [squid-users] Scaling concurrent TCP sessions
 beyond ephemeral port range
In-Reply-To: <97b1c32d-2172-d2fa-bfde-dd8c850c799a@measurement-factory.com>
References: <CACabJxP86UGm_dm+PbyckMWoxiis2fc87jwyQq+uXHXAKm=AfA@mail.gmail.com>
 <f7f62043-e384-0395-6d0f-ff4d510b0baf@measurement-factory.com>
 <CACabJxNv5+o7AiY-tfuJ=_V4ZBNEks=dX4ki2YQBHcPPpUrABg@mail.gmail.com>
 <5856354a-393a-0803-e3e6-da29f8f7d8b1@treenet.co.nz>
 <CACabJxMt1wkt7cUJH00WpbVK9wA2-8odhS8QrMGPhe8w4SUQpw@mail.gmail.com>
 <97b1c32d-2172-d2fa-bfde-dd8c850c799a@measurement-factory.com>
Message-ID: <CACabJxNuSa3y2C1dW_RQEvqe8q8kjQqQ=WfyKzSqvRCHQ3wcxw@mail.gmail.com>

Hi,

Moving this thread to the squid-dev list as the PR below has been opened to
propose a fix to the ephemeral port exhaustion problem we had experienced
with ver 5.5.
https://github.com/squid-cache/squid/pull/1115

Thanks to Alex and others for providing pointers in this regards. Apologies
if I have missed out any requirements on the PR, please let me know and I
can update as needed. The fix proposed is based on the post below from
Cloudflare that had experienced this issue with their own applications.
https://blog.cloudflare.com/how-to-stop-running-out-of-ephemeral-ports-and-start-to-love-long-lived-connections/

We were hitting the errors stated on the PR as soon as the system exhausted
1x ip_local_port_range concurrent TCP sessions. With this fix, we have been
able to scale well beyond that ( > 100k concurrent outbound TCP sessions).
This patch has been running in our production environment for close to 2
months without any new issues.

Please let me know if you have any questions, and again apologize if I
forgot to include something before or with the PR.

Thanks
Praveen

---------- Forwarded message ---------
From: Alex Rousskov <rousskov at measurement-factory.com>
Date: Tue, Jun 21, 2022 at 2:11 PM
Subject: Re: [squid-users] Scaling concurrent TCP sessions beyond ephemeral
port range
To: <squid-users at lists.squid-cache.org>


On 6/19/22 12:48, Praveen Ponakanti wrote:

> What is the process to have this code patch upstreamed for future squid
> versions?

In short, just post a quality pull request on GitHub (or find somebody
who can guide your code towards official acceptance for you). For
details, please see https://wiki.squid-cache.org/MergeProcedure


Thank you,

Alex.


> On Fri, May 20, 2022 at 9:31 PM Amos Jeffries <squid3 at treenet.co.nz
> wrote:
>
>     On 20/05/22 19:44, Praveen Ponakanti wrote:
>      > Hi Alex,
>      >
>      > Thanks for going through several steps to help mitigate src port
>      > exhaustion. We are looking to achieve 400-500% more
>      > concurrent connections if we could :) as there is a
>     significant buffer
>      > on the available CPU.
>
>     Then you require at least 4, maybe 5, IP addresses to handle that many
>     concurrent connections with Squid.
>
>
> We would like to investigate going beyond the ephemeral port range for
> some specific destination IP:PORT addresses. For that it appears squid
> does not round-robin requests if we use multiple tcp_outgoing_addresses.
> We could use ACL?s to pick a different outbound IP based on the clients
> source IP, however that is not very ideal in our environment as our
> clients aren?t always equally split by subnet. However, if we could
> split by the client?s source port that might help achieve this. For
> example something like:
>
>
> acl pool1 clientport 0-32768
>
> acl pool2 clientport 32769-65536
>
>
> tcp_outgoing_address 10.1.0.1 pool1
>
> tcp_outgoing_address 10.1.0.2 pool2
>
>
> Squid's ACLs currently do not allow filtering by the client's source
> port. We could look into a separate patch to add this functionality to
> squid?s ACL code if that makes sense. Or is there a better way to
> achieve this?
>
>
> Thanks
>
> Praveen
>
>
>      > The option to use multiple tcp_outoing_addresses appears to be
>     promising
>      > along with some tweaks to the TCP timeouts. I guess we could use
>     ACLs to
>      > pick a different outbound IP based on the requesting client's
>     prefix. We
>      > had not considered that option as the ephemeral ports were no
longer
>      > available to other applications when squid uses most of them with a
>      > single outbound IP configured. We are also looking to modify the
>     code to
>      > use the IP_BIND_ADDRESS_NO_PORT sockopt as that could help delay
>     port
>      > assignment with the bind() call on the outbound TCP sessions (to
>      > hopefully allow access to the 4-tuple on the socket).
>
>     Patches welcome.
>
>     However, please be aware that use of the 4-tuple is often no different
>     from the 3-tuple since the dst-port is typically identical for all
>     outgoing traffic to a given dst-IP.
>
>
>     Cheers
>     Amos
>     _______________________________________________
>     squid-users mailing list
>     squid-users at lists.squid-cache.org
>     <mailto:squid-users at lists.squid-cache.org>
>     http://lists.squid-cache.org/listinfo/squid-users
>     <http://lists.squid-cache.org/listinfo/squid-users>
>
>
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> http://lists.squid-cache.org/listinfo/squid-users

_______________________________________________
squid-users mailing list
squid-users at lists.squid-cache.org
http://lists.squid-cache.org/listinfo/squid-users
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20220808/285905b3/attachment.htm>

From marcus.kool at urlfilterdb.com  Mon Aug 29 14:25:34 2022
From: marcus.kool at urlfilterdb.com (Marcus Kool)
Date: Mon, 29 Aug 2022 15:25:34 +0100
Subject: [squid-dev] squid website certificate error
Message-ID: <ab92ba46-bce6-c2b4-c64a-8d8738a80090@urlfilterdb.com>

Has anybody already complained that the certificates for squid-cache.org and www.squid-cache.org are messed up?

Marcus


From gkinkie at gmail.com  Mon Aug 29 17:52:59 2022
From: gkinkie at gmail.com (Francesco Chemolli)
Date: Mon, 29 Aug 2022 18:52:59 +0100
Subject: [squid-dev] squid website certificate error
In-Reply-To: <ab92ba46-bce6-c2b4-c64a-8d8738a80090@urlfilterdb.com>
References: <ab92ba46-bce6-c2b4-c64a-8d8738a80090@urlfilterdb.com>
Message-ID: <CA+Y8hcP+t2F=u11c3HVSxjkjHVFQrY9wz+7f=ua9FwiJsAOCDQ@mail.gmail.com>

The squid website is not supposed to be over https, because it?s served by
multiple mirrors not necessarily under the project?s control.
We have some ideas on how to change this but need the developer time to do
it.
Help is welcome :)

On Mon, 29 Aug 2022 at 15:25, Marcus Kool <marcus.kool at urlfilterdb.com>
wrote:

> Has anybody already complained that the certificates for squid-cache.org
> and www.squid-cache.org are messed up?
>
> Marcus
>
> _______________________________________________
> squid-dev mailing list
> squid-dev at lists.squid-cache.org
> http://lists.squid-cache.org/listinfo/squid-dev
>
-- 
@mobile
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20220829/aaa47147/attachment.htm>

From marcus.kool at urlfilterdb.com  Mon Aug 29 19:25:13 2022
From: marcus.kool at urlfilterdb.com (Marcus Kool)
Date: Mon, 29 Aug 2022 20:25:13 +0100
Subject: [squid-dev] squid website certificate error
In-Reply-To: <CA+Y8hcP+t2F=u11c3HVSxjkjHVFQrY9wz+7f=ua9FwiJsAOCDQ@mail.gmail.com>
References: <ab92ba46-bce6-c2b4-c64a-8d8738a80090@urlfilterdb.com>
 <CA+Y8hcP+t2F=u11c3HVSxjkjHVFQrY9wz+7f=ua9FwiJsAOCDQ@mail.gmail.com>
Message-ID: <adae1a34-9ea3-a0da-e523-e927bb5f3185@urlfilterdb.com>

I typed the name of the website without https in the address bar.? I am not sure how it was redirected to the https address (could be my browser history or web server).

In Firefox and Vivaldi I get the correct site.? When I type 'www.squid-cache.org' in the address bar of Chrome it goes very wrong showing the contents of https://grass.osgeo.org/.? Maybe Chrome tries 
https first and then http.

Marcus

On 29/08/2022 18:52, Francesco Chemolli wrote:
> The squid website is not supposed to be over https, because it?s served by multiple mirrors not necessarily under the project?s control.
> We have some ideas on how to change this but need the developer time to do it.
> Help is welcome :)
>
> On Mon, 29 Aug 2022 at 15:25, Marcus Kool <marcus.kool at urlfilterdb.com> wrote:
>
>     Has anybody already complained that the certificates for squid-cache.org <http://squid-cache.org> and www.squid-cache.org <http://www.squid-cache.org> are messed up?
>
>     Marcus
>
>     _______________________________________________
>     squid-dev mailing list
>     squid-dev at lists.squid-cache.org
>     http://lists.squid-cache.org/listinfo/squid-dev
>
> -- 
> @mobile
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20220829/3c8132f0/attachment.htm>

