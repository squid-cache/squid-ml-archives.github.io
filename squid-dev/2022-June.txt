From gkinkie at gmail.com  Mon Jun  6 07:34:22 2022
From: gkinkie at gmail.com (Francesco Chemolli)
Date: Mon, 6 Jun 2022 08:34:22 +0100
Subject: [squid-dev] PR backlog
Message-ID: <CA+Y8hcP+7Q1pCi1ShROAKVT6SEN8ubtbHBH5OjoAJWo6Mcz7Qw@mail.gmail.com>

Hi all,
   we have quite a big backlog of open PRs (
https://github.com/squid-cache/squid/pulls?page=1&q=is%3Apr+is%3Aopen). How
about doing a 15-days sprint and clearing it or at least trimming it
significantly?

-- 
    Francesco
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20220606/d9d2a5b8/attachment.htm>

From rousskov at measurement-factory.com  Mon Jun  6 17:19:59 2022
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Mon, 6 Jun 2022 13:19:59 -0400
Subject: [squid-dev] PR backlog
In-Reply-To: <CA+Y8hcP+7Q1pCi1ShROAKVT6SEN8ubtbHBH5OjoAJWo6Mcz7Qw@mail.gmail.com>
References: <CA+Y8hcP+7Q1pCi1ShROAKVT6SEN8ubtbHBH5OjoAJWo6Mcz7Qw@mail.gmail.com>
Message-ID: <3b8ef761-cab4-6051-a920-fde237bfc73b@measurement-factory.com>

On 6/6/22 03:34, Francesco Chemolli wrote:

>  ? ?we have quite a big backlog of open PRs 
> (https://github.com/squid-cache/squid/pulls?page=1&q=is%3Apr+is%3Aopen). How 
> about doing a 15-days sprint and clearing it or at least trimming it 
> significantly?

I am happy to participate in any way you find useful! Please let me know 
how I can help.

FWIW, I know of a handful of PRs that need my attention (e.g., #1067, 
#980, #694, #755, #736). I am already working on some of them (and will 
resume working on others ASAP).

Alex.

From squid3 at treenet.co.nz  Tue Jun  7 16:29:52 2022
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Wed, 8 Jun 2022 04:29:52 +1200
Subject: [squid-dev] PR backlog
In-Reply-To: <3b8ef761-cab4-6051-a920-fde237bfc73b@measurement-factory.com>
References: <CA+Y8hcP+7Q1pCi1ShROAKVT6SEN8ubtbHBH5OjoAJWo6Mcz7Qw@mail.gmail.com>
 <3b8ef761-cab4-6051-a920-fde237bfc73b@measurement-factory.com>
Message-ID: <27269a0f-923e-3de4-9f66-862603c48401@treenet.co.nz>

On 7/06/22 05:19, Alex Rousskov wrote:
> On 6/6/22 03:34, Francesco Chemolli wrote:
> 
>> ?? ?we have quite a big backlog of open PRs 
>> (https://github.com/squid-cache/squid/pulls?page=1&q=is%3Apr+is%3Aopen). 
>> How about doing a 15-days sprint and clearing it or at least trimming 
>> it significantly?
> 
> I am happy to participate in any way you find useful! Please let me know 
> how I can help.
> 
> FWIW, I know of a handful of PRs that need my attention (e.g., #1067, 
> #980, #694, #755, #736). I am already working on some of them (and will 
> resume working on others ASAP).
> 


All my PRs are now blocked behind lack of #694 breaking tests on Debian.

Once that merges I will be able to work on most of the other PRs. Though 
some are still blocked behind #937 so I will be prioritizing that.

Amos

From gkinkie at gmail.com  Tue Jun  7 21:53:26 2022
From: gkinkie at gmail.com (Francesco Chemolli)
Date: Tue, 7 Jun 2022 22:53:26 +0100
Subject: [squid-dev] PR backlog
In-Reply-To: <3b8ef761-cab4-6051-a920-fde237bfc73b@measurement-factory.com>
References: <CA+Y8hcP+7Q1pCi1ShROAKVT6SEN8ubtbHBH5OjoAJWo6Mcz7Qw@mail.gmail.com>
 <3b8ef761-cab4-6051-a920-fde237bfc73b@measurement-factory.com>
Message-ID: <CA+Y8hcObm4PJMrrwVaXho07k5+6_xcNv6Pq5L_QsP+rn7EdO3Q@mail.gmail.com>

This is exactly what I meant and what I see happening.
I'd like us to concentrate on clearing as much as possible the PR backlog
to capitalise on the work many have put in there, prioritising that over
new feature work for a few days.
The conversation has already picked up, that's great!

On Mon, Jun 6, 2022 at 6:20 PM Alex Rousskov <
rousskov at measurement-factory.com> wrote:

> On 6/6/22 03:34, Francesco Chemolli wrote:
>
> >     we have quite a big backlog of open PRs
> > (https://github.com/squid-cache/squid/pulls?page=1&q=is%3Apr+is%3Aopen).
> How
> > about doing a 15-days sprint and clearing it or at least trimming it
> > significantly?
>
> I am happy to participate in any way you find useful! Please let me know
> how I can help.
>
> FWIW, I know of a handful of PRs that need my attention (e.g., #1067,
> #980, #694, #755, #736). I am already working on some of them (and will
> resume working on others ASAP).
>
> Alex.
> _______________________________________________
> squid-dev mailing list
> squid-dev at lists.squid-cache.org
> http://lists.squid-cache.org/listinfo/squid-dev
>


-- 
    Francesco
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20220607/c572cd16/attachment.htm>

From gkinkie at gmail.com  Wed Jun  8 08:55:06 2022
From: gkinkie at gmail.com (Francesco Chemolli)
Date: Wed, 8 Jun 2022 09:55:06 +0100
Subject: [squid-dev] PR backlog
In-Reply-To: <CA+Y8hcObm4PJMrrwVaXho07k5+6_xcNv6Pq5L_QsP+rn7EdO3Q@mail.gmail.com>
References: <CA+Y8hcP+7Q1pCi1ShROAKVT6SEN8ubtbHBH5OjoAJWo6Mcz7Qw@mail.gmail.com>
 <3b8ef761-cab4-6051-a920-fde237bfc73b@measurement-factory.com>
 <CA+Y8hcObm4PJMrrwVaXho07k5+6_xcNv6Pq5L_QsP+rn7EdO3Q@mail.gmail.com>
Message-ID: <CA+Y8hcPFHfGu30OGa=_ZnBvhnBE1qit8=DD5pPBSndrcKN99Vw@mail.gmail.com>

Could we prioritise reviewing and merging PR#694
<https://github.com/squid-cache/squid/pull/694>?
That's blocking us from starting to test on Fedora 36, Fedora Rawhide,
current Gentoo, current Opensuse tumbleweed, Debian unstable and Ubuntu
Jammy


On Tue, Jun 7, 2022 at 10:53 PM Francesco Chemolli <gkinkie at gmail.com>
wrote:

> This is exactly what I meant and what I see happening.
> I'd like us to concentrate on clearing as much as possible the PR backlog
> to capitalise on the work many have put in there, prioritising that over
> new feature work for a few days.
> The conversation has already picked up, that's great!
>
> On Mon, Jun 6, 2022 at 6:20 PM Alex Rousskov <
> rousskov at measurement-factory.com> wrote:
>
>> On 6/6/22 03:34, Francesco Chemolli wrote:
>>
>> >     we have quite a big backlog of open PRs
>> > (https://github.com/squid-cache/squid/pulls?page=1&q=is%3Apr+is%3Aopen).
>> How
>> > about doing a 15-days sprint and clearing it or at least trimming it
>> > significantly?
>>
>> I am happy to participate in any way you find useful! Please let me know
>> how I can help.
>>
>> FWIW, I know of a handful of PRs that need my attention (e.g., #1067,
>> #980, #694, #755, #736). I am already working on some of them (and will
>> resume working on others ASAP).
>>
>> Alex.
>> _______________________________________________
>> squid-dev mailing list
>> squid-dev at lists.squid-cache.org
>> http://lists.squid-cache.org/listinfo/squid-dev
>>
>
>
> --
>     Francesco
>


-- 
    Francesco
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20220608/d543f578/attachment.htm>

From rousskov at measurement-factory.com  Wed Jun  8 13:39:01 2022
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Wed, 8 Jun 2022 09:39:01 -0400
Subject: [squid-dev] PR backlog
In-Reply-To: <CA+Y8hcObm4PJMrrwVaXho07k5+6_xcNv6Pq5L_QsP+rn7EdO3Q@mail.gmail.com>
References: <CA+Y8hcP+7Q1pCi1ShROAKVT6SEN8ubtbHBH5OjoAJWo6Mcz7Qw@mail.gmail.com>
 <3b8ef761-cab4-6051-a920-fde237bfc73b@measurement-factory.com>
 <CA+Y8hcObm4PJMrrwVaXho07k5+6_xcNv6Pq5L_QsP+rn7EdO3Q@mail.gmail.com>
Message-ID: <1fdab143-32cd-a4a0-b0ee-a5b54650a740@measurement-factory.com>

On 6/7/22 17:53, Francesco Chemolli wrote:
> This?is exactly what I meant and what I see happening.
> I'd like us to concentrate on clearing as much as possible the PR 
> backlog to capitalise on the work many have put in there, prioritising 
> that over new feature work for a few days.

I am not sure, but I sense that you are not satisfied with the list of 
the PRs that I said I am working on. If that is the case, you may want 
to clarify what you think I should be doing instead. FWIW, I thought 
that working on the listed PRs will reduce the number of PRs and, hence, 
reduce "backlog of open PRs" which, I thought, was what your 15-day 
sprint suggestion was about...


 > Could we prioritise reviewing and merging PR#694?

As you know, that is one of the PRs on top of my list. I do not think I 
can "prioritize" it any more than I already am. I even offered to 
implement some of the required changes! Again, if you think I should be 
doing something else instead, please discuss!


Thank you,

Alex.


> On Mon, Jun 6, 2022 at 6:20 PM Alex Rousskov wrote:
> 
>     On 6/6/22 03:34, Francesco Chemolli wrote:
> 
>      >? ? ?we have quite a big backlog of open PRs
>      >
>     (https://github.com/squid-cache/squid/pulls?page=1&q=is%3Apr+is%3Aopen
>     <https://github.com/squid-cache/squid/pulls?page=1&q=is%3Apr+is%3Aopen>).
>     How
>      > about doing a 15-days sprint and clearing it or at least trimming it
>      > significantly?
> 
>     I am happy to participate in any way you find useful! Please let me
>     know
>     how I can help.
> 
>     FWIW, I know of a handful of PRs that need my attention (e.g., #1067,
>     #980, #694, #755, #736). I am already working on some of them (and will
>     resume working on others ASAP).
> 
>     Alex.
>     _______________________________________________
>     squid-dev mailing list
>     squid-dev at lists.squid-cache.org <mailto:squid-dev at lists.squid-cache.org>
>     http://lists.squid-cache.org/listinfo/squid-dev
>     <http://lists.squid-cache.org/listinfo/squid-dev>
> 
> 
> 
> -- 
>  ? ? Francesco


From gkinkie at gmail.com  Wed Jun  8 13:48:17 2022
From: gkinkie at gmail.com (Francesco Chemolli)
Date: Wed, 8 Jun 2022 14:48:17 +0100
Subject: [squid-dev] PR backlog
In-Reply-To: <1fdab143-32cd-a4a0-b0ee-a5b54650a740@measurement-factory.com>
References: <CA+Y8hcP+7Q1pCi1ShROAKVT6SEN8ubtbHBH5OjoAJWo6Mcz7Qw@mail.gmail.com>
 <3b8ef761-cab4-6051-a920-fde237bfc73b@measurement-factory.com>
 <CA+Y8hcObm4PJMrrwVaXho07k5+6_xcNv6Pq5L_QsP+rn7EdO3Q@mail.gmail.com>
 <1fdab143-32cd-a4a0-b0ee-a5b54650a740@measurement-factory.com>
Message-ID: <CA+Y8hcPHGvCcecmNKEaDusDoATVA4QafAnEeioCv_Yy7ptQjww@mail.gmail.com>

On Wed, Jun 8, 2022 at 2:39 PM Alex Rousskov <
rousskov at measurement-factory.com> wrote:

> On 6/7/22 17:53, Francesco Chemolli wrote:
> > This is exactly what I meant and what I see happening.
> > I'd like us to concentrate on clearing as much as possible the PR
> > backlog to capitalise on the work many have put in there, prioritising
> > that over new feature work for a few days.
>
> I am not sure, but I sense that you are not satisfied with the list of
> the PRs that I said I am working on. If that is the case, you may want
> to clarify what you think I should be doing instead. FWIW, I thought
> that working on the listed PRs will reduce the number of PRs and, hence,
> reduce "backlog of open PRs" which, I thought, was what your 15-day
> sprint suggestion was about...
>

No, I am very happy about the sprint we are doing.
My point is that that one PR has IMO a high level of urgency and I wanted
to highlight that.
This said, as we are a volunteer organisation, we do what we feel like and
there is nothing wrong with that


>
>  > Could we prioritise reviewing and merging PR#694?
>
> As you know, that is one of the PRs on top of my list. I do not think I
> can "prioritize" it any more than I already am. I even offered to
> implement some of the required changes! Again, if you think I should be
> doing something else instead, please discuss!
>

Sorry, I had failed to match that with the list. My bad, no need to change
anything

Thank you and Amos for responding to the call for action!

-- 
    Francesco
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20220608/edb24742/attachment.htm>

From rousskov at measurement-factory.com  Thu Jun 23 13:12:52 2022
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Thu, 23 Jun 2022 09:12:52 -0400
Subject: [squid-dev] RFC: Class section/member order
Message-ID: <3f3add8c-72a6-52e7-90d2-b46eeeb50c89@measurement-factory.com>

Spam detection software, running on the system "master.squid-cache.org",
has identified this incoming email as possible spam.  The original
message has been attached to this so you can view it or label
similar future email.  If you have any questions, see
the administrator of that system for details.

Content preview:  Hello, Amos and I disagreed[1] regarding the existing guidelines
   for section/member order in C++ class declarations. To resolve that disagreement,
   this email proposes the order for future use. ----- 

Content analysis details:   (105.0 points, 5.0 required)

 pts rule name              description
---- ---------------------- --------------------------------------------------
 105 SQUID_ML_SPAM_01       No description available.
 0.0 UNPARSEABLE_RELAY      Informational: message has unparseable relay
                            lines
-0.0 T_SCC_BODY_TEXT_LINE   No description available.


-------------- next part --------------
An embedded message was scrubbed...
From: Alex Rousskov <rousskov at measurement-factory.com>
Subject: RFC: Class section/member order
Date: Thu, 23 Jun 2022 09:12:52 -0400
Size: 4234
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20220623/614c6ce2/attachment.eml>

From rousskov at measurement-factory.com  Thu Jun 23 13:37:04 2022
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Thu, 23 Jun 2022 09:37:04 -0400
Subject: [squid-dev] RFC: Class section/member _order_
Message-ID: <003d2899-8300-0d4b-cc44-8f9e623429c0@measurement-factory.com>

Hello,

     Amos and I disagreed[1] regarding the existing guidelines for 
section/member order in C++ class declarations. To resolve that 
disagreement, this email proposes the order for future use.

-----

1. Class "sections" order (by member access specifiers): public, 
protected, private. Each section, if present, declared once. Omit 
sections that would be empty. Rationale: List most commonly reused, most 
important things fist. In this context, those are public class 
interfaces. The private section is the least important implementation 
detail as far as the notion of a C++ class is concerned.


2. Within each section, the recommended member order is defined below. 
Rationale: Group similar things together to facilitate searching and 
highlight differences. List things most likely to be reused (by other 
class members) and most important/influential things higher.

* friendship declarations
* type and aliases declarations; nested classes/structs/unions
* static member functions
* constructors and assignment operators
* destructors (just one until C++20)
* other/regular non-static member functions except overrides
* overrides (see item 3 below)
* static data members
* non-static data members


3. Overrides are a special case where we do not expect member 
descriptions but do expect a reference to the corresponding API as 
sketched below. Overrides are grouped by the (direct or indirect) parent 
that _introduced_ the corresponding API method(s) (i.e. the parent class 
that declared the virtual method but could _not_ use an override keyword 
in that declaration). Rationale: Provide API context and facilitate 
searching for member descriptions without chasing overrides through parents.

     /* Baz API */
     overrides for Baz-introduced methods (excluding destructors)

     /* Bar API */
     overrides for Bar-introduced methods (excluding destructors)


4. Caveats

The above rules are not meant to force authors to include any access 
specifiers or members that the code does not actually need (except the 
"private" specifier should be mentioned explicitly in class declarations 
that have only private members -- do not rely on the class default 
access specifier being "private").

Squid has some legacy code that forces CBDATA-related declarations to be 
hoisted to the very top of the class, into the "unnamed" section. This 
is an exception to the above rules. Eventually, we will stop doing that, 
but we should continue doing that for consistency sake until the 
offending CBDATA macros are gone.

Like any style rules, these rules are not comprehensive. If your use 
case is not explicitly covered, then look around for similar Squid code 
and try to be consistent and/or reasonable.

-----

Most of the above rules are arbitrary but common in the industry[2,3].

[1] https://github.com/squid-cache/squid/pull/1067#discussion_r889864925
[2] https://stackoverflow.com/q/308581
[3] https://google.github.io/styleguide/cppguide.html#Declaration_Order


HTH,

Alex.
P.S. This is my Nth attempt to get through the mailing list filter. You 
may have received a pretty much the same message as an attachment to the 
previous mailing list post. Sorry about the noise!

From gkinkie at gmail.com  Thu Jun 23 14:22:00 2022
From: gkinkie at gmail.com (Francesco Chemolli)
Date: Thu, 23 Jun 2022 15:22:00 +0100
Subject: [squid-dev] RFC: Class section/member _order_
In-Reply-To: <003d2899-8300-0d4b-cc44-8f9e623429c0@measurement-factory.com>
References: <003d2899-8300-0d4b-cc44-8f9e623429c0@measurement-factory.com>
Message-ID: <CA+Y8hcMo0F-7+tTBGxmyuAy_5QMGAfQQXzu0QsyO1O_ybtbLjg@mail.gmail.com>

Hi,
  I generally agree on the proposal. Any difference in opinion I have  is
trivial and not worth discussing

Regarding the ML filter, thanks for letting me know. I?ll have to figure
out what keyword triggered the anti spam filter

Francesco

On Thu, 23 Jun 2022 at 15:37, Alex Rousskov <
rousskov at measurement-factory.com> wrote:

> Hello,
>
>      Amos and I disagreed[1] regarding the existing guidelines for
> section/member order in C++ class declarations. To resolve that
> disagreement, this email proposes the order for future use.
>
> -----
>
> 1. Class "sections" order (by member access specifiers): public,
> protected, private. Each section, if present, declared once. Omit
> sections that would be empty. Rationale: List most commonly reused, most
> important things fist. In this context, those are public class
> interfaces. The private section is the least important implementation
> detail as far as the notion of a C++ class is concerned.
>
>
> 2. Within each section, the recommended member order is defined below.
> Rationale: Group similar things together to facilitate searching and
> highlight differences. List things most likely to be reused (by other
> class members) and most important/influential things higher.
>
> * friendship declarations
> * type and aliases declarations; nested classes/structs/unions
> * static member functions
> * constructors and assignment operators
> * destructors (just one until C++20)
> * other/regular non-static member functions except overrides
> * overrides (see item 3 below)
> * static data members
> * non-static data members
>
>
> 3. Overrides are a special case where we do not expect member
> descriptions but do expect a reference to the corresponding API as
> sketched below. Overrides are grouped by the (direct or indirect) parent
> that _introduced_ the corresponding API method(s) (i.e. the parent class
> that declared the virtual method but could _not_ use an override keyword
> in that declaration). Rationale: Provide API context and facilitate
> searching for member descriptions without chasing overrides through
> parents.
>
>      /* Baz API */
>      overrides for Baz-introduced methods (excluding destructors)
>
>      /* Bar API */
>      overrides for Bar-introduced methods (excluding destructors)
>
>
> 4. Caveats
>
> The above rules are not meant to force authors to include any access
> specifiers or members that the code does not actually need (except the
> "private" specifier should be mentioned explicitly in class declarations
> that have only private members -- do not rely on the class default
> access specifier being "private").
>
> Squid has some legacy code that forces CBDATA-related declarations to be
> hoisted to the very top of the class, into the "unnamed" section. This
> is an exception to the above rules. Eventually, we will stop doing that,
> but we should continue doing that for consistency sake until the
> offending CBDATA macros are gone.
>
> Like any style rules, these rules are not comprehensive. If your use
> case is not explicitly covered, then look around for similar Squid code
> and try to be consistent and/or reasonable.
>
> -----
>
> Most of the above rules are arbitrary but common in the industry[2,3].
>
> [1] https://github.com/squid-cache/squid/pull/1067#discussion_r889864925
> [2] https://stackoverflow.com/q/308581
> [3] https://google.github.io/styleguide/cppguide.html#Declaration_Order
>
>
> HTH,
>
> Alex.
> P.S. This is my Nth attempt to get through the mailing list filter. You
> may have received a pretty much the same message as an attachment to the
> previous mailing list post. Sorry about the noise!
> _______________________________________________
> squid-dev mailing list
> squid-dev at lists.squid-cache.org
> http://lists.squid-cache.org/listinfo/squid-dev
>
-- 
@mobile
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20220623/c6cbf312/attachment.htm>

From gkinkie at gmail.com  Sun Jun 26 11:03:03 2022
From: gkinkie at gmail.com (Francesco Chemolli)
Date: Sun, 26 Jun 2022 13:03:03 +0200
Subject: [squid-dev] Squid + docker multi-distro test builds script
Message-ID: <CA+Y8hcMkdZmOZMnSVc1oByscBQufF21K5WysG_KRrct4v_E4_g@mail.gmail.com>

Hi all,
   in order to facilitate multiplatform (at least on Linux) development
velocity, let me share a script I use for this purpose. It is based on the
same tech we run our CI farm on.

the script is at
https://github.com/kinkie/support-tools/blob/master/squid-build/do-build

It's reasonably well documented via the standard --help mechanism. It's
meant ot be run a Linux system with docker.

The main convenience argument is "--in <distro>"

$ do-build --in debian-stable --all

will - as you may guess - run a bootstrap/configure/build/test cycle in the
current working directory in a debian-stable runtime environment.

I hope this helps others increase their velocity on multi
multi-distribution development. Please keep in mind I make no promises on
this script - I occasionally tinker with it and it may break.
Feedback is welcome

-- 
    Francesco
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20220626/84ec705f/attachment.htm>

From ngtech1ltd at gmail.com  Sun Jun 26 21:10:40 2022
From: ngtech1ltd at gmail.com (ngtech1ltd at gmail.com)
Date: Mon, 27 Jun 2022 00:10:40 +0300
Subject: [squid-dev] Squid + docker multi-distro test builds script
In-Reply-To: <CA+Y8hcMkdZmOZMnSVc1oByscBQufF21K5WysG_KRrct4v_E4_g@mail.gmail.com>
References: <CA+Y8hcMkdZmOZMnSVc1oByscBQufF21K5WysG_KRrct4v_E4_g@mail.gmail.com>
Message-ID: <001301d889a1$30fbfbf0$92f3f3d0$@gmail.com>

Francesco,
 
This is a very good bash script.
 
Thanks!
 
----
Eliezer Croitoru
NgTech, Tech Support
Mobile: +972-5-28704261
Email: ngtech1ltd at gmail.com <mailto:ngtech1ltd at gmail.com> 
Web: https://ngtech.co.il/
My-Tube: https://tube.ngtech.co.il/
 
From: squid-dev <squid-dev-bounces at lists.squid-cache.org> On Behalf Of Francesco Chemolli
Sent: Sunday, 26 June 2022 14:03
To: Squid Developers <squid-dev at lists.squid-cache.org>
Subject: [squid-dev] Squid + docker multi-distro test builds script
 
Hi all,
   in order to facilitate multiplatform (at least on Linux) development velocity, let me share a script I use for this purpose. It is based on the same tech we run our CI farm on.
 
the script is at https://github.com/kinkie/support-tools/blob/master/squid-build/do-build 
 
It's reasonably well documented via the standard --help mechanism. It's meant ot be run a Linux system with docker.
 
The main convenience argument is "--in <distro>" 
 
$ do-build --in debian-stable --all
 
will - as you may guess - run a bootstrap/configure/build/test cycle in the current working directory in a debian-stable runtime environment.
 
I hope this helps others increase their velocity on multi multi-distribution development. Please keep in mind I make no promises on this script - I occasionally tinker with it and it may break.
Feedback is welcome 
 
-- 
    Francesco
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20220627/0987d057/attachment-0001.htm>

