From gkinkie at gmail.com  Tue Oct 10 16:17:41 2023
From: gkinkie at gmail.com (Francesco Chemolli)
Date: Tue, 10 Oct 2023 18:17:41 +0200
Subject: [squid-dev] RFC: make FOLLOW_X_FORWARDED_FOR unconditional
Message-ID: <CA+Y8hcP0wq38+94f0vTHFniaehkpdb8YtW+Wio35ZuJskQEiXQ@mail.gmail.com>

Hi all,
   what if we removed the configure option for FOLLOW_X_FORWARDED_FOR, and
made it unconditionally part of Squid?

It is on by default, and it is controlled by runtime configuration,
removing the compile-time option would ensure we have better testing
coverage.

What do you think?

-- 
    Francesco
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20231010/fae98aef/attachment.htm>

From rousskov at measurement-factory.com  Tue Oct 10 19:19:05 2023
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Tue, 10 Oct 2023 15:19:05 -0400
Subject: [squid-dev] RFC: make FOLLOW_X_FORWARDED_FOR unconditional
In-Reply-To: <CA+Y8hcP0wq38+94f0vTHFniaehkpdb8YtW+Wio35ZuJskQEiXQ@mail.gmail.com>
References: <CA+Y8hcP0wq38+94f0vTHFniaehkpdb8YtW+Wio35ZuJskQEiXQ@mail.gmail.com>
Message-ID: <75259d19-7550-4614-a850-de7b726c30dd@measurement-factory.com>

On 2023-10-10 12:17, Francesco Chemolli wrote:

> what if we removed the configure option for?FOLLOW_X_FORWARDED_FOR, and
> made it unconditionally part of Squid?

Some Squid deployments will silently break AFAICT.


> It is on by default,

Here, "it" should be viewed as a combination of FOLLOW_X_FORWARDED_FOR 
and the directives that macro enables (by default). Unfortunately, some 
of those directives are on by default[1]. This implies that, after we 
remove FOLLOW_X_FORWARDED_FOR, a Squid built with 
--disable-follow-x-forwarded-for will start doing something it was not 
doing before, and the behavior changes should be assumed to be 
significant until you can prove otherwise.


> and it is controlled by runtime configuration,

... but not in a good way: Squid code cannot tell whether 
follow_x_forwarded_for is "enabled" beyond checking 
FOLLOW_X_FORWARDED_FOR. It is possible to change that, but changing that 
(and adjusting how other related directives are checked!) requires 
non-trivial work. See (B) below.


> removing the compile-time option would ensure we have better testing 
> coverage.

Indeed. I support removal of this and similar unnecessary compile-time 
options, but because related directives[1] are _on_ by default (in 
--enable-follow-x-forwarded-for and equivalent builds), we should not 
just enable this feature, screwing up folks that disabled it explicitly 
in their builds.

Also, the current implementation of XFF code is fairly expensive -- it 
requires slow ACL checks. If we just remove that FOLLOW_X_FORWARDED_FOR 
guard, we will be adding quite a few wasted CPU cycles to all Squid 
builds that (used to) disable that feature.


[1] squid.conf directives that are enabled by default in 
--enable-follow-x-forwarded-for and equivalent builds include: 
log_uses_indirect_client, adaptation_uses_indirect_client, 
acl_uses_indirect_client, delay_pool_uses_indirect_client.


I see a few possible strategies here:

A) Make ./configure --disable-follow-x-forwarded-for fail. Easy to 
implement but kind of goes against ./configure tradition and leaves a 
backward compatibility hack in Squid code. It also forces admins that do 
_not_ want this feature to disable 4+ directives they do not care about 
-- bad UX. I am against this option.

B) Make all *_uses_indirect_client and similar directives default to off 
unless the configuration contains an explicit follow_x_forwarded_for 
rule. Warn if one of those directives is explicitly on when there are no 
explicit follow_x_forwarded_for rules. This requires non-trivial work. 
That work will probably fix a few existing bugs. I support this option.


HTH,

Alex.


> AccessLogEntry.cc:#if FOLLOW_X_FORWARDED_FOR
> AccessLogEntry.cc-    if (Config.onoff.log_uses_indirect_client && request)
> AccessLogEntry.cc-        log_ip = request->indirect_client_addr;
> AccessLogEntry.cc-    else
> AccessLogEntry.cc-#endif
> AccessLogEntry.cc-        if (tcpClient)
> AccessLogEntry.cc-            log_ip = tcpClient->remote;
> AccessLogEntry.cc-        else
> AccessLogEntry.cc-            log_ip = cache.caddr;



From squid3 at treenet.co.nz  Wed Oct 11 06:25:58 2023
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Wed, 11 Oct 2023 19:25:58 +1300
Subject: [squid-dev] RFC: Squid documentation upgrade
Message-ID: <ac04ffd7-162d-4a8c-acab-dc0cb959fa2c@treenet.co.nz>

Hi all,

As those familiar with Squid sources will know the documentation of 
Squid is currently spread across various formats. Some custom ones, and 
some very outdated.

So far we have a casual agreement amongst the core dev team to use 
Markdown when reasonably possible. If anyone has issues with that please 
chime in ASAP, otherwise I shall continue under the assumption that we 
are good to make it "official".


I am looking at the <https://pandoc.org/> Markdown tools as possible 
replacement of linuxdoc tools to translate automatically the following 
documentation outputs:
  * release notes,
  * squid.conf.documented,
  * the .man / .info / .pdf files,
  * the INSTALL and QUICKSETUP files


This would impact anyone building Squid packages from our repository 
instead of the formal release bundles. As well as our testing 
infrastructure.

The tools are GPL with sources public in github, so SHOULD be easily 
available everywhere. At the very least it has been available in both 
Debian and RHEL distributions for many years. If this change to Squid 
build requirements is an issue for anyone please speak up.


Cheers
Amos

From squid3 at treenet.co.nz  Wed Oct 11 07:15:50 2023
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Wed, 11 Oct 2023 20:15:50 +1300
Subject: [squid-dev] RFC: make FOLLOW_X_FORWARDED_FOR unconditional
In-Reply-To: <75259d19-7550-4614-a850-de7b726c30dd@measurement-factory.com>
References: <CA+Y8hcP0wq38+94f0vTHFniaehkpdb8YtW+Wio35ZuJskQEiXQ@mail.gmail.com>
 <75259d19-7550-4614-a850-de7b726c30dd@measurement-factory.com>
Message-ID: <c37ebcc0-e0a9-4276-bf31-c8f0577aa1f9@treenet.co.nz>

On 11/10/23 08:19, Alex Rousskov wrote:
> On 2023-10-10 12:17, Francesco Chemolli wrote:
> 
>> what if we removed the configure option for?FOLLOW_X_FORWARDED_FOR, and
>> made it unconditionally part of Squid?
> 
> Some Squid deployments will silently break AFAICT.
> 

In what way specifically?


> 
>> It is on by default,
> 
> Here, "it" should be viewed as a combination of FOLLOW_X_FORWARDED_FOR 
> and the directives that macro enables (by default). Unfortunately, some 
> of those directives are on by default[1]. This implies that, after we 
> remove FOLLOW_X_FORWARDED_FOR, a Squid built with 
> --disable-follow-x-forwarded-for will start doing something it was not 
> doing before, and the behavior changes should be assumed to be 
> significant until you can prove otherwise.
> 

The Proof is in cf.data.pre:
"
   NAME: follow_x_forwarded_for
...
   DEFAULT_IF_NONE: deny all
   DEFAULT_DOC: X-Forwarded-For header will be ignored.
"

Removing FOLLOW_X_FORWARDED_FOR will make installations which previously 
were not able to run with follow_x_forwarded_for configured would begin 
behaving as if "follow_x_forwarded_for deny all" was configured.

That is behaviorally the same as --disable-follow-x-forwarded-for.



> 
>> and it is controlled by runtime configuration,
> 
> ... but not in a good way: Squid code cannot tell whether 
> follow_x_forwarded_for is "enabled" beyond checking 
> FOLLOW_X_FORWARDED_FOR. It is possible to change that, but changing that 
> (and adjusting how other related directives are checked!) requires 
> non-trivial work. See (B) below.
> 

I do not see a transition problem here.

As per the above cf.data.pre contents, only installations which already 
were using --enable-follow-x-forwarded-for were able to set the related 
configuration options. They would not see any change.


> 
>> removing the compile-time option would ensure we have better testing 
>> coverage.
> 
> Indeed. I support removal of this and similar unnecessary compile-time 
> options, but because related directives[1] are _on_ by default (in 
> --enable-follow-x-forwarded-for and equivalent builds), we should not 
> just enable this feature, screwing up folks that disabled it explicitly 
> in their builds.

IMO that is easily resolved. Just drop the DEFAULT_IF_NONE stanza from 
cf.data.pre and modify the if-statement in 
ClientRequestContext::clientAccessCheck() to set 
http->request->indirect_client_addr whenever 
"!Config.accessList.followXFF".
That will avoid any "screwing over" because the "indirect" IP would be 
the same as the "direct" IP under the above default 
follow_x_forwarded_for behavior.

Even if admin has misconfigured one of those *_indirect_client settings 
the implicit/default "follow_x_forwarded_for deny all" makes the correct 
IP be used.


> 
> Also, the current implementation of XFF code is fairly expensive -- it 
> requires slow ACL checks. If we just remove that FOLLOW_X_FORWARDED_FOR 
> guard, we will be adding quite a few wasted CPU cycles to all Squid 
> builds that (used to) disable that feature.
> 

Dropping the "DEFAULT_IF_NONE" stanza entirely avoids all the ACL costs 
by default, without changing the above behavior analysis that proves IMO 
this feature as safe to enable.

Bonus: it would also avoid the ACL cycles currently wasted on 
installations where the feature is already enabled but not configured.

Extra bonus: any logic which specifically relies on testing 
(!)FOLLOW_X_FORWARDED_FOR can switch to checking 
(!)Config.accessList.followXFF instead.


> 
> [1] squid.conf directives that are enabled by default in 
> --enable-follow-x-forwarded-for and equivalent builds include: 
> log_uses_indirect_client, adaptation_uses_indirect_client, 
> acl_uses_indirect_client, delay_pool_uses_indirect_client.
> 
> 
> I see a few possible strategies here:
> 
> A) Make ./configure --disable-follow-x-forwarded-for fail. Easy to 
> implement but kind of goes against ./configure tradition and leaves a 
> backward compatibility hack in Squid code. It also forces admins that do 
> _not_ want this feature to disable 4+ directives they do not care about 
> -- bad UX. I am against this option.

Unnecessary. For reasons detailed above.

> 
> B) Make all *_uses_indirect_client and similar directives default to off 
> unless the configuration contains an explicit follow_x_forwarded_for 
> rule.

> Warn if one of those directives is explicitly on when there are no 
> explicit follow_x_forwarded_for rules. This requires non-trivial work. 

IMO this is optional. A "nice to have" UI behaviour that a lot of 
squid.conf settings could do, but do not (yet).

The future ConfigParser redesign project changes are likely to make this 
type of check a lot easier to implement in an entirely different way 
than it would have to be done right now. So IMO there is no hurry to 
rush/require this change.


> That work will probably fix a few existing bugs. I support this option.
> 


C) Just drop the DEFAULT_IF_NONE stanza from cf.data.pre and modify the 
if-statement in ClientRequestContext::clientAccessCheck() like so:

"
    if (!http->request->flags.doneFollowXff()) {

         /* we always trust the direct client address for actual use */
         http->request->indirect_client_addr = http->request->client_addr;
         http->request->indirect_client_addr.port(0);

         if (Config.accessList.followXFF &&
             http->request->header.has(Http::HdrType::X_FORWARDED_FOR)) {

... current logic except above indirect_client_addr lines ...

         }
         return;
     }
"


HTH
Amos

From ngtech1ltd at gmail.com  Wed Oct 11 12:09:58 2023
From: ngtech1ltd at gmail.com (ngtech1ltd at gmail.com)
Date: Wed, 11 Oct 2023 15:09:58 +0300
Subject: [squid-dev] RFC: make FOLLOW_X_FORWARDED_FOR unconditional
In-Reply-To: <CA+Y8hcP0wq38+94f0vTHFniaehkpdb8YtW+Wio35ZuJskQEiXQ@mail.gmail.com>
References: <CA+Y8hcP0wq38+94f0vTHFniaehkpdb8YtW+Wio35ZuJskQEiXQ@mail.gmail.com>
Message-ID: <000001d9fc3b$db8c3810$92a4a830$@gmail.com>

Hey,

Not sure I understood exactly what the proposal is?
>From Amos response I understand that it will be converted into some ACL which can be configured or not.
Right?

Eliezer

From: squid-dev <squid-dev-bounces at lists.squid-cache.org> On Behalf Of Francesco Chemolli
Sent: Tuesday, October 10, 2023 19:18
To: Squid Developers <squid-dev at lists.squid-cache.org>
Subject: [squid-dev] RFC: make FOLLOW_X_FORWARDED_FOR unconditional

Hi all,
   what if we removed the configure option for FOLLOW_X_FORWARDED_FOR, and 
made it unconditionally part of Squid?

It is on by default, and it is controlled by runtime configuration, removing the compile-time option would ensure we have better testing coverage.

What do you think?

-- 
    Francesco


From squid3 at treenet.co.nz  Wed Oct 11 13:35:31 2023
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Thu, 12 Oct 2023 02:35:31 +1300
Subject: [squid-dev] RFC: make FOLLOW_X_FORWARDED_FOR unconditional
In-Reply-To: <000001d9fc3b$db8c3810$92a4a830$@gmail.com>
References: <CA+Y8hcP0wq38+94f0vTHFniaehkpdb8YtW+Wio35ZuJskQEiXQ@mail.gmail.com>
 <000001d9fc3b$db8c3810$92a4a830$@gmail.com>
Message-ID: <8ac832cb-de51-4e51-9380-310db4d98d91@treenet.co.nz>

On 12/10/23 01:09, ngtech1ltd at gmail.com wrote:
> Hey,
> 
> Not sure I understood exactly what the proposal is?

To remove the ./configure --disable-follow-x-forwarded-for build option. 
Leaving the feature available to everyone.

HTH
Amos


>  From Amos response I understand that it will be converted into some ACL which can be configured or not.
> Right?
> 
> Eliezer
> 
> From: squid-dev <squid-dev-bounces at lists.squid-cache.org> On Behalf Of Francesco Chemolli
> Sent: Tuesday, October 10, 2023 19:18
> To: Squid Developers <squid-dev at lists.squid-cache.org>
> Subject: [squid-dev] RFC: make FOLLOW_X_FORWARDED_FOR unconditional
> 
> Hi all,
>     what if we removed the configure option for FOLLOW_X_FORWARDED_FOR, and
> made it unconditionally part of Squid?
> 
> It is on by default, and it is controlled by runtime configuration, removing the compile-time option would ensure we have better testing coverage.
> 
> What do you think?
> 

From rousskov at measurement-factory.com  Wed Oct 11 14:32:05 2023
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Wed, 11 Oct 2023 10:32:05 -0400
Subject: [squid-dev] RFC: Squid documentation upgrade
In-Reply-To: <ac04ffd7-162d-4a8c-acab-dc0cb959fa2c@treenet.co.nz>
References: <ac04ffd7-162d-4a8c-acab-dc0cb959fa2c@treenet.co.nz>
Message-ID: <ec06b294-24d5-4d9a-982c-70c6649cf115@measurement-factory.com>

On 2023-10-11 02:25, Amos Jeffries wrote:
> Hi all,
> 
> As those familiar with Squid sources will know the documentation of 
> Squid is currently spread across various formats. Some custom ones, and 
> some very outdated.
> 
> So far we have a casual agreement amongst the core dev team to use 
> Markdown when reasonably possible. If anyone has issues with that please 
> chime in ASAP, otherwise I shall continue under the assumption that we 
> are good to make it "official".

FWIW, I (still) agree that we should use Markdown as human-friendly text 
input format, where reasonable.


> I am looking at the <https://pandoc.org/> Markdown tools as possible 
> replacement of linuxdoc tools to translate automatically the following 
> documentation outputs:
>  ?* release notes,
>  ?* squid.conf.documented,
>  ?* the .man / .info / .pdf files,
>  ?* the INSTALL and QUICKSETUP files

I do not know what "translate [squid.conf.documented and .pdf] 
automatically" (to Markdown) means to you in this context, especially 
since (in the official squid repository) "linuxdoc tools" are only used 
in release notes context. Reaching a rough agreement on what to change, 
how to change it, and where to change it before changing it may be 
prudent. Here are a few comments to bootstrap that process:

* release notes: I recommend discussing changes to release notes 
maintenance and structure before changing their format. It would be nice 
to address several persistent problems that we often bump into when 
working on release notes PRs.

* squid.conf.documented: The format of that file is Squid configuration 
format, not Markdown. FWIW, I am against changing the entire cf.data.pre 
format to Markdown. I am against keeping cf.data.pre as is but 
translating squid.conf.documented format (or portions thereof) to 
Markdown (especially if that requires changes in squid repository). We 
have discussed how cf.data.pre and friends should be restructured and 
reformatted. We should finish those discussions and implement those 
changes instead.

* .man, .info, .pdf files: Your call (assuming .8 and similar source 
files in squid repository remain unchanged).

* INSTALL and QUICKSETUP: I support rewriting these and other top-level 
[A-Z]* files in Markdown, where possible. The other candidates are 
CONTRIBUTORS, COPYING, CREDITS, ChangeLog, README, and SPONSORS(.list).


HTH,

Alex.


> This would impact anyone building Squid packages from our repository 
> instead of the formal release bundles. As well as our testing 
> infrastructure.
> 
> The tools are GPL with sources public in github, so SHOULD be easily 
> available everywhere. At the very least it has been available in both 
> Debian and RHEL distributions for many years. If this change to Squid 
> build requirements is an issue for anyone please speak up.
> 
> 
> Cheers
> Amos
> _______________________________________________
> squid-dev mailing list
> squid-dev at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-dev


From rousskov at measurement-factory.com  Wed Oct 11 15:41:03 2023
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Wed, 11 Oct 2023 11:41:03 -0400
Subject: [squid-dev] RFC: make FOLLOW_X_FORWARDED_FOR unconditional
In-Reply-To: <c37ebcc0-e0a9-4276-bf31-c8f0577aa1f9@treenet.co.nz>
References: <CA+Y8hcP0wq38+94f0vTHFniaehkpdb8YtW+Wio35ZuJskQEiXQ@mail.gmail.com>
 <75259d19-7550-4614-a850-de7b726c30dd@measurement-factory.com>
 <c37ebcc0-e0a9-4276-bf31-c8f0577aa1f9@treenet.co.nz>
Message-ID: <63379553-9173-4abf-8f41-3523221f214a@measurement-factory.com>

On 2023-10-11 03:15, Amos Jeffries wrote:
> On 11/10/23 08:19, Alex Rousskov wrote:
>> On 2023-10-10 12:17, Francesco Chemolli wrote:
>>
>>> what if we removed the configure option for?FOLLOW_X_FORWARDED_FOR, and
>>> made it unconditionally part of Squid?
>>
>> Some Squid deployments will silently break AFAICT.
>>
> 
> In what way specifically?

I believe my original email have provided specific problems. Your 
response assessed some of those specific problems are "easily resolved". 
Thus, AFAICT, you know at least of some specific problems and do not 
need me to answer this particular question.


>> some of those directives are on by default[1]. This implies that, 
>> after we remove FOLLOW_X_FORWARDED_FOR, a Squid built with 
>> --disable-follow-x-forwarded-for will start doing something it was not 
>> doing before, and the behavior changes should be assumed to be 
>> significant until you can prove otherwise.

> The Proof is in cf.data.pre:
> "
>  ? NAME: follow_x_forwarded_for
> ...
>  ? DEFAULT_IF_NONE: deny all
>  ? DEFAULT_DOC: X-Forwarded-For header will be ignored.
> "
> 
> Removing FOLLOW_X_FORWARDED_FOR will make installations which previously 
> were not able to run with follow_x_forwarded_for configured would begin 
> behaving as if "follow_x_forwarded_for deny all" was configured.

> That is behaviorally the same as --disable-follow-x-forwarded-for.

If you exclude performance from "behavior", then, yes, 
follow_x_forwarded_for will be behaviorally the same as with 
--disable-follow-x-forwarded-for.

However, even if we ignore performance, follow_x_forwarded_for is not 
the whole story because, as I said, there are _other_ affected 
squid.conf directives[1] that will become turned on by default if we 
remove FOLLOW_X_FORWARDED_FOR guard. Any correct proof must account for 
those directives code as well. The above proof does not.


>> Squid code cannot tell whether 
>> follow_x_forwarded_for is "enabled" beyond checking 
>> FOLLOW_X_FORWARDED_FOR. It is possible to change that, but changing 
>> that (and adjusting how other related directives are checked!) 
>> requires non-trivial work. See (B) below.
>>
> 
> I do not see a transition problem here.
> 
> As per the above cf.data.pre contents, only installations which already 
> were using --enable-follow-x-forwarded-for were able to set the related 
> configuration options. They would not see any change.

My concern is (still) about installations that were using 
--disable-follow-x-forwarded for. Those installations will see a change 
[because they will get a bunch of options and the corresponding code 
that gets enabled by default in their environment after the upgrade].


> IMO that is easily resolved. Just drop the DEFAULT_IF_NONE stanza from 
> cf.data.pre and modify the if-statement in 
> ClientRequestContext::clientAccessCheck() to set 
> http->request->indirect_client_addr whenever 
> "!Config.accessList.followXFF".

I agree that this DEFAULT_IF_NONE should be dropped during this 
conversion (or in a separate minimal PR; BTW, all "DEFAULT_IF_NONE: deny 
all" should probably be removed, with the corresponding code adjusted as 
needed).

I disagree that the above change alone is an acceptable solution. Among 
other things mentioned in my original response, we should refactor so 
that callers cannot use indirect_client_addr when it was not set, and so 
that indirect_client_addr is only set when an follow_x_forwarded_for 
match has allowed it to be set.

Most likely, access to the client address should be protected (wrapped 
in a parameterized accessor method). This protection is probably a good 
idea regardless, but if Francesco does not want to implement (B), then 
this kind of protection may become an essential part of the proof.


> That will avoid any "screwing over" because the "indirect" IP would be 
> the same as the "direct" IP under the above default 
> follow_x_forwarded_for behavior.

Setting indirect_client_addr to an address other than the indirect 
client address is an obvious code quality problem that we should avoid. 
Relying on indirect_client_addr being set (to any value) by code X, when 
we know that code X is not reached in some cases is another problem we 
should avoid in this refactoring.


>> [1] squid.conf directives that are enabled by default in 
>> --enable-follow-x-forwarded-for and equivalent builds include: 
>> log_uses_indirect_client, adaptation_uses_indirect_client, 
>> acl_uses_indirect_client, delay_pool_uses_indirect_client.


>> B) Make all *_uses_indirect_client and similar directives default to 
>> off unless the configuration contains an explicit 
>> follow_x_forwarded_for rule.
> 
>> Warn if one of those directives is explicitly on when there are no 
>> explicit follow_x_forwarded_for rules. This requires non-trivial work. 

> IMO this is optional. A "nice to have" UI behaviour that a lot of 
> squid.conf settings could do, but do not (yet).

I agree that a misconfiguration warning is an optional improvement. It 
is very easy to implement though, and I would encourage Francesco to 
start in that direction (i.e. the direction of a good solution) rather 
than starting by adding more hacks and workarounds.

Overall, a PR that enables configuration options that should not be 
enabled is much worse than a PR does does not have that flaw, even if 
both PRs result in the same "behavior" of then-current Squid code due to 
workarounds in the worse PR. This is especially true when the problem 
was foreseen before the start of the development and has a 
straightforward solution, with several positive side-effects.


> C) Just drop the DEFAULT_IF_NONE stanza from cf.data.pre and modify the 
> if-statement in ClientRequestContext::clientAccessCheck() like so:
> 
> "
>  ?? if (!http->request->flags.doneFollowXff()) {
> 
>  ??????? /* we always trust the direct client address for actual use */
>  ??????? http->request->indirect_client_addr = http->request->client_addr;
>  ??????? http->request->indirect_client_addr.port(0);
> 
>  ??????? if (Config.accessList.followXFF &&
>  ??????????? http->request->header.has(Http::HdrType::X_FORWARDED_FOR)) {
> 
> ... current logic except above indirect_client_addr lines ...
> 
>  ??????? }
>  ??????? return;
>  ??? }
> "

See above for (C) analysis. Let's do this right instead of adding 
another hack on top of an already problematic (but currently optional!) 
XFF code.


Thank you,

Alex.


From rousskov at measurement-factory.com  Fri Oct 13 13:54:03 2023
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Fri, 13 Oct 2023 09:54:03 -0400
Subject: [squid-dev] RFC: Irreplaceable squidclient features
Message-ID: <75e772e2-180a-4809-9fee-20660a6277b6@measurement-factory.com>

Hello,

     Francesco and I would like to remove squidclient tool from Squid so 
that we can divert resources to more important areas[1]. As far as we 
can tell, all essential squidclient functionality can be obtained via 
well-known command-line clients like curl, wget, nc, s_client, etc. For 
example, `mgr:foo` shortcuts can be replaced with URLs like 
`http://localhost:3128/squid-internal-mgr/foo` (in a script or shell 
alias if needed).

If you routinely use squidclient _and_ do not think you can replace it 
with another client, please respond and detail your use case!

We will collect use cases until the end of October 2023. If we then 
remove squidclient as currently planned, then that removal will _not_ 
affect Squid v6 and earlier releases, of course -- those releases will 
keep squidclient.


Thank you,

Alex.
P.S. This email thread is _not_ the right place to discuss squidclient 
_problems_, including Squid Bug #5283[2]. Please focus on squidclient 
features that you use and consider irreplaceable.

[1] https://github.com/squid-cache/squid/pull/1514
[2] https://bugs.squid-cache.org/show_bug.cgi?id=5283

From amajer at suse.de  Tue Oct 31 09:45:35 2023
From: amajer at suse.de (Adam Majer)
Date: Tue, 31 Oct 2023 10:45:35 +0100
Subject: [squid-dev] squid-cache.org TLS certificate errors
Message-ID: <7243e5e7-757d-4b4b-8b04-5ec0656cfb32@suse.de>

Hi,

Not really about squid, but more about the web hosting. Going to 
https://www.squid-cache.org gets a wrong certificate error,



Websites prove their identity via certificates. Firefox does not trust 
this site because it uses a certificate that is not valid for 
www.squid-cache.org. The certificate is only valid for the following 
names: *.spd.co.il, spd.co.il

Error code: SSL_ERROR_BAD_CERT_DOMAIN


# openssl s_client -connect www.squid-cache.org:443 -servername 
www.squid-cache.org | openssl x509 -noout -text | grep 'DNS\|CN='

This seems to hit some random mirror?


Without `www`, it's still broken as the certificate is missing the main 
domain,

# openssl s_client -connect squid-cache.org:443 -servername 
squid-cache.org | openssl x509 -noout -text | grep 'DNS\|CN='

depth=0 CN = master.squid-cache.org
                 DNS:bugs.squid-cache.org, DNS:lists.squid-cache.org, 
DNS:master.squid-cache.org


Is it at least possible to add squid-cache.org to the non-mirrored site?

Best regards,
Adam

From amajer at suse.de  Tue Oct 31 10:08:24 2023
From: amajer at suse.de (Adam Majer)
Date: Tue, 31 Oct 2023 11:08:24 +0100
Subject: [squid-dev] mirrors with missing files
In-Reply-To: <7243e5e7-757d-4b4b-8b04-5ec0656cfb32@suse.de>
References: <7243e5e7-757d-4b4b-8b04-5ec0656cfb32@suse.de>
Message-ID: <2de7f0f9-b89b-4fb3-8660-bb2a3e71bb92@suse.de>

I've looked at the mirrors posted,

   http://www.squid-cache.org/Download/mirrors.html

and these seem all obsolete. The Canadian one has squid 6.1, and the 
rest don't go past 5.9 or are simply no longer resolving.


I'm not sure, but maybe a more reliable way would be to migrate to 
github.com for the releases. There are already tags there, but are 
missing is just the signed tarballs.

https://github.com/squid-cache/squid/releases

- Adam

PS. FWIW, the download of squid 6.4 is not reliable in the DNS rotation 
as some of the mirrors there are broken.

These two mirrors are broken (mirror.marwan.ma), returning 404

196.200.160.70
2001:4310:f1::70

and these two are working...

67.215.9.148
212.199.163.170


From squid3 at treenet.co.nz  Tue Oct 31 13:18:07 2023
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Wed, 1 Nov 2023 02:18:07 +1300
Subject: [squid-dev] squid-cache.org TLS certificate errors
In-Reply-To: <7243e5e7-757d-4b4b-8b04-5ec0656cfb32@suse.de>
References: <7243e5e7-757d-4b4b-8b04-5ec0656cfb32@suse.de>
Message-ID: <bd147fe9-53a1-4927-a7b1-508177714915@treenet.co.nz>

Hi Adam,

This is a question that comes up every year or so.

The www.squid-cache.org is only served as HTTP on port 80. We do not 
have HTTPS support on the www.squid-cache.org domain.

This is a side effect of our reliance on a network of mirrors to serve 
our website. Those who also serve the site on https:// do so under
their own certificate; that's well known.

Thanks for caring and for reaching out!

Amos Jeffries
The Squid Software Foundation


On 31/10/23 22:45, Adam Majer wrote:
> Hi,
> 
> Not really about squid, but more about the web hosting. Going to 
> https://www.squid-cache.org gets a wrong certificate error,
> 

From rousskov at measurement-factory.com  Tue Oct 31 19:32:10 2023
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Tue, 31 Oct 2023 15:32:10 -0400
Subject: [squid-dev] mirrors with missing files
In-Reply-To: <2de7f0f9-b89b-4fb3-8660-bb2a3e71bb92@suse.de>
References: <7243e5e7-757d-4b4b-8b04-5ec0656cfb32@suse.de>
 <2de7f0f9-b89b-4fb3-8660-bb2a3e71bb92@suse.de>
Message-ID: <55df0ed0-7722-43a0-9182-8eac3ee8d3ce@measurement-factory.com>

On 2023-10-31 06:08, Adam Majer wrote:
> I've looked at the mirrors posted,
> 
>  ? http://www.squid-cache.org/Download/mirrors.html
> 
> and these seem all obsolete.

Thank you for doing this analysis! I have been begging the Project to 
drop all mirrors for a long time now. I failed to convince others that 
the associated embarrassment and waste of time are just not worth the 
benefits. Maybe your observations will be the last straw...


> I'm not sure, but maybe a more reliable way would be to migrate to 
> github.com for the releases.

FWIW, I am quite sure, and has been making that suggestion for several 
years now. GitHub is far from perfect, but using its release posting 
features (correctly) will dramatically decrease our release overheads 
and delays. This migration is not trivial, and I have failed to convince 
others that it is worth their time to start migrating.

Alex.


From gkinkie at gmail.com  Tue Oct 31 19:39:15 2023
From: gkinkie at gmail.com (Francesco Chemolli)
Date: Tue, 31 Oct 2023 19:39:15 +0000
Subject: [squid-dev] mirrors with missing files
In-Reply-To: <55df0ed0-7722-43a0-9182-8eac3ee8d3ce@measurement-factory.com>
References: <7243e5e7-757d-4b4b-8b04-5ec0656cfb32@suse.de>
 <2de7f0f9-b89b-4fb3-8660-bb2a3e71bb92@suse.de>
 <55df0ed0-7722-43a0-9182-8eac3ee8d3ce@measurement-factory.com>
Message-ID: <CA+Y8hcM0aV742+n4qkr-F6-_CeawVqqbYjSizjvL0=-+Q=0ueQ@mail.gmail.com>

Hi all,
I agree, it would be awesome to rely on a more more than delivery network
for our website.
At this time it is complicated. Oh website is large as a result of posting
mailing list, archives and a lot of release files, patches, change sets.
Before we can migrate to anything different, we need to deprecate, cleanup
and simplify a lot.
Any help would be greatly appreciated

@mobile


On Tue, 31 Oct 2023 at 19:32, Alex Rousskov <
rousskov at measurement-factory.com> wrote:

> On 2023-10-31 06:08, Adam Majer wrote:
> > I've looked at the mirrors posted,
> >
> >    http://www.squid-cache.org/Download/mirrors.html
> >
> > and these seem all obsolete.
>
> Thank you for doing this analysis! I have been begging the Project to
> drop all mirrors for a long time now. I failed to convince others that
> the associated embarrassment and waste of time are just not worth the
> benefits. Maybe your observations will be the last straw...
>
>
> > I'm not sure, but maybe a more reliable way would be to migrate to
> > github.com for the releases.
>
> FWIW, I am quite sure, and has been making that suggestion for several
> years now. GitHub is far from perfect, but using its release posting
> features (correctly) will dramatically decrease our release overheads
> and delays. This migration is not trivial, and I have failed to convince
> others that it is worth their time to start migrating.
>
> Alex.
>
> _______________________________________________
> squid-dev mailing list
> squid-dev at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20231031/809da147/attachment.htm>

From rousskov at measurement-factory.com  Tue Oct 31 20:59:31 2023
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Tue, 31 Oct 2023 16:59:31 -0400
Subject: [squid-dev] mirrors with missing files
In-Reply-To: <CA+Y8hcM0aV742+n4qkr-F6-_CeawVqqbYjSizjvL0=-+Q=0ueQ@mail.gmail.com>
References: <7243e5e7-757d-4b4b-8b04-5ec0656cfb32@suse.de>
 <2de7f0f9-b89b-4fb3-8660-bb2a3e71bb92@suse.de>
 <55df0ed0-7722-43a0-9182-8eac3ee8d3ce@measurement-factory.com>
 <CA+Y8hcM0aV742+n4qkr-F6-_CeawVqqbYjSizjvL0=-+Q=0ueQ@mail.gmail.com>
Message-ID: <7e4ee1a8-f4ca-4c08-80bc-c83c9cf0526d@measurement-factory.com>

On 2023-10-31 15:39, Francesco Chemolli wrote:
> Before we can migrate ..., we need to 
> deprecate, cleanup and simplify a lot.

Do you really, really _need_ to "deprecate, cleanup, and simplify a lot" 
in order to stop mirroring tomorrow?! Start doing new minor releases on 
GitHub a month from now? FWIW, I have asked for specifics many times, 
but am still unaware of any serious obstacles on the way to those goals.

AFAICT, there is just lack of shared goals (or shared priorities) rather 
than serious obstacles on the way of achieving those two specific goals.

Alex.


On 2023-10-31 15:39, Francesco Chemolli wrote:
 > Hi all,
 > I agree, it would be awesome to rely on a more more than delivery
 > network for our website.
 > At this time it is complicated. Oh website is large as a result of
 > posting mailing list, archives and a lot of release files, patches,
 > change sets. Before we can migrate to anything different, we need to
 > deprecate, cleanup and simplify a lot.
 > Any help would be greatly appreciated
 >
 > @mobile
 >

> On Tue, 31 Oct 2023 at 19:32, Alex Rousskov wrote:
> 
>     On 2023-10-31 06:08, Adam Majer wrote:
>      > I've looked at the mirrors posted,
>      >
>      > http://www.squid-cache.org/Download/mirrors.html
>      >
>      > and these seem all obsolete.
> 
>     Thank you for doing this analysis! I have been begging the Project to
>     drop all mirrors for a long time now. I failed to convince others that
>     the associated embarrassment and waste of time are just not worth the
>     benefits. Maybe your observations will be the last straw...
> 
> 
>      > I'm not sure, but maybe a more reliable way would be to migrate to
>      > github.com <http://github.com> for the releases.
> 
>     FWIW, I am quite sure, and has been making that suggestion for several
>     years now. GitHub is far from perfect, but using its release posting
>     features (correctly) will dramatically decrease our release overheads
>     and delays. This migration is not trivial, and I have failed to
>     convince
>     others that it is worth their time to start migrating.
> 
>     Alex.
> 
>     _______________________________________________
>     squid-dev mailing list
>     squid-dev at lists.squid-cache.org <mailto:squid-dev at lists.squid-cache.org>
>     https://lists.squid-cache.org/listinfo/squid-dev
>     <https://lists.squid-cache.org/listinfo/squid-dev>
> 


