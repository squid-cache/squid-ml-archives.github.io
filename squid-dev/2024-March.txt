From tranceeastaf at gmail.com  Fri Mar  8 00:28:29 2024
From: tranceeastaf at gmail.com (trance eastaf)
Date: Fri, 8 Mar 2024 03:28:29 +0300
Subject: [squid-dev] Using AWS and a SQUID server to create Residential
 Proxies
Message-ID: <CAN4PM7=pirLtxWOq4KiyEzKAoVZywKbddRix46Naak-z=X-iOQ@mail.gmail.com>

Hello Team Squid,

I saw your proxy servers on Aws Marketplace.

How do i use them to create many rotating residential proxies on AWS, can
you guide me step by step, please?


Thank you,
Edwin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20240308/6232731f/attachment.htm>

From gkinkie at gmail.com  Wed Mar 13 09:25:03 2024
From: gkinkie at gmail.com (Francesco Chemolli)
Date: Wed, 13 Mar 2024 16:25:03 +0700
Subject: [squid-dev] Idea: what if SBuf was a Packable?
Message-ID: <CA+Y8hcOCcpwV8d-6-ArynVaLGqdFMKapV=9HFybUFtuhiL94-g@mail.gmail.com>

Hi all,
  I spent some time wondering whether we could reduce
code duplication by making SBuf implement the Packable interface,
and replacing SBufStream with PackableStream.

The interface changes seem rather minimal, SBuf already implements
append(const char*, int) and vappendf; the main difference there is
that SBuf returns *this.
These methods are of course virtual, which is a price to pay, but besides
the vtbl size, maybe there is a way to not pay their cost when not used

What do you think?

-- 
    Francesco
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-dev/attachments/20240313/345e6ece/attachment.htm>

From rousskov at measurement-factory.com  Wed Mar 13 13:08:02 2024
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Wed, 13 Mar 2024 09:08:02 -0400
Subject: [squid-dev] Idea: what if SBuf was a Packable?
In-Reply-To: <CA+Y8hcOCcpwV8d-6-ArynVaLGqdFMKapV=9HFybUFtuhiL94-g@mail.gmail.com>
References: <CA+Y8hcOCcpwV8d-6-ArynVaLGqdFMKapV=9HFybUFtuhiL94-g@mail.gmail.com>
Message-ID: <0ed74d8e-708c-4cc0-af49-9aabd75ec220@measurement-factory.com>

On 2024-03-13 05:25, Francesco Chemolli wrote:

>  ? I spent some time wondering whether we could reduce
> code duplication by making SBuf implement the Packable interface,
> and replacing SBufStream with PackableStream.

This idea was studied two years ago, including spending many hours on 
discussing virtualization costs and building specific examples to 
illustrate those costs. You have participated.

https://github.com/squid-cache/squid/pull/932

I also suspect that "code duplication" you are wondering about either 
does not exist or is not related to the suggested changes: SBufStream 
code does not duplicate much, and moving its functionality to SBuf will 
_move_ unique code, not REmove it.

If you want to continue in this overall direction, I suggest identifying 
a specific use case (the simplest one you can find) that illustrates 
code duplication that should not be resolved by other means.


HTH,

Alex.


> The interface changes seem rather minimal, SBuf already implements
> append(const char*, int) and vappendf; the main difference there is
> that SBuf returns *this.
> These methods are of course virtual, which is a price to pay, but besides
> the vtbl size, maybe there is a way to not pay their cost when not used
> 
> What do you think?
> 
> -- 
>  ? ? Francesco
> 
> _______________________________________________
> squid-dev mailing list
> squid-dev at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-dev


