=== modified file 'doc/release-notes/release-3.6.sgml'
--- doc/release-notes/release-3.6.sgml	2014-11-09 21:21:15 +0000
+++ doc/release-notes/release-3.6.sgml	2014-11-14 22:55:53 +0000
@@ -89,6 +89,9 @@
          <tag>sslcrtvalidator_children</tag>
          <p> New parameter <em>queue-size=</em> to set the maximum number
              of queued requests.
+
+	 <tag>logformat</tag>
+         <p>New format code <em>%acl_matched</em> to log the last matched acl
 </descrip>
 
 <sect1>Removed tags<label id="removedtags">

=== modified file 'src/AccessLogEntry.h'
--- src/AccessLogEntry.h	2014-11-07 12:11:21 +0000
+++ src/AccessLogEntry.h	2014-11-14 22:36:19 +0000
@@ -39,7 +39,7 @@
 public:
     typedef RefCount<AccessLogEntry> Pointer;
 
-    AccessLogEntry() : url(NULL), tcpClient(), reply(NULL), request(NULL),
+    AccessLogEntry() : url(NULL), last_acl_matched(NULL), tcpClient(), reply(NULL), request(NULL),
             adapted_request(NULL) {}
     ~AccessLogEntry();
 
@@ -49,6 +49,7 @@
     void getLogClientIp(char *buf, size_t bufsz) const;
 
     const char *url;
+    const char *last_acl_matched;
 
     /// TCP/IP level details about the client connection
     Comm::ConnectionPointer tcpClient;

=== modified file 'src/client_side_request.cc'
--- src/client_side_request.cc	2014-11-04 08:47:03 +0000
+++ src/client_side_request.cc	2014-11-14 22:36:31 +0000
@@ -736,6 +736,7 @@
     acl_checklist = NULL;
     err_type page_id;
     Http::StatusCode status;
+    http->al->last_acl_matched = AclMatchedName ? AclMatchedName : "-";
     debugs(85, 2, "The request " << http->request->method << ' ' <<
            http->uri << " is " << answer <<
            "; last ACL checked: " << (AclMatchedName ? AclMatchedName : "[none]"));

=== modified file 'src/format/ByteCode.h'
--- src/format/ByteCode.h	2014-09-13 13:59:43 +0000
+++ src/format/ByteCode.h	2014-11-14 22:36:34 +0000
@@ -230,7 +230,9 @@
     LFT_EXT_ACL_CLIENT_EUI48,
     LFT_EXT_ACL_CLIENT_EUI64,
     LFT_EXT_ACL_NAME,
-    LFT_EXT_ACL_DATA
+    LFT_EXT_ACL_DATA,
+
+    LFT_LAST_ACL_MATCHED
 
 } ByteCode_t;
 

=== modified file 'src/format/Format.cc'
--- src/format/Format.cc	2014-09-13 13:59:43 +0000
+++ src/format/Format.cc	2014-11-14 22:36:34 +0000
@@ -912,6 +912,10 @@
                 }
             break;
 
+	case LFT_LAST_ACL_MATCHED:
+	    out = al->last_acl_matched;
+	    break;
+
         case LFT_SQUID_HIERARCHY:
             if (al->hier.ping.timedout)
                 mb.append("TIMEOUT_", 8);

=== modified file 'src/format/Token.cc'
--- src/format/Token.cc	2014-09-13 13:59:43 +0000
+++ src/format/Token.cc	2014-11-14 22:36:34 +0000
@@ -143,6 +143,7 @@
     {"<nfmark", LFT_SERVER_LOCAL_NFMARK},
     {"err_code", LFT_SQUID_ERROR },
     {"err_detail", LFT_SQUID_ERROR_DETAIL },
+    {"acl_matched", LFT_LAST_ACL_MATCHED },
     {"note", LFT_NOTE },
     {"credentials", LFT_CREDENTIALS},
     {NULL, LFT_NONE}		/* this must be last */

