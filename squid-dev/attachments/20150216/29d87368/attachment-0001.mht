[From nobody Tue Feb 17 10:33:12 2015
X-Envelope-From: &lt;gcwsd-squid-dev@m.gmane.org&gt;
X-Envelope-To: &lt;squid-dev@squid-cache.org&gt;
Received: from plane.gmane.org (unknown)
 by lists.squid-cache.org(Postfix 2.11.0/8.13.0) with SMTP id unknown
 Mon, 16 Feb 2015 22:58:22 +0000
 (envelope-from &lt;gcwsd-squid-dev@m.gmane.org&gt;
Received: from list by plane.gmane.org with local (Exim 4.69)
 (envelope-from &lt;gcwsd-squid-dev@m.gmane.org&gt;) id 1YNUbm-0005u4-R7
 for squid-dev@squid-cache.org; Mon, 16 Feb 2015 23:57:42 +0100
Received: from moeller.plus.com ([81.174.172.105])
 by main.gmane.org with esmtp (Gmexim 0.1 (Debian))
 id 1AlnuQ-0007hv-00
 for &lt;squid-dev@squid-cache.org&gt;; Mon, 16 Feb 2015 23:57:42 +0100
Received: from huaraz by moeller.plus.com with local (Gmexim 0.1 (Debian))
 id 1AlnuQ-0007hv-00
 for &lt;squid-dev@squid-cache.org&gt;; Mon, 16 Feb 2015 23:57:42 +0100
X-Injected-Via-Gmane: http://gmane.org/
To: squid-dev@squid-cache.org
From: &quot;Markus Moeller&quot; &lt;huaraz@moeller.plus.com&gt;
Subject: [PATCH]  remove error_message from kerberos_ldap_group
Date: Mon, 16 Feb 2015 22:57:34 -0000
Lines: 446
Message-ID: &lt;mbtsku$mp$1@ger.gmane.org&gt;
Mime-Version: 1.0
Content-Type: multipart/mixed;
 boundary=&quot;----=_NextPart_000_0257_01D04A3B.F39EC960&quot;
X-Complaints-To: usenet@ger.gmane.org
X-Gmane-NNTP-Posting-Host: moeller.plus.com
X-MSMail-Priority: Normal
Importance: Normal
X-Newsreader: Microsoft Windows Live Mail 16.4.3528.331
X-MimeOLE: Produced By Microsoft MimeOLE V16.4.3528.331

This is a multi-part message in MIME format.

------=_NextPart_000_0257_01D04A3B.F39EC960
Content-Type: text/plain;
	format=flowed;
	charset=&quot;iso-8859-1&quot;;
	reply-type=original
Content-Transfer-Encoding: 7bit

Hi Amos,

    Please find attached a patch to replace error_message with 
krb5_get_error_message.

Regards
Markus 

------=_NextPart_000_0257_01D04A3B.F39EC960
Content-Type: application/octet-stream;
	name=&quot;krb5_error_message.patch&quot;
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename=&quot;krb5_error_message.patch&quot;

=3D=3D=3D modified file =
'helpers/external_acl/kerberos_ldap_group/ext_kerberos_ldap_group_acl.8'=0A=
--- =
helpers/external_acl/kerberos_ldap_group/ext_kerberos_ldap_group_acl.8	=
2015-01-13 07:25:36 +0000=0A=
+++ =
helpers/external_acl/kerberos_ldap_group/ext_kerberos_ldap_group_acl.8	=
2015-02-09 21:28:35 +0000=0A=
@@ -96,7 +96,7 @@=0A=
 .if !'po4a'hide' .B \-u Ldap-User=0A=
 Username for LDAP server.=0A=
 .if !'po4a'hide' .TP 12=0A=
-.if !'po4a'hide' .B \-u Ldap-Password=0A=
+.if !'po4a'hide' .B \-p Ldap-Password=0A=
 Password for LDAP server.=0A=
 .IP=0A=
 As the password needs to be printed in plain text in your Squid =
configuration=0A=
@@ -108,7 +108,7 @@=0A=
 .if !'po4a'hide' .B \-b Ldap-Bind-Path=0A=
 LDAP server bind path.=0A=
 .if !'po4a'hide' .TP 12=0A=
-.if !'po4a'hide' .B \-u Ldap-URL=0A=
+.if !'po4a'hide' .B \-l Ldap-URL=0A=
 LDAP server URL in form ldap[s]://server:port=0A=
 .if !'po4a'hide' .TP 12=0A=
 .if !'po4a'hide' .B \-S ldap server list=0A=
=0A=
=3D=3D=3D modified file =
'helpers/external_acl/kerberos_ldap_group/support.h'=0A=
--- helpers/external_acl/kerberos_ldap_group/support.h	2015-01-13 =
07:25:36 +0000=0A=
+++ helpers/external_acl/kerberos_ldap_group/support.h	2015-02-14 =
14:37:17 +0000=0A=
@@ -55,8 +55,6 @@=0A=
 =0A=
 #if HAVE_COM_ERR_H=0A=
 #include &lt;com_err.h&gt;=0A=
-#elif USE_HEIMDAL_KRB5=0A=
-#define error_message(code) krb5_get_err_text(kparam.context,code)=0A=
 #endif /* HAVE_COM_ERR_H */=0A=
 =0A=
 #define LDAP_DEPRECATED 1=0A=
@@ -137,6 +135,9 @@=0A=
 void warn(char *format,...);=0A=
 #endif=0A=
 =0A=
+void k5_error(const char* msg, krb5_error_code code);=0A=
+void k5_error2(const char* msg, char* msg2, krb5_error_code code);=0A=
+=0A=
 struct hstruct {=0A=
     char *host;=0A=
     int port;=0A=
=0A=
=3D=3D=3D modified file =
'helpers/external_acl/kerberos_ldap_group/support_krb5.cc'=0A=
--- helpers/external_acl/kerberos_ldap_group/support_krb5.cc	2015-01-13 =
07:25:36 +0000=0A=
+++ helpers/external_acl/kerberos_ldap_group/support_krb5.cc	2015-02-14 =
14:37:17 +0000=0A=
@@ -54,6 +54,36 @@=0A=
         }=0A=
     krb5_free_context(kparam.context);=0A=
 }=0A=
+=0A=
+void=0A=
+k5_error(const char* msg, krb5_error_code code)=0A=
+{=0A=
+    const char *errmsg;=0A=
+    errmsg =3D krb5_get_error_message(kparam.context, code);=0A=
+    error((char *) &quot;%s| %s: ERROR: %s : %s\n&quot;, LogTime(), PROGRAM, msg, =
errmsg);=0A=
+#if HAVE_KRB5_FREE_ERROR_MESSAGE=0A=
+    krb5_free_error_message(kparam.context, errmsg);=0A=
+#elif HAVE_KRB5_FREE_ERROR_STRING=0A=
+    krb5_free_error_string(kparam.context, (char *)errmsg);=0A=
+#else=0A=
+    xfree(errmsg);=0A=
+#endif=0A=
+}=0A=
+=0A=
+void=0A=
+k5_error2(const char* msg, char* msg2, krb5_error_code code)=0A=
+{=0A=
+    const char *errmsg;=0A=
+    errmsg =3D krb5_get_error_message(kparam.context, code);=0A=
+    error((char *) &quot;%s| %s: ERROR: %s %s : %s\n&quot;, LogTime(), PROGRAM, =
msg, msg2, errmsg);=0A=
+#if HAVE_KRB5_FREE_ERROR_MESSAGE=0A=
+    krb5_free_error_message(kparam.context, errmsg);=0A=
+#elif HAVE_KRB5_FREE_ERROR_STRING=0A=
+    krb5_free_error_string(kparam.context, (char *)errmsg);=0A=
+#else=0A=
+    xfree(errmsg);=0A=
+#endif=0A=
+}=0A=
 /*=0A=
  * create Kerberos memory cache=0A=
  */=0A=
@@ -109,7 +139,7 @@=0A=
         }=0A=
         code =3D krb5_cc_resolve(kparam.context, mem_cache, =
&amp;kparam.cc[ccindex]);=0A=
         if (code) {=0A=
-            error((char *) &quot;%s| %s: ERROR: Error while resolving memory =
ccache : %s\n&quot;, LogTime(), PROGRAM, error_message(code));=0A=
+            k5_error(&quot;Error while resolving memory ccache&quot;,code);=0A=
             retval =3D 1;=0A=
             goto cleanup;=0A=
         }=0A=
@@ -123,23 +153,22 @@=0A=
         if (principal)=0A=
             krb5_free_principal(kparam.context, principal);=0A=
         principal =3D NULL;=0A=
-        debug((char *) &quot;%s| %s: DEBUG: No default principal found in =
ccache : %s\n&quot;, LogTime(), PROGRAM, error_message(code));=0A=
-=0A=
+        k5_error(&quot;No default principal found in ccache&quot;,code);=0A=
     } else {=0A=
         /*=0A=
          * Look for krbtgt and check if it is expired (or soon to be =
expired)=0A=
          */=0A=
         code =3D krb5_cc_start_seq_get(kparam.context, =
kparam.cc[ccindex], &amp;ccursor);=0A=
         if (code) {=0A=
-            error((char *) &quot;%s| %s: ERROR: Error while starting ccache =
scan : %s\n&quot;, LogTime(), PROGRAM, error_message(code));=0A=
+            k5_error(&quot;Error while starting ccache scan&quot;,code);=0A=
             code =3D krb5_cc_close (kparam.context, kparam.cc[ccindex]);=0A=
             if (code) {=0A=
-                error((char *) &quot;%s| %s: ERROR: while closing ccache : =
%s\n&quot;, LogTime(), PROGRAM, error_message(code));=0A=
+                k5_error(&quot;Error while closing ccache&quot;,code);=0A=
             }=0A=
             if (kparam.cc[ccindex]) {=0A=
                 code =3D krb5_cc_destroy(kparam.context, =
kparam.cc[ccindex]);=0A=
                 if (code) {=0A=
-                    error((char *) &quot;%s| %s: ERROR: while destroying =
ccache : %s\n&quot;, LogTime(), PROGRAM, error_message(code));=0A=
+                    k5_error(&quot;Error while destroying ccache&quot;,code);=0A=
                 }=0A=
             }=0A=
         } else {=0A=
@@ -148,10 +177,10 @@=0A=
             while ((krb5_cc_next_cred(kparam.context, =
kparam.cc[ccindex], &amp;ccursor, creds)) =3D=3D 0) {=0A=
                 code2 =3D krb5_unparse_name(kparam.context, =
creds-&gt;server, &amp;principal_name);=0A=
                 if (code2) {=0A=
-                    error((char *) &quot;%s| %s: ERROR: Error while =
unparsing principal : %s\n&quot;, LogTime(), PROGRAM, error_message(code2));=0A=
+                    k5_error(&quot;Error while unparsing principal&quot;,code2);=0A=
                     code =3D krb5_cc_destroy(kparam.context, =
kparam.cc[ccindex]);=0A=
                     if (code) {=0A=
-                        error((char *) &quot;%s| %s: ERROR: while destroying =
ccache : %s\n&quot;, LogTime(), PROGRAM, error_message(code));=0A=
+                        k5_error(&quot;Error while destroying ccache&quot;,code);=0A=
                     }=0A=
                     if (creds)=0A=
                         krb5_free_creds(kparam.context, creds);=0A=
@@ -160,7 +189,7 @@=0A=
                     debug((char *) &quot;%s| %s: DEBUG: Reset credential =
cache to %s\n&quot;, LogTime(), PROGRAM, mem_cache);=0A=
                     code =3D krb5_cc_resolve(kparam.context, mem_cache, =
&amp;kparam.cc[ccindex]);=0A=
                     if (code) {=0A=
-                        error((char *) &quot;%s| %s: ERROR: Error while =
resolving memory ccache : %s\n&quot;, LogTime(), PROGRAM, =
error_message(code));=0A=
+                        k5_error(&quot;Error  while resolving memory =
ccache&quot;,code);=0A=
                         retval =3D 1;=0A=
                         goto cleanup;=0A=
                     }=0A=
@@ -184,7 +213,7 @@=0A=
                         principal =3D NULL;=0A=
                         code =3D krb5_cc_destroy(kparam.context, =
kparam.cc[ccindex]);=0A=
                         if (code) {=0A=
-                            error((char *) &quot;%s| %s: ERROR: while =
destroying ccache : %s\n&quot;, LogTime(), PROGRAM, error_message(code));=0A=
+                            k5_error(&quot;Error  while destroying =
ccache&quot;,code);=0A=
                         }=0A=
                         if (creds)=0A=
                             krb5_free_creds(kparam.context, creds);=0A=
@@ -193,7 +222,7 @@=0A=
                         debug((char *) &quot;%s| %s: DEBUG: Reset credential =
cache to %s\n&quot;, LogTime(), PROGRAM, mem_cache);=0A=
                         code =3D krb5_cc_resolve(kparam.context, =
mem_cache, &amp;kparam.cc[ccindex]);=0A=
                         if (code) {=0A=
-                            error((char *) &quot;%s| %s: ERROR: Error while =
resolving memory ccache : %s\n&quot;, LogTime(), PROGRAM, =
error_message(code));=0A=
+                            k5_error(&quot;Error  while resolving =
ccache&quot;,code);=0A=
                             retval =3D 1;=0A=
                             goto cleanup;=0A=
                         }=0A=
@@ -213,7 +242,7 @@=0A=
             creds =3D NULL;=0A=
             code2 =3D krb5_cc_end_seq_get(kparam.context, =
kparam.cc[ccindex], &amp;ccursor);=0A=
             if (code2) {=0A=
-                error((char *) &quot;%s| %s: ERROR: Error while ending =
ccache scan : %s\n&quot;, LogTime(), PROGRAM, error_message(code));=0A=
+                k5_error(&quot;Error  while ending ccache scan&quot;,code2);=0A=
                 retval =3D 1;=0A=
                 goto cleanup;=0A=
             }=0A=
@@ -234,13 +263,13 @@=0A=
 =0A=
         code =3D krb5_kt_resolve(kparam.context, keytab_name, &amp;keytab);=0A=
         if (code) {=0A=
-            error((char *) &quot;%s| %s: ERROR: Error while resolving keytab =
%s : %s\n&quot;, LogTime(), PROGRAM, keytab_name, error_message(code));=0A=
+            k5_error2(&quot;Error while resolving keytab&quot;,keytab_name,code);=0A=
             retval =3D 1;=0A=
             goto cleanup;=0A=
         }=0A=
         code =3D krb5_kt_start_seq_get(kparam.context, keytab, &amp;cursor);=0A=
         if (code) {=0A=
-            error((char *) &quot;%s| %s: ERROR: Error while starting keytab =
scan : %s\n&quot;, LogTime(), PROGRAM, error_message(code));=0A=
+            k5_error(&quot;Error while starting keytab scan&quot;,code);=0A=
             retval =3D 1;=0A=
             goto cleanup;=0A=
         }=0A=
@@ -265,7 +294,7 @@=0A=
             {=0A=
                 code =3D krb5_unparse_name(kparam.context, =
entry.principal, &amp;principal_name);=0A=
                 if (code) {=0A=
-                    error((char *) &quot;%s| %s: ERROR: Error while =
unparsing principal name : %s\n&quot;, LogTime(), PROGRAM, =
error_message(code));=0A=
+                    k5_error(&quot;Error while unparsing principal =
name&quot;,code);=0A=
                 } else {=0A=
                     debug((char *) &quot;%s| %s: DEBUG: Found principal =
name: %s\n&quot;, LogTime(), PROGRAM, principal_name);=0A=
                     found =3D 1;=0A=
@@ -277,7 +306,7 @@=0A=
             code =3D krb5_free_keytab_entry_contents(kparam.context, =
&amp;entry);=0A=
 #endif=0A=
             if (code) {=0A=
-                error((char *) &quot;%s| %s: ERROR: Error while freeing =
keytab entry : %s\n&quot;, LogTime(), PROGRAM, error_message(code));=0A=
+                k5_error(&quot;Error while freeing keytab entry&quot;,code);=0A=
                 retval =3D 1;=0A=
                 break;=0A=
             }=0A=
@@ -288,7 +317,7 @@=0A=
                  */=0A=
                 code =3D krb5_parse_name(kparam.context, =
principal_name, &amp;principal);=0A=
                 if (code) {=0A=
-                    error((char *) &quot;%s| %s: ERROR: Error while parsing =
name %s : %s\n&quot;, LogTime(), PROGRAM, principal_name, =
error_message(code));=0A=
+                    k5_error2(&quot;Error while parsing name&quot;, =
principal_name,code);=0A=
                     safe_free(principal_name);=0A=
                     if (principal)=0A=
                         krb5_free_principal(kparam.context, principal);=0A=
@@ -312,7 +341,7 @@=0A=
 #endif=0A=
 =0A=
                 if (code) {=0A=
-                    error((char *) &quot;%s| %s: ERROR: Error while =
initialising credentials from keytab : %s\n&quot;, LogTime(), PROGRAM, =
error_message(code));=0A=
+                    k5_error(&quot;Error while initialising credentials from =
keytab&quot; ,code);=0A=
                     safe_free(principal_name);=0A=
                     if (principal)=0A=
                         krb5_free_principal(kparam.context, principal);=0A=
@@ -324,7 +353,7 @@=0A=
                 }=0A=
                 code =3D krb5_cc_initialize(kparam.context, =
kparam.cc[ccindex], principal);=0A=
                 if (code) {=0A=
-                    error((char *) &quot;%s| %s: ERROR: Error while =
initializing memory caches : %s\n&quot;, LogTime(), PROGRAM, =
error_message(code));=0A=
+                    k5_error(&quot;Error while initialising  memory caches&quot; =
,code);=0A=
                     safe_free(principal_name);=0A=
                     if (principal)=0A=
                         krb5_free_principal(kparam.context, principal);=0A=
@@ -336,7 +365,7 @@=0A=
                 }=0A=
                 code =3D krb5_cc_store_cred(kparam.context, =
kparam.cc[ccindex], creds);=0A=
                 if (code) {=0A=
-                    error((char *) &quot;%s| %s: ERROR: Error while storing =
credentials : %s\n&quot;, LogTime(), PROGRAM, error_message(code));=0A=
+                    k5_error(&quot;Error while storing credentials&quot; ,code);=0A=
                     if (principal)=0A=
                         krb5_free_principal(kparam.context, principal);=0A=
                     safe_free(principal_name);=0A=
@@ -352,13 +381,13 @@=0A=
         }=0A=
 =0A=
         if (code &amp;&amp; code !=3D KRB5_KT_END) {=0A=
-            error((char *) &quot;%s| %s: ERROR: Error while scanning keytab =
: %s\n&quot;, LogTime(), PROGRAM, error_message(code));=0A=
+            k5_error(&quot;Error while scanning keytab&quot; ,code);=0A=
             retval =3D 1;=0A=
             goto cleanup;=0A=
         }=0A=
         code =3D krb5_kt_end_seq_get(kparam.context, keytab, &amp;cursor);=0A=
         if (code) {=0A=
-            error((char *) &quot;%s| %s: ERROR: Error while ending keytab =
scan : %s\n&quot;, LogTime(), PROGRAM, error_message(code));=0A=
+            k5_error(&quot;Error while ending keytab scan&quot; ,code);=0A=
             retval =3D 1;=0A=
             goto cleanup;=0A=
         }=0A=
@@ -380,7 +409,7 @@=0A=
                  */=0A=
                 code =3D krb5_unparse_name(kparam.context, =
principal_list[i], &amp;principal_name);=0A=
                 if (code) {=0A=
-                    debug((char *) &quot;%s| %s: DEBUG: Error while =
unparsing principal name : %s\n&quot;, LogTime(), PROGRAM, =
error_message(code));=0A=
+                    k5_error(&quot;Error while unparsing principal name&quot; =
,code);=0A=
                     goto loop_end;=0A=
                 }=0A=
                 debug((char *) &quot;%s| %s: DEBUG: Keytab entry has =
principal: %s\n&quot;, LogTime(), PROGRAM, principal_name);=0A=
@@ -396,17 +425,17 @@=0A=
                 code =3D krb5_get_in_tkt_with_keytab(kparam.context, 0, =
NULL, NULL, NULL, keytab, NULL, creds, 0);=0A=
 #endif=0A=
                 if (code) {=0A=
-                    debug((char *) &quot;%s| %s: DEBUG: Error while =
initialising credentials from keytab : %s\n&quot;, LogTime(), PROGRAM, =
error_message(code));=0A=
+                    k5_error(&quot;Error while initialising credentials from =
keytab&quot; ,code);=0A=
                     goto loop_end;=0A=
                 }=0A=
                 code =3D krb5_cc_initialize(kparam.context, =
kparam.cc[ccindex], principal_list[i]);=0A=
                 if (code) {=0A=
-                    error((char *) &quot;%s| %s: ERROR: Error while =
initializing memory caches : %s\n&quot;, LogTime(), PROGRAM, =
error_message(code));=0A=
+                    k5_error(&quot;Error while initialising memory caches&quot; =
,code);=0A=
                     goto loop_end;=0A=
                 }=0A=
                 code =3D krb5_cc_store_cred(kparam.context, =
kparam.cc[ccindex], creds);=0A=
                 if (code) {=0A=
-                    debug((char *) &quot;%s| %s: DEBUG: Error while storing =
credentials : %s\n&quot;, LogTime(), PROGRAM, error_message(code));=0A=
+                    k5_error(&quot;Error while storing credentials&quot; ,code);=0A=
                     goto loop_end;=0A=
                 }=0A=
                 if (creds-&gt;server)=0A=
@@ -421,12 +450,12 @@=0A=
                 code =3D krb5_parse_name(kparam.context, service, =
&amp;creds-&gt;server);=0A=
                 xfree(service);=0A=
                 if (code) {=0A=
-                    error((char *) &quot;%s| %s: ERROR: Error while =
initialising TGT credentials : %s\n&quot;, LogTime(), PROGRAM, =
error_message(code));=0A=
+                    k5_error(&quot;Error while initialising TGT credentials&quot; =
,code);=0A=
                     goto loop_end;=0A=
                 }=0A=
                 code =3D krb5_get_credentials(kparam.context, 0, =
kparam.cc[ccindex], creds, &amp;tgt_creds);=0A=
                 if (code) {=0A=
-                    debug((char *) &quot;%s| %s: DEBUG: Error while getting =
tgt : %s\n&quot;, LogTime(), PROGRAM, error_message(code));=0A=
+                    k5_error(&quot;Error while getting tgt&quot; ,code);=0A=
                     goto loop_end;=0A=
                 } else {=0A=
                     debug((char *) &quot;%s| %s: DEBUG: Found trusted =
principal name: %s\n&quot;, LogTime(), PROGRAM, principal_name);=0A=
@@ -458,7 +487,7 @@=0A=
          */=0A=
         code =3D krb5_unparse_name(kparam.context, principal, =
&amp;principal_name);=0A=
         if (code) {=0A=
-            debug((char *) &quot;%s| %s: DEBUG: Error while unparsing =
principal name : %s\n&quot;, LogTime(), PROGRAM, error_message(code));=0A=
+            k5_error(&quot;Error while unparsing principal name&quot; ,code);=0A=
             retval =3D 1;=0A=
             goto cleanup;=0A=
         }=0A=
=0A=
=3D=3D=3D modified file =
'helpers/negotiate_auth/kerberos/negotiate_kerberos_pac.cc'=0A=
--- helpers/negotiate_auth/kerberos/negotiate_kerberos_pac.cc	2015-02-06 =
12:12:04 +0000=0A=
+++ helpers/negotiate_auth/kerberos/negotiate_kerberos_pac.cc	2015-02-14 =
14:28:30 +0000=0A=
@@ -40,7 +40,7 @@=0A=
 =0A=
 #include &quot;negotiate_kerberos.h&quot;=0A=
 =0A=
-#if HAVE_PAC_SUPPORT=0A=
+#if HAVE_GSSAPI &amp;&amp; HAVE_PAC_SUPPORT=0A=
 =0A=
 static int bpos;=0A=
 static krb5_data *ad_data;=0A=
=0A=

------=_NextPart_000_0257_01D04A3B.F39EC960--


]