=== modified file 'src/CacheDigest.h'
--- src/CacheDigest.h	2015-01-13 07:25:36 +0000
+++ src/CacheDigest.h	2015-08-31 07:15:17 +0000
@@ -11,8 +11,7 @@
 #ifndef SQUID_CACHEDIGEST_H_
 #define SQUID_CACHEDIGEST_H_
 
-/* for cache_key */
-#include "typedefs.h"
+#include "store_key_md5.h"
 
 class CacheDigestGuessStats;
 class StoreEntry;

=== modified file 'src/ClientInfo.h'
--- src/ClientInfo.h	2015-08-30 00:26:47 +0000
+++ src/ClientInfo.h	2015-08-31 07:15:17 +0000
@@ -15,7 +15,7 @@
 #include "hash.h"
 #include "ip/Address.h"
 #include "LogTags.h"
-#include "typedefs.h"
+#include "typedefs.h" //for kb_t
 
 #include <deque>
 

=== modified file 'src/CollapsedForwarding.h'
--- src/CollapsedForwarding.h	2015-05-23 20:17:16 +0000
+++ src/CollapsedForwarding.h	2015-08-31 07:15:17 +0000
@@ -13,7 +13,6 @@
 
 #include "ipc/forward.h"
 #include "ipc/Queue.h"
-#include "typedefs.h"
 
 #include <memory>
 

=== modified file 'src/DiskIO/AIO/async_io.h'
--- src/DiskIO/AIO/async_io.h	2015-07-21 13:56:20 +0000
+++ src/DiskIO/AIO/async_io.h	2015-08-28 14:03:22 +0000
@@ -19,8 +19,7 @@
 #endif
 #endif
 
-/* for FREE* */
-#include "typedefs.h"
+#include "mem/forward.h"
 
 #define MAX_ASYNCOP     128
 

=== modified file 'src/DiskIO/Blocking/BlockingFile.h'
--- src/DiskIO/Blocking/BlockingFile.h	2015-01-13 07:25:36 +0000
+++ src/DiskIO/Blocking/BlockingFile.h	2015-08-31 07:15:17 +0000
@@ -14,6 +14,7 @@
 #include "cbdata.h"
 #include "DiskIO/DiskFile.h"
 #include "DiskIO/IORequestor.h"
+#include "typedefs.h" //DRCB, DWCB
 
 class BlockingFile : public DiskFile
 {

=== modified file 'src/DiskIO/DiskFile.h'
--- src/DiskIO/DiskFile.h	2015-01-13 07:25:36 +0000
+++ src/DiskIO/DiskFile.h	2015-08-31 07:15:17 +0000
@@ -10,7 +10,7 @@
 #define SQUID_DISKFILE_H
 
 #include "base/RefCount.h"
-#include "typedefs.h"
+#include "SquidTime.h"
 
 class IORequestor;
 

=== modified file 'src/DiskIO/DiskThreads/DiskThreads.h'
--- src/DiskIO/DiskThreads/DiskThreads.h	2015-01-13 07:25:36 +0000
+++ src/DiskIO/DiskThreads/DiskThreads.h	2015-08-28 14:03:22 +0000
@@ -16,7 +16,7 @@
 #define __DISKTHREADS_H__
 
 #include "dlink.h"
-#include "typedefs.h"
+#include "mem/forward.h"
 
 /* this non-standard-conformant include is needed in order to have stat(2) and struct stat
    properly defined on some systems (e.g. OpenBSD 5.4) */

=== modified file 'src/DiskIO/DiskThreads/DiskThreadsDiskFile.h'
--- src/DiskIO/DiskThreads/DiskThreadsDiskFile.h	2015-01-13 07:25:36 +0000
+++ src/DiskIO/DiskThreads/DiskThreadsDiskFile.h	2015-08-31 07:15:17 +0000
@@ -10,9 +10,11 @@
 
 #ifndef SQUID_DISKTHREADSDISKFILE_H
 #define SQUID_DISKTHREADSDISKFILE_H
+
 #include "cbdata.h"
 #include "DiskIO/DiskFile.h"
 #include "DiskThreads.h"
+#include "typedefs.h" //for DWCB
 
 class DiskThreadsDiskFile : public DiskFile
 {

=== modified file 'src/DiskIO/WriteRequest.h'
--- src/DiskIO/WriteRequest.h	2015-01-13 07:25:36 +0000
+++ src/DiskIO/WriteRequest.h	2015-08-28 14:29:51 +0000
@@ -11,6 +11,7 @@
 
 #include "base/RefCount.h"
 #include "cbdata.h"
+#include "mem/forward.h"
 
 class WriteRequest : public RefCountable
 {

=== modified file 'src/FileMap.h'
--- src/FileMap.h	2015-01-13 07:25:36 +0000
+++ src/FileMap.h	2015-08-28 10:11:56 +0000
@@ -11,7 +11,7 @@
 #ifndef FILEMAP_H_
 #define FILEMAP_H_
 
-#include "typedefs.h"
+#include "fs/forward.h"
 
 /** A bitmap used for managing UFS StoreEntry "file numbers".
  *

=== modified file 'src/HttpHeaderTools.h'
--- src/HttpHeaderTools.h	2015-08-04 19:57:07 +0000
+++ src/HttpHeaderTools.h	2015-08-31 07:15:17 +0000
@@ -12,7 +12,6 @@
 #include "acl/forward.h"
 #include "format/Format.h"
 #include "HttpHeader.h"
-#include "typedefs.h"
 
 #include <functional>
 #include <list>

=== modified file 'src/HttpMsg.h'
--- src/HttpMsg.h	2015-04-26 16:41:06 +0000
+++ src/HttpMsg.h	2015-08-31 07:15:17 +0000
@@ -11,6 +11,7 @@
 
 #include "base/Lock.h"
 #include "BodyPipe.h"
+#include "enums.h"
 #include "http/forward.h"
 #include "http/ProtocolVersion.h"
 #include "http/StatusCode.h"

=== modified file 'src/ICP.h'
--- src/ICP.h	2015-06-11 05:02:13 +0000
+++ src/ICP.h	2015-08-31 07:15:17 +0000
@@ -19,6 +19,7 @@
 #include "ip/Address.h"
 #include "LogTags.h"
 #include "StoreClient.h"
+#include "store_key_md5.h"
 
 class HttpRequest;
 

=== modified file 'src/Makefile.am'
--- src/Makefile.am	2015-08-25 15:04:22 +0000
+++ src/Makefile.am	2015-08-31 07:15:17 +0000
@@ -312,6 +312,7 @@ squid_SOURCES = \
 	filemap.cc \
 	fqdncache.h \
 	fqdncache.cc \
+	fs/forward.h \
 	FwdState.cc \
 	FwdState.h \
 	Generic.h \
@@ -1304,6 +1305,7 @@ tests_testCacheManager_SOURCES = \
 	filemap.cc \
 	fqdncache.h \
 	fqdncache.cc \
+	fs/forward.h \
 	FwdState.cc \
 	FwdState.h \
 	gopher.h \
@@ -1505,6 +1507,7 @@ tests_testDiskIO_SOURCES = \
 	fde.cc \
 	FileMap.h \
 	filemap.cc \
+	fs/forward.h \
 	HttpBody.h \
 	HttpBody.cc \
 	HttpHeaderFieldStat.h \
@@ -1734,6 +1737,7 @@ tests_testEvent_SOURCES = \
 	filemap.cc \
 	fqdncache.h \
 	fqdncache.cc \
+	fs/forward.h \
 	FwdState.cc \
 	FwdState.h \
 	gopher.h \
@@ -1977,6 +1981,7 @@ tests_testEventLoop_SOURCES = \
 	filemap.cc \
 	fqdncache.h \
 	fqdncache.cc \
+	fs/forward.h \
 	FwdState.cc \
 	FwdState.h \
 	gopher.h \
@@ -2215,6 +2220,7 @@ tests_test_http_range_SOURCES = \
 	filemap.cc \
 	fqdncache.h \
 	fqdncache.cc \
+	fs/forward.h \
 	FwdState.cc \
 	FwdState.h \
 	gopher.h \
@@ -2539,6 +2545,7 @@ tests_testHttpRequest_SOURCES = \
 	fde.cc \
 	fqdncache.h \
 	fqdncache.cc \
+	fs/forward.h \
 	FwdState.cc \
 	FwdState.h \
 	gopher.h \
@@ -2772,6 +2779,7 @@ tests_testStore_SOURCES= \
 	tests/stub_fatal.cc \
 	FileMap.h \
 	filemap.cc \
+	fs/forward.h \
 	HttpHeaderFieldStat.h \
 	HttpHdrCc.h \
 	HttpHdrCc.cc \
@@ -3016,6 +3024,7 @@ tests_testUfs_SOURCES = \
 	disk.cc \
 	FileMap.h \
 	filemap.cc \
+	fs/forward.h \
 	HttpBody.h \
 	HttpBody.cc \
 	HttpReply.cc \
@@ -3191,6 +3200,7 @@ tests_testRock_SOURCES = \
 	fde.cc \
 	FileMap.h \
 	filemap.cc \
+	fs/forward.h \
 	HttpHeaderFieldStat.h \
 	HttpBody.h \
 	HttpBody.cc \
@@ -3385,6 +3395,7 @@ tests_testURL_SOURCES = \
 	filemap.cc \
 	fqdncache.h \
 	fqdncache.cc \
+	fs/forward.h \
 	FwdState.cc \
 	FwdState.h \
 	gopher.h \

=== modified file 'src/MemBuf.h'
--- src/MemBuf.h	2015-03-04 16:02:53 +0000
+++ src/MemBuf.h	2015-08-31 07:15:17 +0000
@@ -11,6 +11,10 @@
 
 #include "base/Packable.h"
 #include "cbdata.h"
+#include "mem/forward.h"
+
+/* in case we want to change it later */
+typedef ssize_t mb_size_t;
 
 /**
  * Auto-growing memory-resident buffer with Packable interface

=== modified file 'src/MemObject.h'
--- src/MemObject.h	2015-07-25 12:03:27 +0000
+++ src/MemObject.h	2015-08-31 07:15:17 +0000
@@ -16,12 +16,14 @@
 #include "stmem.h"
 #include "StoreIOBuffer.h"
 #include "StoreIOState.h"
+#include "typedefs.h" //for IRCB
 
 #if USE_DELAY_POOLS
 #include "DelayId.h"
 #endif
 
 typedef void STMCB (void *data, StoreIOBuffer wroteBuffer);
+typedef void STABH(void *);
 
 class store_client;
 class HttpRequest;

=== modified file 'src/Notes.h'
--- src/Notes.h	2015-01-13 07:25:36 +0000
+++ src/Notes.h	2015-08-31 07:15:17 +0000
@@ -14,7 +14,6 @@
 #include "format/Format.h"
 #include "mem/forward.h"
 #include "SquidString.h"
-#include "typedefs.h"
 
 #include <string>
 #include <vector>

=== modified file 'src/RemovalPolicy.h'
--- src/RemovalPolicy.h	2015-01-13 07:25:36 +0000
+++ src/RemovalPolicy.h	2015-08-31 07:15:17 +0000
@@ -13,6 +13,8 @@
 
 class RemovalPolicyWalker;
 class RemovalPurgeWalker;
+class wordlist;
+class StoreEntry;
 
 class RemovalPolicySettings
 {

=== modified file 'src/SquidConfig.h'
--- src/SquidConfig.h	2015-06-28 15:02:53 +0000
+++ src/SquidConfig.h	2015-08-31 07:15:17 +0000
@@ -18,6 +18,7 @@
 #include "ip/Address.h"
 #include "Notes.h"
 #include "security/forward.h"
+#include "SquidTime.h"
 #include "YesNoNone.h"
 
 #if USE_OPENSSL
@@ -29,6 +30,7 @@ namespace Mgr
 {
 class ActionPasswordList;
 } // namespace Mgr
+class CachePeer;
 class CustomLog;
 class CpuAffinityMap;
 class external_acl;

=== modified file 'src/SquidList.cc'
--- src/SquidList.cc	2015-01-13 07:25:36 +0000
+++ src/SquidList.cc	2015-08-31 07:15:17 +0000
@@ -11,7 +11,6 @@
 #include "squid.h"
 #include "mem/forward.h"
 #include "SquidList.h"
-#include "typedefs.h"
 
 /* This should go away, in favour of the List template class */
 

=== modified file 'src/SquidTime.h'
--- src/SquidTime.h	2015-01-13 07:25:36 +0000
+++ src/SquidTime.h	2015-08-31 07:15:17 +0000
@@ -16,6 +16,9 @@
 #include <ctime>
 /* NP: sys/time.h is provided by libcompat */
 
+/* Use uint64_t to store milliseconds*/
+typedef uint64_t time_msec_t;
+
 /* globals for accessing time */
 extern struct timeval current_time;
 extern double current_dtime;

=== modified file 'src/Store.h'
--- src/Store.h	2015-08-24 21:07:31 +0000
+++ src/Store.h	2015-08-31 07:15:17 +0000
@@ -20,6 +20,7 @@
 #include "MemObject.h"
 #include "Range.h"
 #include "RemovalPolicy.h"
+#include "store_key_md5.h"
 #include "StoreIOBuffer.h"
 #include "StoreStats.h"
 

=== modified file 'src/StoreIOState.h'
--- src/StoreIOState.h	2015-05-16 08:41:00 +0000
+++ src/StoreIOState.h	2015-08-28 15:05:10 +0000
@@ -11,6 +11,8 @@
 
 #include "base/RefCount.h"
 #include "cbdata.h"
+#include "fs/forward.h"
+#include "mem/forward.h"
 
 class StoreIOState : public RefCountable
 {

=== modified file 'src/StoreSwapLogData.h'
--- src/StoreSwapLogData.h	2015-01-13 07:25:36 +0000
+++ src/StoreSwapLogData.h	2015-08-28 10:31:51 +0000
@@ -37,7 +37,7 @@
 
 #include "md5.h"
 #include "mem/forward.h"
-#include "typedefs.h"
+#include "fs/forward.h"
 
 /// maintains a 24-bit checksum over integer fields
 class SwapChecksum24

=== modified file 'src/SwapDir.h'
--- src/SwapDir.h	2015-08-01 02:13:13 +0000
+++ src/SwapDir.h	2015-08-28 09:11:40 +0000
@@ -24,6 +24,8 @@ class HttpRequestMethod;
 /* Store dir configuration routines */
 /* SwapDir *sd, char *path ( + char *opt later when the strtok mess is gone) */
 
+typedef int STDIRSELECT(const StoreEntry *);
+
 class ConfigOption;
 
 /// hides memory/disk cache distinction from callers

=== modified file 'src/acl/DestinationDomain.h'
--- src/acl/DestinationDomain.h	2015-01-29 16:09:11 +0000
+++ src/acl/DestinationDomain.h	2015-08-31 07:15:17 +0000
@@ -13,6 +13,7 @@
 #include "acl/Checklist.h"
 #include "acl/Data.h"
 #include "acl/Strategised.h"
+#include "dns/forward.h"
 
 /// \ingroup ACLAPI
 class ACLDestinationDomainStrategy : public ACLStrategy<char const *>

=== modified file 'src/acl/SourceDomain.h'
--- src/acl/SourceDomain.h	2015-01-29 16:09:11 +0000
+++ src/acl/SourceDomain.h	2015-08-31 07:15:17 +0000
@@ -12,6 +12,7 @@
 #include "acl/Checklist.h"
 #include "acl/Data.h"
 #include "acl/Strategised.h"
+#include "dns/forward.h"
 
 class ACLSourceDomainStrategy : public ACLStrategy<char const *>
 {

=== modified file 'src/cbdata.h'
--- src/cbdata.h	2015-03-14 17:53:38 +0000
+++ src/cbdata.h	2015-08-31 07:15:17 +0000
@@ -9,8 +9,6 @@
 #ifndef SQUID_SRC_CBDATA_H
 #define SQUID_SRC_CBDATA_H
 
-#include "typedefs.h"
-
 /**
 \page CBDATA Callback Data Allocator API
 

=== modified file 'src/comm/Connection.h'
--- src/comm/Connection.h	2015-06-02 10:15:06 +0000
+++ src/comm/Connection.h	2015-08-31 07:15:17 +0000
@@ -13,14 +13,14 @@
 
 #include "comm/forward.h"
 #include "defines.h"
-#include "hier_code.h"
-#include "ip/Address.h"
-#include "mem/forward.h"
-#include "typedefs.h"
 #if USE_SQUID_EUI
 #include "eui/Eui48.h"
 #include "eui/Eui64.h"
 #endif
+#include "hier_code.h"
+#include "ip/Address.h"
+#include "ip/forward.h"
+#include "mem/forward.h"
 #include "SquidTime.h"
 
 #include <iosfwd>

=== modified file 'src/comm/IoCallback.h'
--- src/comm/IoCallback.h	2015-01-13 07:25:36 +0000
+++ src/comm/IoCallback.h	2015-08-28 14:03:22 +0000
@@ -12,7 +12,7 @@
 #include "base/AsyncCall.h"
 #include "comm/Flag.h"
 #include "comm/forward.h"
-#include "typedefs.h"
+#include "mem/forward.h"
 
 class SBuf;
 

=== modified file 'src/comm/Loops.h'
--- src/comm/Loops.h	2015-01-13 07:25:36 +0000
+++ src/comm/Loops.h	2015-08-28 15:03:44 +0000
@@ -10,9 +10,7 @@
 #define _SQUID_SRC_COMM_LOOPS_H
 
 #include "comm/Flag.h"
-
-// for PF
-#include "typedefs.h"
+#include "comm/forward.h"
 
 /* Comm layer select loops API.
  *

=== modified file 'src/comm/Write.h'
--- src/comm/Write.h	2015-01-13 07:25:36 +0000
+++ src/comm/Write.h	2015-08-31 07:15:17 +0000
@@ -11,7 +11,7 @@
 
 #include "base/AsyncCall.h"
 #include "comm/forward.h"
-#include "typedefs.h"
+#include "mem/forward.h"
 
 class MemBuf;
 namespace Comm

=== modified file 'src/comm/forward.h'
--- src/comm/forward.h	2015-01-13 07:25:36 +0000
+++ src/comm/forward.h	2015-08-31 07:15:17 +0000
@@ -28,5 +28,9 @@ bool IsConnOpen(const Comm::ConnectionPo
 
 }; // namespace Comm
 
+/// legacy CBDATA callback functions ABI definition for read or write I/O events
+/// \deprecated use CommCalls API instead where possible
+typedef void PF(int, void *);
+
 #endif /* _SQUID_COMM_FORWARD_H */
 

=== modified file 'src/disk.h'
--- src/disk.h	2015-01-13 07:25:36 +0000
+++ src/disk.h	2015-08-28 14:30:30 +0000
@@ -11,7 +11,8 @@
 #ifndef SQUID_DISK_H_
 #define SQUID_DISK_H_
 
-#include "typedefs.h"
+#include "mem/forward.h"
+#include "typedefs.h" //DRCB, DWCB
 
 class MemBuf;
 

=== modified file 'src/errorpage.h'
--- src/errorpage.h	2015-01-13 07:25:36 +0000
+++ src/errorpage.h	2015-08-31 07:15:17 +0000
@@ -24,6 +24,9 @@
 #include "ssl/ErrorDetail.h"
 #endif
 
+/// error page callback
+typedef void ERCB(int fd, void *, size_t);
+
 /**
  \defgroup ErrorPageAPI Error Pages API
  \ingroup Components
@@ -69,6 +72,8 @@
 class HttpReply;
 class HttpRequest;
 class MemBuf;
+class StoreEntry;
+class wordlist;
 
 /// \ingroup ErrorPageAPI
 class ErrorState

=== modified file 'src/fde.cc'
--- src/fde.cc	2015-01-13 07:25:36 +0000
+++ src/fde.cc	2015-08-31 07:15:17 +0000
@@ -10,6 +10,7 @@
 
 #include "squid.h"
 #include "comm/Read.h"
+#include "fd.h"
 #include "fde.h"
 #include "globals.h"
 #include "SquidTime.h"

=== modified file 'src/fde.h'
--- src/fde.h	2015-07-13 16:04:07 +0000
+++ src/fde.h	2015-08-31 07:15:17 +0000
@@ -12,12 +12,26 @@
 #include "comm.h"
 #include "defines.h"
 #include "ip/Address.h"
+#include "ip/forward.h"
 #include "security/forward.h"
+#include "typedefs.h" //DRCB, DWCB
 
 #if USE_DELAY_POOLS
 class ClientInfo;
 #endif
 
+/**
+ * READ_HANDLER functions return < 0 if, and only if, they fail with an error.
+ * On error, they must pass back an error code in 'errno'.
+ */
+typedef int READ_HANDLER(int, char *, int);
+
+/**
+ * WRITE_HANDLER functions return < 0 if, and only if, they fail with an error.
+ * On error, they must pass back an error code in 'errno'.
+ */
+typedef int WRITE_HANDLER(int, const char *, int);
+
 class dwrite_q;
 class _fde_disk
 {
@@ -103,7 +117,6 @@ public:
     void *lifetime_data;
     AsyncCall::Pointer closeHandler;
     AsyncCall::Pointer halfClosedReader; /// read handler for half-closed fds
-    CommWriteStateData *wstate;         /* State data for comm_write */
     READ_HANDLER *read_method;
     WRITE_HANDLER *write_method;
     Security::SessionPointer ssl;
@@ -153,7 +166,6 @@ private:
         lifetime_data = NULL;
         closeHandler = NULL;
         halfClosedReader = NULL;
-        wstate = NULL;
         read_method = NULL;
         write_method = NULL;
         ssl = NULL;

=== modified file 'src/fqdncache.cc'
--- src/fqdncache.cc	2015-01-29 16:09:11 +0000
+++ src/fqdncache.cc	2015-08-31 07:15:17 +0000
@@ -14,6 +14,7 @@
 #include "dns/LookupDetails.h"
 #include "dns/rfc1035.h"
 #include "event.h"
+#include "fqdncache.h"
 #include "helper.h"
 #include "mgr/Registration.h"
 #include "SquidConfig.h"

=== modified file 'src/fqdncache.h'
--- src/fqdncache.h	2015-01-13 07:25:36 +0000
+++ src/fqdncache.h	2015-08-31 07:15:17 +0000
@@ -12,10 +12,15 @@
 #define SQUID_FQDNCACHE_H_
 
 #include "ip/Address.h"
-#include "typedefs.h"
 
 class StoreEntry;
 class wordlist;
+namespace Dns
+{
+class LookupDetails;
+}
+
+typedef void FQDNH(const char *, const Dns::LookupDetails &details, void *);
 
 void fqdncache_init(void);
 void fqdnStats(StoreEntry *);

=== added file 'src/fs/forward.h'
--- src/fs/forward.h	1970-01-01 00:00:00 +0000
+++ src/fs/forward.h	2015-08-31 07:15:17 +0000
@@ -0,0 +1,15 @@
+/*
+ * Copyright (C) 1996-2015 The Squid Software Foundation and contributors
+ *
+ * Squid software is distributed under GPLv2+ license and includes
+ * contributions from numerous individuals and organizations.
+ * Please see the COPYING and CONTRIBUTORS files for details.
+ */
+
+#ifndef SQUID_FORWARD_H_
+#define SQUID_FORWARD_H_
+
+typedef int32_t sfileno;
+typedef signed int sdirno;
+
+#endif /* SQUID_FORWARD_H_ */

=== modified file 'src/fs/rock/RockDbCell.h'
--- src/fs/rock/RockDbCell.h	2015-01-13 07:25:36 +0000
+++ src/fs/rock/RockDbCell.h	2015-08-28 10:09:07 +0000
@@ -9,7 +9,7 @@
 #ifndef SQUID_FS_ROCK_DB_CELL_H
 #define SQUID_FS_ROCK_DB_CELL_H
 
-#include "typedefs.h"
+#include "fs/forward.h"
 
 namespace Rock
 {

=== modified file 'src/fs/rock/RockForward.h'
--- src/fs/rock/RockForward.h	2015-01-13 07:25:36 +0000
+++ src/fs/rock/RockForward.h	2015-08-28 10:09:21 +0000
@@ -9,6 +9,8 @@
 #ifndef SQUID_FS_ROCK_FORWARD_H
 #define SQUID_FS_ROCK_FORWARD_H
 
+#include "fs/forward.h"
+
 namespace Ipc
 {
 

=== modified file 'src/fs/rock/RockRebuild.cc'
--- src/fs/rock/RockRebuild.cc	2015-06-02 11:05:22 +0000
+++ src/fs/rock/RockRebuild.cc	2015-08-31 07:58:56 +0000
@@ -19,7 +19,6 @@
 #include "SquidTime.h"
 #include "store_rebuild.h"
 #include "tools.h"
-#include "typedefs.h"
 
 #include <cerrno>
 

=== modified file 'src/fs/ufs/UFSSwapDir.cc'
--- src/fs/ufs/UFSSwapDir.cc	2015-08-29 18:01:56 +0000
+++ src/fs/ufs/UFSSwapDir.cc	2015-08-31 07:15:17 +0000
@@ -135,7 +135,6 @@ FreeObject(void *address)
     delete anObject;
 }
 
-static QS rev_int_sort;
 static int
 rev_int_sort(const void *A, const void *B)
 {

=== modified file 'src/helper.cc'
--- src/helper.cc	2015-06-05 06:12:06 +0000
+++ src/helper.cc	2015-08-31 07:15:17 +0000
@@ -510,8 +510,6 @@ helperStatefulReleaseServer(helper_state
     ++ srv->stats.releases;
 
     srv->flags.reserved = false;
-    if (srv->parent->OnEmptyQueue != NULL && srv->data)
-        srv->parent->OnEmptyQueue(srv->data);
 
     helperStatefulServerDone(srv);
 }
@@ -1262,9 +1260,6 @@ StatefulGetFirstAvailable(statefulhelper
         if (srv->flags.shutdown)
             continue;
 
-        if ((hlp->IsAvailable != NULL) && (srv->data != NULL) && !(hlp->IsAvailable(srv->data)))
-            continue;
-
         debugs(84, 5, "StatefulGetFirstAvailable: returning srv-" << srv->index);
         return srv;
     }

=== modified file 'src/helper.h'
--- src/helper.h	2015-06-05 05:56:36 +0000
+++ src/helper.h	2015-08-31 07:15:17 +0000
@@ -25,6 +25,7 @@
 #include <map>
 
 class Packable;
+class wordlist;
 
 /**
  * Managers a set of individual helper processes with a common queue of requests.
@@ -110,13 +111,11 @@ class statefulhelper : public helper
     CBDATA_CLASS(statefulhelper);
 
 public:
-    inline statefulhelper(const char *name) : helper(name), datapool(NULL), IsAvailable(NULL), OnEmptyQueue(NULL) {}
+    inline statefulhelper(const char *name) : helper(name), datapool(NULL) {}
     inline ~statefulhelper() {}
 
 public:
     MemAllocator *datapool;
-    HLPSAVAIL *IsAvailable;
-    HLPSONEQ *OnEmptyQueue;
 
 private:
     friend void helperStatefulSubmit(statefulhelper * hlp, const char *buf, HLPCB * callback, void *data, helper_stateful_server * lastserver);

=== modified file 'src/htcp.h'
--- src/htcp.h	2015-01-13 07:25:36 +0000
+++ src/htcp.h	2015-08-31 07:15:17 +0000
@@ -14,6 +14,7 @@
 #include "http/forward.h"
 #include "HttpHeader.h"
 #include "ip/forward.h"
+#include "store_key_md5.h"
 
 /// \ingroup ServerProtocolHTCP
 class HtcpReplyData

=== modified file 'src/icmp/net_db.cc'
--- src/icmp/net_db.cc	2015-07-19 13:23:01 +0000
+++ src/icmp/net_db.cc	2015-08-31 07:15:17 +0000
@@ -118,9 +118,6 @@ static net_db_peer *netdbPeerByName(cons
 static net_db_peer *netdbPeerAdd(netdbEntry * n, CachePeer * e);
 static const char *netdbPeerName(const char *name);
 static IPH netdbSendPing;
-static QS sortPeerByRtt;
-static QS sortByRtt;
-static QS netdbLRU;
 static FREE netdbFreeNameEntry;
 static FREE netdbFreeNetdbEntry;
 static STCB netdbExchangeHandleReply;

=== modified file 'src/ip/forward.h'
--- src/ip/forward.h	2015-01-13 07:25:36 +0000
+++ src/ip/forward.h	2015-08-28 12:45:03 +0000
@@ -17,5 +17,9 @@ namespace Ip
 {
 class Address;
 }
+
+typedef uint32_t nfmark_t;
+typedef unsigned char tos_t;
+
 #endif /* _SQUID_IP_FORWARD_H */
 

=== modified file 'src/ipc/MemMap.h'
--- src/ipc/MemMap.h	2015-06-02 15:41:52 +0000
+++ src/ipc/MemMap.h	2015-08-31 07:15:17 +0000
@@ -10,12 +10,13 @@
 #define SQUID_IPC_STORE_MAP_H
 
 #include "Debug.h"
+#include "fs/forward.h"
 #include "ipc/mem/FlexibleArray.h"
 #include "ipc/mem/Pointer.h"
 #include "ipc/ReadWriteLock.h"
 #include "SBuf.h"
+#include "store_key_md5.h"
 #include "tools.h"
-#include "typedefs.h"
 
 #include <atomic>
 

=== modified file 'src/ipc/StoreMap.h'
--- src/ipc/StoreMap.h	2015-06-02 11:05:22 +0000
+++ src/ipc/StoreMap.h	2015-08-31 07:15:17 +0000
@@ -9,11 +9,12 @@
 #ifndef SQUID_IPC_STORE_MAP_H
 #define SQUID_IPC_STORE_MAP_H
 
+#include "fs/forward.h"
 #include "ipc/mem/FlexibleArray.h"
 #include "ipc/mem/Pointer.h"
 #include "ipc/ReadWriteLock.h"
 #include "SBuf.h"
-#include "typedefs.h"
+#include "store_key_md5.h"
 
 namespace Ipc
 {

=== modified file 'src/mem/forward.h'
--- src/mem/forward.h	2015-08-27 21:44:42 +0000
+++ src/mem/forward.h	2015-08-31 08:00:27 +0000
@@ -12,8 +12,6 @@
 #define _SQUID_SRC_MEM_FORWARD_H
 
 #include "mem/AllocatorProxy.h"
-/* for FREE */
-#include "typedefs.h"
 
 #include <iosfwd>
 
@@ -34,6 +32,9 @@ void PoolReport(const MemPoolStats * mp_
 
 extern const size_t squidSystemPageSize;
 
+/// \deprecated use MEMPROXY_CLASS instead.
+typedef void FREE(void *);
+
 /// Types of memory pool which do not yet use MEMPROXY_CLASS() API
 typedef enum {
     MEM_NONE,

=== modified file 'src/neighbors.h'
--- src/neighbors.h	2015-06-09 06:14:43 +0000
+++ src/neighbors.h	2015-08-31 07:15:17 +0000
@@ -14,6 +14,7 @@
 #include "enums.h"
 #include "ICP.h"
 #include "lookup_t.h"
+#include "typedefs.h" //for IRCB
 
 class HttpRequest;
 class HttpRequestMethod;

=== modified file 'src/snmp_agent.h'
--- src/snmp_agent.h	2015-01-13 07:25:36 +0000
+++ src/snmp_agent.h	2015-08-28 13:51:22 +0000
@@ -13,6 +13,7 @@
 
 #if SQUID_SNMP
 
+#include "cache_snmp.h"
 #include "snmp_vars.h"
 
 variable_list *snmp_confFn(variable_list *, snint *);

=== modified file 'src/snmp_core.h'
--- src/snmp_core.h	2015-01-13 07:25:36 +0000
+++ src/snmp_core.h	2015-08-31 07:15:17 +0000
@@ -13,17 +13,14 @@
 
 #include "cache_snmp.h"
 #include "comm/forward.h"
-#include "typedefs.h"
+#include "ip/forward.h"
 
-namespace Ip
-{
-class Address;
-}
 class MemBuf;
 
 #define SNMP_REQUEST_SIZE 4096
 #define MAX_PROTOSTAT 5
 
+typedef variable_list *(oid_ParseFn) (variable_list *, snint *);
 typedef struct _mib_tree_entry mib_tree_entry;
 typedef oid *(instance_Fn) (oid * name, snint * len, mib_tree_entry * current, oid_ParseFn ** Fn);
 typedef enum {atNone = 0, atSum, atAverage, atMax, atMin} AggrType;

=== modified file 'src/store_key_md5.h'
--- src/store_key_md5.h	2015-01-13 07:25:36 +0000
+++ src/store_key_md5.h	2015-08-31 07:15:17 +0000
@@ -12,11 +12,13 @@
 #define SQUID_STORE_KEY_MD5_H_
 
 #include "hash.h"
-#include "typedefs.h"
 
 class HttpRequestMethod;
 class HttpRequest;
 
+/* MD5 cache keys */
+typedef unsigned char cache_key;
+
 cache_key *storeKeyDup(const cache_key *);
 cache_key *storeKeyCopy(cache_key *, const cache_key *);
 void storeKeyFree(const cache_key *);

=== modified file 'src/store_rebuild.h'
--- src/store_rebuild.h	2015-07-09 15:15:02 +0000
+++ src/store_rebuild.h	2015-08-31 07:15:17 +0000
@@ -11,6 +11,8 @@
 #ifndef SQUID_STORE_REBUILD_H_
 #define SQUID_STORE_REBUILD_H_
 
+#include "store_key_md5.h"
+
 class StoreRebuildData
 {
 public:

=== modified file 'src/tests/stub_CacheDigest.cc'
--- src/tests/stub_CacheDigest.cc	2015-01-13 07:25:36 +0000
+++ src/tests/stub_CacheDigest.cc	2015-08-31 07:15:17 +0000
@@ -7,7 +7,7 @@
  */
 
 #include "squid.h"
-#include "typedefs.h" /* for cache_key */
+#include "store_key_md5.h"
 
 #define STUB_API "CacheDigest.cc"
 #include "tests/STUB.h"

=== modified file 'src/tools.h'
--- src/tools.h	2015-08-30 00:26:47 +0000
+++ src/tools.h	2015-08-31 07:15:17 +0000
@@ -35,6 +35,9 @@ typedef void (*ObjPackMethod) (void *obj
 /* packs, then prints an object using debugs() */
 void debugObj(int section, int level, const char *label, void *obj, ObjPackMethod pm);
 
+/// callback type for signal handlers
+typedef void SIGHDLR(int sig);
+
 const char *getMyHostname(void);
 const char *uniqueHostname(void);
 

=== modified file 'src/typedefs.h'
--- src/typedefs.h	2015-08-30 00:26:47 +0000
+++ src/typedefs.h	2015-08-31 07:15:17 +0000
@@ -6,83 +6,19 @@
  * Please see the COPYING and CONTRIBUTORS files for details.
  */
 
-#include "enums.h"
-
 #ifndef SQUID_TYPEDEFS_H
 #define SQUID_TYPEDEFS_H
 
-typedef int32_t sfileno;
-typedef signed int sdirno;
-
-typedef uint32_t nfmark_t;
-typedef unsigned char tos_t;
-
-typedef struct _CommWriteStateData CommWriteStateData;
-
-#if SQUID_SNMP
-#include "cache_snmp.h"
-typedef variable_list *(oid_ParseFn) (variable_list *, snint *);
-#endif
-
-typedef void FREE(void *);
-typedef void FOCB(void *, int fd, int errcode);
-typedef void PF(int, void *);
+#include "anyp/ProtocolType.h"
+#include "enums.h"
 
 /* disk.c / diskd.c callback typedefs */
 typedef void DRCB(int, const char *buf, int size, int errflag, void *data);
 /* Disk read CB */
 typedef void DWCB(int, int, size_t, void *);    /* disk write CB */
-typedef void DOCB(int, int errflag, void *data);    /* disk open CB */
-typedef void DCCB(int, int errflag, void *data);    /* disk close CB */
-typedef void DUCB(int errflag, void *data); /* disk unlink CB */
-typedef void DTCB(int errflag, void *data); /* disk trunc CB */
-
-namespace Dns
-{
-class LookupDetails;
-}
-typedef void FQDNH(const char *, const Dns::LookupDetails &details, void *);
 
 #include "anyp/ProtocolType.h"
 class CachePeer;
 typedef void IRCB(CachePeer *, peer_t, AnyP::ProtocolType, void *, void *data);
 
-/* in wordlist.h */
-
-class wordlist;
-typedef void UH(void *data, wordlist *);
-
-/**
- * READ_HANDLER functions return < 0 if, and only if, they fail with an error.
- * On error, they must pass back an error code in 'errno'.
- */
-typedef int READ_HANDLER(int, char *, int);
-
-/**
- * WRITE_HANDLER functions return < 0 if, and only if, they fail with an error.
- * On error, they must pass back an error code in 'errno'.
- */
-typedef int WRITE_HANDLER(int, const char *, int);
-
-typedef int QS(const void *, const void *); /* qsort */
-typedef void STABH(void *);
-typedef void ERCB(int fd, void *, size_t);
-class StoreEntry;
-typedef void SIGHDLR(int sig);
-typedef void STVLDCB(void *, int, int);
-typedef int HLPSAVAIL(void *);
-typedef void HLPSONEQ(void *);
-typedef void HLPCMDOPTS(int *argc, char **argv);
-
-/* MD5 cache keys */
-typedef unsigned char cache_key;
-
-/* in case we want to change it later */
-typedef ssize_t mb_size_t;
-
-typedef int STDIRSELECT(const StoreEntry *);
-
-/*Use uint64_t to store miliseconds*/
-typedef uint64_t time_msec_t;
 #endif /* SQUID_TYPEDEFS_H */
-

=== modified file 'src/urn.cc'
--- src/urn.cc	2015-08-04 19:57:07 +0000
+++ src/urn.cc	2015-08-31 07:15:17 +0000
@@ -69,7 +69,6 @@ typedef struct {
 static STCB urnHandleReply;
 static url_entry *urnParseReply(const char *inbuf, const HttpRequestMethod&);
 static const char *const crlf = "\r\n";
-static QS url_entry_sort;
 
 CBDATA_CLASS_INIT(UrnState);
 

