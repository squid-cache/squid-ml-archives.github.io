=== modified file 'src/wordlist.cc'
--- src/wordlist.cc	2015-08-24 18:12:00 +0000
+++ src/wordlist.cc	2015-09-25 09:36:26 +0000
@@ -15,15 +15,10 @@
 void
 wordlistDestroy(wordlist ** list)
 {
-    wordlist *w = NULL;
-
-    while ((w = *list) != NULL) {
-        *list = w->next;
-        safe_free(w->key);
-        delete w;
+    while (*list != nullptr) {
+        const char *k = wordlistChopHead(list);
+        safe_free(k);
     }
-
-    *list = NULL;
 }
 
 const char *

=== modified file 'src/wordlist.h'
--- src/wordlist.h	2015-08-24 16:51:17 +0000
+++ src/wordlist.h	2015-09-25 10:21:49 +0000
@@ -20,7 +20,6 @@
 class wordlist
 {
     MEMPROXY_CLASS(wordlist);
-    friend void wordlistDestroy(wordlist ** list);
     friend char *wordlistChopHead(wordlist **);
 
 public:
@@ -35,7 +34,7 @@ public:
     wordlist *next;
 
 private:
-    // use wordlistDestroy instead
+    // does not free data members.
     ~wordlist() = default;
 };
 
@@ -68,7 +67,7 @@ void wordlistJoin(wordlist **, wordlist
 /// destroy a wordlist
 void wordlistDestroy(wordlist **);
 
-/** remove the first element in a wordlist, and return its key
+/**  Remove and destroy the first element while preserving and returning its key
  *
  * \note the returned key must be freed by the caller using safe_free
  * \note wl is altered so that it points to the second element

