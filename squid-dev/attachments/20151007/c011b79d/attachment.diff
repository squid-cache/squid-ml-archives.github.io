diff --git a/src/clients/FtpGateway.cc b/src/clients/FtpGateway.cc
index 524eebb..9039a39 100644
--- a/src/clients/FtpGateway.cc
+++ b/src/clients/FtpGateway.cc
@@ -2438,7 +2438,10 @@ Ftp::Gateway::hackShortcut(FTPSM * nextState)
 static void
 ftpFail(Ftp::Gateway *ftpState)
 {
-    debugs(9, 6, HERE << "flags(" <<
+    int code = ftpState->ctrl.replycode;
+
+    debugs(9, 6, HERE << "state " << ftpState->state <<
+	   " reply code " << code << "flags(" <<
            (ftpState->flags.isdir?"IS_DIR,":"") <<
            (ftpState->flags.try_slash_hack?"TRY_SLASH_HACK":"") << "), " <<
            "mdtm=" << ftpState->mdtm << ", size=" << ftpState->theSize <<
@@ -2463,9 +2466,61 @@ ftpFail(Ftp::Gateway *ftpState)
             break;
         }
     }
+    if(code >= 400) {
+	ErrorState *err = NULL;
+	err_type  error_code = ERR_NONE;
+	const char *command, *reply;
+
+	Http::StatusCode sc = ftpState->failedHttpStatus(error_code);
+	err = new ErrorState(error_code, sc, ftpState->fwd->request);
+
+	// any other problems are general falures.
+	if (!err) {
+    	    ftpState->failed(ERR_NONE, 0);
+	    return;
+	}
+	debugs(9, 5, HERE << "error code " << error_code <<
+			" http code " << sc);
+	{
+	    wordlist *w;
+	    for(w = ftpState->ctrl.message; w && w->key; w = w->next) {
+		debugs(9, 5, HERE << "ctrl.msg " << w->key);
+	    }
+	}
+
+	command = ftpState->old_request ?
+			ftpState->old_request:
+			ftpState->ctrl.last_command;
+
+	if (command && strncmp(command, "PASS", 4) == 0)
+	    command = "PASS <yourpassword>";
+
+	reply = ftpState->old_reply ?
+			ftpState->old_reply :
+			ftpState->ctrl.last_reply;
+
+	if (command)
+	    err->ftp.request = xstrdup(command);
+
+	if (reply)
+	    err->ftp.reply = xstrdup(reply);
+
+	err->ftp.server_msg = ftpState->ctrl.message;
+	ftpState->ctrl.message = NULL;
+
+	err->detailError(code);
+
+	HttpReply *newrep = err->BuildHttpReply();
+	delete err;
+
+	// add it to the store entry for response....
+	ftpState->entry->replaceHttpReply(newrep);
+ 	ftpSendQuit(ftpState);
+    } else {
 
     ftpState->failed(ERR_NONE, 0);
     /* failed() closes ctrl.conn and frees this */
+    }
 }
 
 Http::StatusCode
