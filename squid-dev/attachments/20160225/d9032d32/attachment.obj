# Bazaar merge directive format 2 (Bazaar 0.90)
# revision_id: kinkie@squid-cache.org-20160225164908-qru6k3ljrsantufg
# target_branch: file:///home/kinkie/squid/workspace/trunk/
# testament_sha1: 680e5e86ab2f54a20978826ac32650478ea5e9f7
# timestamp: 2016-02-25 17:52:38 +0100
# base_revision_id: squid3@treenet.co.nz-20160225015252-\
#   i9nqlv0thra4k526
# 
# Begin patch
=== modified file 'configure.ac'
--- configure.ac	2016-02-23 17:40:44 +0000
+++ configure.ac	2016-02-25 16:49:08 +0000
@@ -3881,6 +3881,7 @@
 	src/mgr/Makefile
 	src/parser/Makefile
 	src/repl/Makefile
+	src/sbuf/Makefile
 	src/security/Makefile
 	src/security/cert_generators/Makefile
 	src/security/cert_generators/file/Makefile

=== modified file 'src/DiskIO/IpcIo/IpcIoFile.cc'
--- src/DiskIO/IpcIo/IpcIoFile.cc	2016-01-01 00:12:18 +0000
+++ src/DiskIO/IpcIo/IpcIoFile.cc	2016-02-23 08:51:22 +0000
@@ -24,7 +24,7 @@
 #include "ipc/Queue.h"
 #include "ipc/StrandSearch.h"
 #include "ipc/UdsOp.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "SquidConfig.h"
 #include "SquidTime.h"
 #include "StatCounters.h"

=== modified file 'src/HttpHdrCc.cc'
--- src/HttpHdrCc.cc	2016-01-01 00:12:18 +0000
+++ src/HttpHdrCc.cc	2016-02-23 08:51:22 +0000
@@ -15,7 +15,7 @@
 #include "HttpHeaderFieldStat.h"
 #include "HttpHeaderStat.h"
 #include "HttpHeaderTools.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "StatHist.h"
 #include "Store.h"
 #include "StrList.h"

=== modified file 'src/HttpRequest.cc'
--- src/HttpRequest.cc	2016-01-31 12:05:30 +0000
+++ src/HttpRequest.cc	2016-02-25 16:44:46 +0000
@@ -25,6 +25,7 @@
 #include "HttpRequest.h"
 #include "log/Config.h"
 #include "MemBuf.h"
+#include "sbuf/SBufStringConvert.h"
 #include "SquidConfig.h"
 #include "Store.h"
 #include "URL.h"
@@ -660,7 +661,7 @@
 {
     if (store_id.size() != 0) {
         debugs(73, 3, "sent back store_id: " << store_id);
-        return SBuf(store_id);
+        return StringToSBuf(store_id);
     }
     debugs(73, 3, "sent back effectiveRequestUrl: " << effectiveRequestUri());
     return effectiveRequestUri();

=== modified file 'src/Makefile.am'
--- src/Makefile.am	2016-02-13 16:09:01 +0000
+++ src/Makefile.am	2016-02-25 16:11:03 +0000
@@ -10,17 +10,6 @@
 DNSSOURCE = \
 	dns_internal.cc
 
-SBUF_SOURCE= \
-	base/CharacterSet.h \
-	base/InstanceId.h \
-	MemBlob.h \
-	MemBlob.cc \
-	OutOfBoundsException.h \
-	SBuf.h \
-	SBuf.cc \
-	SBufExceptions.h \
-	SBufExceptions.cc
-
 STOREMETA_SOURCE = \
 	StoreMeta.cc \
 	StoreMeta.h \
@@ -42,8 +31,8 @@
 	LoadableModules.h \
 	LoadableModules.cc
 
-SUBDIRS	= mem base anyp helper dns ftp parser comm eui acl format clients servers fs repl store DiskIO
-DIST_SUBDIRS = mem base anyp helper dns ftp parser comm eui acl format clients servers fs repl store DiskIO
+SUBDIRS	= mem base anyp helper dns ftp parser comm eui acl format clients sbuf servers fs repl store DiskIO
+DIST_SUBDIRS = mem base anyp helper dns ftp parser comm eui acl format clients sbuf servers fs repl store DiskIO
 
 if ENABLE_AUTH
 SUBDIRS += auth
@@ -421,13 +410,9 @@
 	RemovalPolicy.h \
 	send-announce.h \
 	send-announce.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
-	SBufDetailedStats.cc \
 	SBufStatsAction.h \
 	SBufStatsAction.cc \
+	sbuf/SBufStringConvert.h \
 	$(SNMP_SOURCE) \
 	SquidMath.h \
 	SquidMath.cc \
@@ -571,6 +556,7 @@
 	icmp/libicmp.la \
 	log/liblog.la \
 	format/libformat.la \
+	sbuf/libsbuf.la \
 	$(XTRA_OBJS) \
 	$(REPL_OBJS) \
 	$(NETTLELIB) \
@@ -998,10 +984,6 @@
 	Notes.cc \
 	SquidString.h \
 	SquidTime.h \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	String.cc \
 	StrList.h \
@@ -1054,6 +1036,7 @@
 	base/libbase.la \
 	ipc/libipc.la \
 	mem/libmem.la \
+	sbuf/libsbuf.la \
 	$(top_builddir)/lib/libmisccontainers.la \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(top_builddir)/lib/libmiscutil.la \
@@ -1111,10 +1094,6 @@
 	StrList.cc \
 	tests/stub_StatHist.cc \
 	stmem.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	String.cc \
 	StoreIOState.cc \
@@ -1189,6 +1168,7 @@
 	ip/libip.la \
 	ipc/libipc.la \
 	mgr/libmgr.la \
+	sbuf/libsbuf.la \
 	$(top_builddir)/lib/libmisccontainers.la \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(top_builddir)/lib/libmiscutil.la \
@@ -1379,10 +1359,6 @@
 	refresh.h \
 	refresh.cc \
 	RemovalPolicy.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	$(SNMP_SOURCE) \
 	SquidMath.h \
@@ -1473,6 +1449,7 @@
 	$(SNMP_LIBS) \
 	mem/libmem.la \
 	store/libstore.la \
+	sbuf/libsbuf.la \
 	$(top_builddir)/lib/libmisccontainers.la \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(top_builddir)/lib/libmiscutil.la \
@@ -1552,10 +1529,6 @@
 	StatHist.h \
 	tests/stub_StatHist.cc \
 	stmem.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	StoreFileSystem.cc \
 	StoreIOState.cc \
@@ -1652,6 +1625,7 @@
 	base/libbase.la \
 	mem/libmem.la \
 	store/libstore.la \
+	sbuf/libsbuf.la \
 	$(top_builddir)/lib/libmisccontainers.la \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(top_builddir)/lib/libmiscutil.la \
@@ -1818,10 +1792,6 @@
 	RemovalPolicy.cc \
 	StrList.h \
 	StrList.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	$(SNMP_SOURCE) \
 	SquidMath.cc \
@@ -1917,6 +1887,7 @@
 	ipc/libipc.la \
 	mgr/libmgr.la \
 	store/libstore.la \
+	sbuf/libsbuf.la \
 	$(SNMP_LIBS) \
 	$(NETTLELIB) \
 	$(REGEXLIB) \
@@ -2061,10 +2032,6 @@
 	tests/stub_redirect.cc \
 	refresh.h \
 	refresh.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	$(SNMP_SOURCE) \
 	SquidMath.h \
@@ -2161,6 +2128,7 @@
 	$(top_builddir)/lib/libmiscutil.la \
 	ipc/libipc.la \
 	mgr/libmgr.la \
+	sbuf/libsbuf.la \
 	store/libstore.la \
 	$(SNMP_LIBS) \
 	$(NETTLELIB) \
@@ -2302,10 +2270,6 @@
 	refresh.h \
 	refresh.cc \
 	RemovalPolicy.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	$(SNMP_SOURCE) \
 	SquidMath.h \
@@ -2399,6 +2363,7 @@
 	dns/libdns.la \
 	base/libbase.la \
 	mgr/libmgr.la \
+	sbuf/libsbuf.la \
 	store/libstore.la \
 	$(SNMP_LIBS) \
 	$(top_builddir)/lib/libmisccontainers.la \
@@ -2422,7 +2387,6 @@
 	tests/testTokenizer.cc
 nodist_tests_testTokenizer_SOURCES = \
 	parser/Tokenizer.h \
-	$(SBUF_SOURCE) \
 	SquidString.h \
 	String.cc \
 	$(TESTSOURCES) \
@@ -2434,6 +2398,7 @@
 tests_testTokenizer_LDADD = \
 	parser/libparser.la \
 	base/libbase.la \
+	sbuf/libsbuf.la \
 	$(top_builddir)/lib/libmiscutil.la \
 	$(COMPAT_LIB) \
 	$(SQUID_CPPUNIT_LA) \
@@ -2449,9 +2414,6 @@
 	mime_header.h \
 	String.cc \
 	cache_cf.h \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
 	tests/stub_SBufDetailedStats.cc \
 	tests/stub_cache_cf.cc \
 	tests/stub_cache_manager.cc \
@@ -2481,6 +2443,7 @@
 	SquidConfig.o \
 	base/libbase.la \
 	ip/libip.la \
+	sbuf/libsbuf.la \
 	$(top_builddir)/lib/libmiscutil.la \
 	$(SQUID_CPPUNIT_LIBS) \
 	$(SSLLIB) \
@@ -2629,10 +2592,6 @@
 	refresh.h \
 	refresh.cc \
 	RemovalPolicy.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	$(SNMP_SOURCE) \
 	SquidMath.h \
@@ -2715,6 +2674,7 @@
 	log/liblog.la \
 	format/libformat.la \
 	store/libstore.la \
+	sbuf/libsbuf.la \
 	$(REPL_OBJS) \
 	$(ADAPTATION_LIBS) \
 	$(ESI_LIBS) \
@@ -2840,10 +2800,6 @@
 	StoreSwapLogData.cc \
 	store_key_md5.h \
 	store_key_md5.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	String.cc \
 	StrList.h \
@@ -2930,6 +2886,7 @@
 	anyp/libanyp.la \
 	mem/libmem.la \
 	store/libstore.la \
+	sbuf/libsbuf.la \
 	DiskIO/libdiskio.la \
 	$(top_builddir)/lib/libmisccontainers.la \
 	$(top_builddir)/lib/libmiscencoding.la \
@@ -2952,8 +2909,6 @@
 	ClientInfo.h \
 	MemBuf.cc \
 	String.cc \
-	$(SBUF_SOURCE) \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	tests/testString.cc \
 	tests/testString.h \
@@ -2975,6 +2930,7 @@
 	base/libbase.la \
 	libsquid.la \
 	ip/libip.la \
+	sbuf/libsbuf.la \
 	$(top_builddir)/lib/libmiscutil.la \
 	$(REGEXLIB) \
 	$(SQUID_CPPUNIT_LIBS) \
@@ -3081,10 +3037,6 @@
 	tests/stub_cache_cf.cc \
 	tests/stub_helper.cc \
 	cbdata.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	String.cc \
 	tests/stub_debug.cc \
@@ -3163,6 +3115,7 @@
 	ip/libip.la \
 	mem/libmem.la \
 	store/libstore.la \
+	sbuf/libsbuf.la \
 	$(top_builddir)/lib/libmisccontainers.la \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(top_builddir)/lib/libmiscutil.la \
@@ -3260,10 +3213,6 @@
 	store_key_md5.cc \
 	store_swapmeta.cc \
 	store_swapout.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	String.cc \
 	StrList.h \
@@ -3339,6 +3288,7 @@
 	base/libbase.la \
 	mem/libmem.la \
 	store/libstore.la \
+	sbuf/libsbuf.la \
 	$(top_builddir)/lib/libmisccontainers.la \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(top_builddir)/lib/libmiscutil.la \
@@ -3479,10 +3429,6 @@
 	refresh.h \
 	refresh.cc \
 	RemovalPolicy.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	$(SNMP_SOURCE) \
 	SquidMath.h \
@@ -3580,6 +3526,7 @@
 	log/liblog.la \
 	format/libformat.la \
 	store/libstore.la \
+	sbuf/libsbuf.la \
 	$(REGEXLIB) \
 	$(REPL_OBJS) \
 	$(ADAPTATION_LIBS) \
@@ -3605,92 +3552,41 @@
 	tests/testSBuf.cc \
 	tests/SBufFindTest.h \
 	tests/SBufFindTest.cc \
-	$(SBUF_SOURCE) \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufStream.h \
 	tests/stub_time.cc \
 	tests/stub_debug.cc \
 	tests/stub_fatal.cc \
-	tests/stub_HelperChildConfig.cc \
-	tests/stub_libmem.cc \
-	tests/stub_cache_cf.cc \
-	tests/stub_cache_manager.cc \
-	tests/stub_cbdata.cc \
-	tests/stub_store.cc \
-	tests/stub_store_stats.cc \
-	tests/stub_tools.cc \
-	SquidString.h \
-	String.cc \
-	tests/stub_wordlist.cc \
-	tests/stub_MemBuf.cc
+	tests/stub_libmem.cc
 nodist_tests_testSBuf_SOURCES=$(TESTSOURCES)
 tests_testSBuf_LDFLAGS = $(LIBADD_DL)
-tests_testSBuf_LDADD=\
+tests_testSBuf_LDADD= \
+	sbuf/libsbuf.la \
 	base/libbase.la \
-	libsquid.la \
-	ip/libip.la \
-	mgr/libmgr.la \
-	$(top_builddir)/lib/libmiscutil.la \
-	$(REGEXLIB) \
 	$(SQUID_CPPUNIT_LIBS) \
 	$(COMPAT_LIB) \
 	$(XTRA_LIBS)
-tests_testSBuf_DEPENDENCIES= $(SQUID_CPPUNIT_LA)
 
 tests_testSBufList_SOURCES= \
 	tests/testSBufList.h \
 	tests/testSBufList.cc \
-	$(SBUF_SOURCE) \
-	SBufList.h \
-	SBufList.cc \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
-	SBufStream.h \
 	tests/stub_time.cc \
-	tests/stub_MemObject.cc \
-	tests/stub_cbdata.cc \
-	tests/stub_comm.cc \
 	tests/stub_debug.cc \
-	tests/stub_event.cc \
 	tests/stub_fatal.cc \
-	tests/stub_fd.cc \
-	tests/stub_HelperChildConfig.cc \
-	tests/stub_libmem.cc \
-	tests/stub_cache_cf.cc \
-	tests/stub_cache_manager.cc \
-	tests/stub_store.cc \
-	tests/stub_stmem.cc \
-	tests/stub_store_stats.cc \
-	tests/stub_tools.cc \
-	SquidString.h \
-	StatCounters.cc \
-	String.cc \
-	tests/stub_wordlist.cc \
-	tests/stub_MemBuf.cc
+	tests/stub_libmem.cc
 nodist_tests_testSBufList_SOURCES=$(TESTSOURCES)
 tests_testSBufList_LDFLAGS = $(LIBADD_DL)
 tests_testSBufList_LDADD=\
+	sbuf/libsbuf.la \
 	base/libbase.la \
-	libsquid.la \
-	ip/libip.la \
-	mgr/libmgr.la \
-	$(top_builddir)/lib/libmiscutil.la \
 	$(SQUID_CPPUNIT_LIBS) \
 	$(COMPAT_LIB) \
 	$(XTRA_LIBS)
-tests_testSBufList_DEPENDENCIES= $(SQUID_CPPUNIT_LA)
 
 tests_testConfigParser_SOURCES = \
 	ClientInfo.h \
 	tests/stub_MemBuf.cc \
 	tests/stub_time.cc \
-	$(SBUF_SOURCE) \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	String.cc \
 	ConfigParser.cc \
@@ -3700,7 +3596,6 @@
 	tests/testConfigParser.h \
 	cache_cf.h \
 	tests/stub_cache_cf.cc \
-	tests/stub_cache_manager.cc \
 	tests/stub_cbdata.cc \
 	tests/stub_debug.cc \
 	tests/stub_libmem.cc \
@@ -3712,9 +3607,10 @@
 nodist_tests_testConfigParser_SOURCES = \
 	$(TESTSOURCES)
 tests_testConfigParser_LDADD = \
-	base/libbase.la \
 	libsquid.la \
 	ip/libip.la \
+	sbuf/libsbuf.la \
+	base/libbase.la \
 	$(top_builddir)/lib/libmiscutil.la \
 	$(REGEXLIB) \
 	$(SQUID_CPPUNIT_LIBS) \
@@ -3730,8 +3626,6 @@
 	fatal.h \
 	tests/stub_fatal.cc \
 	tests/stub_MemBuf.cc \
-	$(SBUF_SOURCE) \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	StatHist.cc \
 	StatHist.h \
@@ -3759,13 +3653,13 @@
 	$(TESTSOURCES)
 tests_testStatHist_LDFLAGS = $(LIBADD_DL)
 tests_testStatHist_LDADD = \
+	sbuf/libsbuf.la \
 	base/libbase.la \
 	$(top_builddir)/lib/libmiscutil.la \
 	$(top_builddir)/lib/libmisccontainers.la \
 	$(SQUID_CPPUNIT_LIBS) \
 	$(SQUID_CPPUNIT_LA) \
 	$(COMPAT_LIB)
-tests_testStatHist_DEPENDENCIES = $(SQUID_CPPUNIT_LA)
 
 tests_testLookupTable_SOURCES = \
 	tests/testLookupTable.h \
@@ -3773,19 +3667,15 @@
 	tests/stub_debug.cc \
 	tests/stub_libmem.cc \
 	tests/stub_SBufDetailedStats.cc \
-	base/LookupTable.h \
-	String.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc
+	base/LookupTable.h
 nodist_tests_testLookupTable_SOURCES = $(TESTSOURCES)
 tests_testLookupTable_LDFLAGS = $(LIBADD_DL)
 tests_testLookupTable_LDADD = \
+	sbuf/libsbuf.la \
 	base/libbase.la \
 	$(SQUID_CPPUNIT_LIBS) \
 	$(COMPAT_LIB) \
 	$(XTRA_LIBS)
-tests_testLookupTable_DEPENDENCIES = $(SQUID_CPPUNIT_LA)
 
 tests_testEnumIterator_SOURCES = \
 	base/EnumIterator.h \

=== modified file 'src/MemObject.h'
--- src/MemObject.h	2016-01-01 00:12:18 +0000
+++ src/MemObject.h	2016-02-24 18:12:43 +0000
@@ -13,6 +13,7 @@
 #include "dlink.h"
 #include "http/RequestMethod.h"
 #include "RemovalPolicy.h"
+#include "SquidString.h"
 #include "stmem.h"
 #include "StoreIOBuffer.h"
 #include "StoreIOState.h"

=== modified file 'src/SBufStatsAction.cc'
--- src/SBufStatsAction.cc	2016-01-01 00:12:18 +0000
+++ src/SBufStatsAction.cc	2016-02-24 12:16:16 +0000
@@ -11,7 +11,7 @@
 #include "ipc/Messages.h"
 #include "ipc/TypedMsgHdr.h"
 #include "mgr/Registration.h"
-#include "SBufDetailedStats.h"
+#include "sbuf/SBufDetailedStats.h"
 #include "SBufStatsAction.h"
 
 SBufStatsAction::SBufStatsAction(const Mgr::CommandPointer &cmd_):

=== modified file 'src/SBufStatsAction.h'
--- src/SBufStatsAction.h	2016-01-01 00:12:18 +0000
+++ src/SBufStatsAction.h	2016-02-23 08:51:22 +0000
@@ -10,7 +10,7 @@
 #define SQUID_SBUFEXTRAS_H
 
 #include "mgr/Action.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "StatHist.h"
 
 class StoreEntry;

=== modified file 'src/URL.h'
--- src/URL.h	2016-01-01 00:12:18 +0000
+++ src/URL.h	2016-02-23 08:51:22 +0000
@@ -12,7 +12,7 @@
 #include "anyp/UriScheme.h"
 #include "ip/Address.h"
 #include "rfc2181.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 #include <iosfwd>
 

=== modified file 'src/acl/Acl.h'
--- src/acl/Acl.h	2016-01-08 05:49:15 +0000
+++ src/acl/Acl.h	2016-02-23 08:51:22 +0000
@@ -14,7 +14,7 @@
 #include "cbdata.h"
 #include "defines.h"
 #include "dlink.h"
-#include "SBufList.h"
+#include "sbuf/SBufList.h"
 
 #include <map>
 #include <ostream>

=== modified file 'src/acl/Data.h'
--- src/acl/Data.h	2016-01-01 00:12:18 +0000
+++ src/acl/Data.h	2016-02-23 08:51:22 +0000
@@ -9,7 +9,7 @@
 #ifndef SQUID_ACLDATA_H
 #define SQUID_ACLDATA_H
 
-#include "SBufList.h"
+#include "sbuf/SBufList.h"
 
 /// \ingroup ACLAPI
 template <class M>

=== modified file 'src/acl/HttpHeaderData.cc'
--- src/acl/HttpHeaderData.cc	2016-01-01 00:12:18 +0000
+++ src/acl/HttpHeaderData.cc	2016-02-25 16:43:21 +0000
@@ -17,7 +17,8 @@
 #include "ConfigParser.h"
 #include "Debug.h"
 #include "HttpHeaderTools.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
+#include "sbuf/SBufStringConvert.h"
 
 /* Construct an ACLHTTPHeaderData that uses an ACLRegex rule with the value of the
  * selected header from a given request.
@@ -51,7 +52,7 @@
             return false;
     }
 
-    SBuf cvalue(value);
+    auto cvalue = StringToSBuf(value);
     return regex_rule->match(cvalue.c_str());
 }
 

=== modified file 'src/acl/HttpHeaderData.h'
--- src/acl/HttpHeaderData.h	2016-01-01 00:12:18 +0000
+++ src/acl/HttpHeaderData.h	2016-02-23 08:51:22 +0000
@@ -11,7 +11,7 @@
 
 #include "acl/Data.h"
 #include "HttpHeader.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "SquidString.h"
 
 class ACLHTTPHeaderData : public ACLData<HttpHeader*>

=== modified file 'src/acl/Note.cc'
--- src/acl/Note.cc	2016-01-01 00:12:18 +0000
+++ src/acl/Note.cc	2016-02-25 16:43:21 +0000
@@ -14,6 +14,7 @@
 #include "HttpRequest.h"
 #include "Notes.h"
 #include "parser/Tokenizer.h"
+#include "sbuf/SBufStringConvert.h"
 
 int
 ACLNoteStrategy::match(ACLData<MatchType> * &data, ACLFilledChecklist *checklist, ACLFlags &flags)
@@ -36,7 +37,7 @@
     for (auto &entry: note->entries) {
         if (delimiters) {
             NotePairs::Entry e(entry->name.termedBuf(), "");
-            Parser::Tokenizer t(SBuf(entry->value));
+            Parser::Tokenizer t(StringToSBuf(entry->value));
             SBuf s;
             while (t.token(s, *delimiters)) {
                 e.value = s.c_str();

=== modified file 'src/acl/NoteData.cc'
--- src/acl/NoteData.cc	2016-01-22 18:12:10 +0000
+++ src/acl/NoteData.cc	2016-02-24 18:12:43 +0000
@@ -13,6 +13,7 @@
 #include "acl/StringData.h"
 #include "ConfigParser.h"
 #include "Debug.h"
+#include "sbuf/SBufStringConvert.h"
 #include "wordlist.h"
 
 ACLNoteData::ACLNoteData() : values(new ACLStringData)
@@ -38,7 +39,7 @@
 ACLNoteData::dump() const
 {
     SBufList sl;
-    sl.push_back(SBuf(name));
+    sl.push_back(StringToSBuf(name));
 #if __cplusplus >= 201103L
     sl.splice(sl.end(), values->dump());
 #else

=== modified file 'src/acl/StringData.h'
--- src/acl/StringData.h	2016-01-01 00:12:18 +0000
+++ src/acl/StringData.h	2016-02-23 08:51:22 +0000
@@ -11,7 +11,7 @@
 
 #include "acl/Acl.h"
 #include "acl/Data.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 #include <set>
 

=== modified file 'src/acl/Tree.h'
--- src/acl/Tree.h	2016-01-01 00:12:18 +0000
+++ src/acl/Tree.h	2016-02-23 08:51:22 +0000
@@ -10,7 +10,7 @@
 #define SQUID_ACL_TREE_H
 
 #include "acl/BoolOps.h"
-#include "SBufList.h"
+#include "sbuf/SBufList.h"
 
 namespace Acl
 {

=== modified file 'src/acl/UserData.cc'
--- src/acl/UserData.cc	2016-01-01 00:12:18 +0000
+++ src/acl/UserData.cc	2016-02-23 08:51:22 +0000
@@ -14,7 +14,7 @@
 #include "ConfigParser.h"
 #include "Debug.h"
 #include "globals.h"
-#include "SBufAlgos.h"
+#include "sbuf/SBufAlgos.h"
 #include "util.h"
 
 bool

=== modified file 'src/acl/UserData.h'
--- src/acl/UserData.h	2016-01-01 00:12:18 +0000
+++ src/acl/UserData.h	2016-02-23 08:51:22 +0000
@@ -11,7 +11,7 @@
 
 #include "acl/Acl.h"
 #include "acl/Data.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 #include <set>
 

=== modified file 'src/adaptation/History.h'
--- src/adaptation/History.h	2016-01-01 00:12:18 +0000
+++ src/adaptation/History.h	2016-02-23 08:51:22 +0000
@@ -13,7 +13,7 @@
 #include "base/RefCount.h"
 #include "HttpHeader.h"
 #include "Notes.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "SquidString.h"
 
 namespace Adaptation

=== modified file 'src/adaptation/Iterator.cc'
--- src/adaptation/Iterator.cc	2016-01-01 00:12:18 +0000
+++ src/adaptation/Iterator.cc	2016-02-25 16:43:21 +0000
@@ -19,6 +19,7 @@
 #include "HttpMsg.h"
 #include "HttpReply.h"
 #include "HttpRequest.h"
+#include "sbuf/SBufStringConvert.h"
 
 Adaptation::Iterator::Iterator(
     HttpMsg *aMsg, HttpRequest *aCause,
@@ -62,7 +63,7 @@
             request = theCause;
         Must(request);
         Adaptation::History::Pointer ah = request->adaptHistory(true);
-        SBuf gid(theGroup->id);
+        auto gid = StringToSBuf(theGroup->id);
         ah->recordAdaptationService(gid);
     }
 
@@ -102,7 +103,7 @@
 
     if (Adaptation::Config::needHistory) {
         Adaptation::History::Pointer ah = request->adaptHistory(true);
-        SBuf uid(thePlan.current()->cfg().key);
+        auto uid = StringToSBuf(thePlan.current()->cfg().key);
         ah->recordAdaptationService(uid);
     }
 

=== modified file 'src/adaptation/icap/Xaction.h'
--- src/adaptation/icap/Xaction.h	2016-02-02 15:39:23 +0000
+++ src/adaptation/icap/Xaction.h	2016-02-23 08:51:22 +0000
@@ -15,7 +15,7 @@
 #include "comm/ConnOpener.h"
 #include "HttpReply.h"
 #include "ipcache.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #if USE_OPENSSL
 #include "ssl/PeerConnector.h"
 #endif

=== modified file 'src/anyp/PortCfg.h'
--- src/anyp/PortCfg.h	2016-01-01 00:12:18 +0000
+++ src/anyp/PortCfg.h	2016-02-23 08:51:22 +0000
@@ -13,7 +13,7 @@
 #include "anyp/ProtocolVersion.h"
 #include "anyp/TrafficMode.h"
 #include "comm/Connection.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "security/ServerOptions.h"
 
 #if USE_OPENSSL

=== modified file 'src/auth/CredentialsCache.h'
--- src/auth/CredentialsCache.h	2016-01-01 00:12:18 +0000
+++ src/auth/CredentialsCache.h	2016-02-23 08:51:22 +0000
@@ -11,7 +11,7 @@
 
 #include "auth/User.h"
 #include "cbdata.h"
-#include "SBufAlgos.h"
+#include "sbuf/SBufAlgos.h"
 
 #include <unordered_map>
 

=== modified file 'src/auth/User.h'
--- src/auth/User.h	2016-01-01 00:12:18 +0000
+++ src/auth/User.h	2016-02-23 08:51:22 +0000
@@ -18,7 +18,7 @@
 #include "dlink.h"
 #include "ip/Address.h"
 #include "Notes.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 class StoreEntry;
 

=== modified file 'src/auth/digest/Config.cc'
--- src/auth/digest/Config.cc	2016-01-01 00:12:18 +0000
+++ src/auth/digest/Config.cc	2016-02-23 08:51:22 +0000
@@ -30,7 +30,7 @@
 #include "HttpRequest.h"
 #include "mgr/Registration.h"
 #include "rfc2617.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "SquidTime.h"
 #include "Store.h"
 #include "StrList.h"

=== modified file 'src/base/LookupTable.h'
--- src/base/LookupTable.h	2016-01-01 00:12:18 +0000
+++ src/base/LookupTable.h	2016-02-23 08:51:22 +0000
@@ -9,8 +9,8 @@
 #ifndef SQUID_LOOKUPTABLE_H_
 #define SQUID_LOOKUPTABLE_H_
 
-#include "SBuf.h"
-#include "SBufAlgos.h"
+#include "sbuf/SBuf.h"
+#include "sbuf/SBufAlgos.h"
 
 #include <unordered_map>
 

=== modified file 'src/cache_cf.cc'
--- src/cache_cf.cc	2016-01-01 00:12:18 +0000
+++ src/cache_cf.cc	2016-02-23 08:51:22 +0000
@@ -52,7 +52,7 @@
 #include "redirect.h"
 #include "RefreshPattern.h"
 #include "rfc1738.h"
-#include "SBufList.h"
+#include "sbuf/SBufList.h"
 #include "SquidConfig.h"
 #include "SquidString.h"
 #include "ssl/ProxyCerts.h"

=== modified file 'src/client_side.h'
--- src/client_side.h	2016-01-24 17:41:43 +0000
+++ src/client_side.h	2016-02-23 08:51:22 +0000
@@ -18,7 +18,7 @@
 #include "http/forward.h"
 #include "HttpControlMsg.h"
 #include "ipc/FdNotes.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "servers/Server.h"
 #if USE_AUTH
 #include "auth/UserRequest.h"

=== modified file 'src/clients/FtpRelay.cc'
--- src/clients/FtpRelay.cc	2016-01-31 12:05:30 +0000
+++ src/clients/FtpRelay.cc	2016-02-23 08:51:22 +0000
@@ -18,7 +18,7 @@
 #include "http/Stream.h"
 #include "HttpHdrCc.h"
 #include "HttpRequest.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "servers/FtpServer.h"
 #include "SquidTime.h"
 #include "Store.h"

=== modified file 'src/comm.cc'
--- src/comm.cc	2016-01-26 21:02:00 +0000
+++ src/comm.cc	2016-02-23 08:51:22 +0000
@@ -31,7 +31,7 @@
 #include "ip/tools.h"
 #include "pconn.h"
 #include "profiler/Profiler.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "SquidConfig.h"
 #include "StatCounters.h"
 #include "StoreIOBuffer.h"

=== modified file 'src/comm/Read.cc'
--- src/comm/Read.cc	2016-01-01 00:12:18 +0000
+++ src/comm/Read.cc	2016-02-23 08:51:22 +0000
@@ -18,7 +18,7 @@
 #include "Debug.h"
 #include "fd.h"
 #include "fde.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "StatCounters.h"
 //#include "tools.h"
 

=== modified file 'src/esi/CustomParser.h'
--- src/esi/CustomParser.h	2016-02-18 12:48:08 +0000
+++ src/esi/CustomParser.h	2016-02-23 08:51:22 +0000
@@ -14,7 +14,7 @@
 /* inherits from */
 #include "esi/Parser.h"
 
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "SquidString.h"
 
 /**

=== modified file 'src/fs/rock/RockIoState.h'
--- src/fs/rock/RockIoState.h	2016-01-01 00:12:18 +0000
+++ src/fs/rock/RockIoState.h	2016-02-23 08:51:22 +0000
@@ -10,7 +10,7 @@
 #define SQUID_FS_ROCK_IO_STATE_H
 
 #include "fs/rock/RockSwapDir.h"
-#include "MemBlob.h"
+#include "sbuf/MemBlob.h"
 
 class DiskFile;
 

=== modified file 'src/ftp/Elements.cc'
--- src/ftp/Elements.cc	2016-01-01 00:12:18 +0000
+++ src/ftp/Elements.cc	2016-02-23 08:51:22 +0000
@@ -12,7 +12,7 @@
 #include "ftp/Elements.h"
 #include "HttpHdrCc.h"
 #include "HttpReply.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 // FTP does not have a notion of a "protocol version" but we need something for
 // compatibility with the current HttpMsg wrapping layer. We use version 1.1:

=== modified file 'src/globals.h'
--- src/globals.h	2016-02-24 23:55:48 +0000
+++ src/globals.h	2016-02-25 16:49:08 +0000
@@ -15,7 +15,7 @@
 #include "hash.h"
 #include "IoStats.h"
 #include "rfc2181.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 extern char *ConfigFile;    /* NULL */
 extern char *IcpOpcodeStr[];

=== modified file 'src/helper.h'
--- src/helper.h	2016-01-01 00:12:18 +0000
+++ src/helper.h	2016-02-23 08:51:22 +0000
@@ -19,7 +19,7 @@
 #include "helper/ChildConfig.h"
 #include "helper/forward.h"
 #include "ip/Address.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 #include <list>
 #include <map>

=== modified file 'src/http/MethodType.h'
--- src/http/MethodType.h	2016-01-01 00:12:18 +0000
+++ src/http/MethodType.h	2016-02-23 08:51:22 +0000
@@ -9,7 +9,7 @@
 #ifndef SQUID_SRC_HTTP_METHODTYPE_H
 #define SQUID_SRC_HTTP_METHODTYPE_H
 
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 namespace Http
 {

=== modified file 'src/http/RequestMethod.h'
--- src/http/RequestMethod.h	2016-01-01 00:12:18 +0000
+++ src/http/RequestMethod.h	2016-02-23 08:51:22 +0000
@@ -11,7 +11,7 @@
 
 #include "http/forward.h"
 #include "http/MethodType.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 class SquidConfig;
 

=== modified file 'src/http/one/Parser.h'
--- src/http/one/Parser.h	2016-01-01 00:12:18 +0000
+++ src/http/one/Parser.h	2016-02-23 08:51:22 +0000
@@ -12,7 +12,7 @@
 #include "anyp/ProtocolVersion.h"
 #include "http/one/forward.h"
 #include "http/StatusCode.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 namespace Http {
 namespace One {

=== modified file 'src/icmp/IcmpConfig.h'
--- src/icmp/IcmpConfig.h	2016-01-01 00:12:18 +0000
+++ src/icmp/IcmpConfig.h	2016-02-23 08:51:22 +0000
@@ -14,7 +14,7 @@
 #if USE_ICMP
 
 #include "cache_cf.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 /**
  * Squid pinger Configuration settings

=== modified file 'src/ipc/MemMap.h'
--- src/ipc/MemMap.h	2016-01-01 00:12:18 +0000
+++ src/ipc/MemMap.h	2016-02-23 08:51:22 +0000
@@ -13,7 +13,7 @@
 #include "ipc/mem/FlexibleArray.h"
 #include "ipc/mem/Pointer.h"
 #include "ipc/ReadWriteLock.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "store/forward.h"
 #include "store_key_md5.h"
 #include "tools.h"

=== modified file 'src/ipc/StoreMap.cc'
--- src/ipc/StoreMap.cc	2016-01-01 00:12:18 +0000
+++ src/ipc/StoreMap.cc	2016-02-23 08:51:22 +0000
@@ -10,7 +10,7 @@
 
 #include "squid.h"
 #include "ipc/StoreMap.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "Store.h"
 #include "store_key_md5.h"
 #include "tools.h"

=== modified file 'src/ipc/StoreMap.h'
--- src/ipc/StoreMap.h	2016-01-01 00:12:18 +0000
+++ src/ipc/StoreMap.h	2016-02-23 08:51:22 +0000
@@ -12,7 +12,7 @@
 #include "ipc/mem/FlexibleArray.h"
 #include "ipc/mem/Pointer.h"
 #include "ipc/ReadWriteLock.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "store/forward.h"
 #include "store_key_md5.h"
 

=== modified file 'src/ipc/TypedMsgHdr.cc'
--- src/ipc/TypedMsgHdr.cc	2016-01-01 00:12:18 +0000
+++ src/ipc/TypedMsgHdr.cc	2016-02-24 18:12:43 +0000
@@ -11,6 +11,7 @@
 #include "squid.h"
 #include "base/TextException.h"
 #include "ipc/TypedMsgHdr.h"
+#include "SquidString.h"
 #include "tools.h"
 
 #include <cstring>

=== modified file 'src/ipc/mem/Segment.cc'
--- src/ipc/mem/Segment.cc	2016-01-28 01:30:37 +0000
+++ src/ipc/mem/Segment.cc	2016-02-23 08:51:22 +0000
@@ -14,7 +14,7 @@
 #include "Debug.h"
 #include "fatal.h"
 #include "ipc/mem/Segment.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "tools.h"
 
 #if HAVE_FCNTL_H

=== modified file 'src/log/TcpLogger.cc'
--- src/log/TcpLogger.cc	2016-01-01 00:12:18 +0000
+++ src/log/TcpLogger.cc	2016-02-23 08:51:22 +0000
@@ -18,7 +18,7 @@
 #include "log/CustomLog.h"
 #include "log/File.h"
 #include "log/TcpLogger.h"
-#include "MemBlob.h"
+#include "sbuf/MemBlob.h"
 #include "Parsing.h"
 #include "SquidConfig.h"
 #include "SquidTime.h"

=== modified file 'src/mgr/ActionParams.cc'
--- src/mgr/ActionParams.cc	2016-01-01 00:12:18 +0000
+++ src/mgr/ActionParams.cc	2016-02-25 16:43:21 +0000
@@ -12,6 +12,7 @@
 #include "base/TextException.h"
 #include "ipc/TypedMsgHdr.h"
 #include "mgr/ActionParams.h"
+#include "sbuf/SBufStringConvert.h"
 
 Mgr::ActionParams::ActionParams(): httpMethod(Http::METHOD_NONE)
 {
@@ -38,7 +39,7 @@
 Mgr::ActionParams::pack(Ipc::TypedMsgHdr &msg) const
 {
     msg.putString(httpUri);
-    String foo(httpMethod.image().toString());
+    auto foo = SBufToString(httpMethod.image());
     msg.putString(foo);
     msg.putPod(httpFlags);
     msg.putString(httpOrigin);

=== modified file 'src/mk-string-arrays.awk'
--- src/mk-string-arrays.awk	2016-01-01 00:12:18 +0000
+++ src/mk-string-arrays.awk	2016-02-24 12:16:16 +0000
@@ -73,7 +73,7 @@
 }
 
 END {
-	if (sbuf) print "#include \"SBuf.h\""
+	if (sbuf) print "#include \"sbuf/SBuf.h\""
 	print "#include \"" nspath type ".h\""
 
 	# if namesapce is not empty ??

=== modified file 'src/parser/Tokenizer.h'
--- src/parser/Tokenizer.h	2016-01-01 00:12:18 +0000
+++ src/parser/Tokenizer.h	2016-02-23 08:51:22 +0000
@@ -10,7 +10,7 @@
 #define SQUID_PARSER_TOKENIZER_H_
 
 #include "base/CharacterSet.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 /// Generic protocol-agnostic parsing tools
 namespace Parser

=== modified file 'src/redirect.cc'
--- src/redirect.cc	2016-01-24 17:41:43 +0000
+++ src/redirect.cc	2016-02-23 08:51:22 +0000
@@ -25,7 +25,7 @@
 #include "mgr/Registration.h"
 #include "redirect.h"
 #include "rfc1738.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "SquidConfig.h"
 #include "Store.h"
 #if USE_AUTH

=== added directory 'src/sbuf'
=== added file 'src/sbuf/Makefile.am'
--- src/sbuf/Makefile.am	1970-01-01 00:00:00 +0000
+++ src/sbuf/Makefile.am	2016-02-25 15:57:10 +0000
@@ -0,0 +1,27 @@
+## Copyright (C) 1996-2016 The Squid Software Foundation and contributors
+##
+## Squid software is distributed under GPLv2+ license and includes
+## contributions from numerous individuals and organizations.
+## Please see the COPYING and CONTRIBUTORS files for details.
+##
+
+include $(top_srcdir)/src/Common.am
+include $(top_srcdir)/src/TestHeaders.am
+
+noinst_LTLIBRARIES = libsbuf.la
+
+libsbuf_la_SOURCES = \
+	MemBlob.cc \
+	MemBlob.h \
+	OutOfBoundsException.h \
+	SBuf.cc \
+	SBuf.h \
+	SBufAlgos.cc \
+	SBufAlgos.h \
+	SBufDetailedStats.cc \
+	SBufDetailedStats.h \
+	SBufExceptions.cc \
+	SBufExceptions.h \
+	SBufList.cc \
+	SBufList.h \
+	SBufStream.h

=== renamed file 'src/MemBlob.cc' => 'src/sbuf/MemBlob.cc'
--- src/MemBlob.cc	2016-01-01 00:12:18 +0000
+++ src/sbuf/MemBlob.cc	2016-02-23 08:51:22 +0000
@@ -9,7 +9,7 @@
 #include "squid.h"
 #include "base/TextException.h"
 #include "Debug.h"
-#include "MemBlob.h"
+#include "sbuf/MemBlob.h"
 #include "SBufDetailedStats.h"
 
 #include <iostream>

=== renamed file 'src/MemBlob.h' => 'src/sbuf/MemBlob.h'
=== renamed file 'src/OutOfBoundsException.h' => 'src/sbuf/OutOfBoundsException.h'
--- src/OutOfBoundsException.h	2016-01-01 00:12:18 +0000
+++ src/sbuf/OutOfBoundsException.h	2016-02-23 08:51:22 +0000
@@ -10,7 +10,7 @@
 #define _SQUID_SRC_OUTOFBOUNDSEXCEPTION_H
 
 #include "base/TextException.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 /**
  * Exception raised when the user is going out of bounds when accessing

=== renamed file 'src/SBuf.cc' => 'src/sbuf/SBuf.cc'
--- src/SBuf.cc	2016-01-01 00:12:18 +0000
+++ src/sbuf/SBuf.cc	2016-02-24 18:12:43 +0000
@@ -37,7 +37,7 @@
 const SBuf::size_type SBuf::maxSize;
 
 SBufStats::SBufStats()
-    : alloc(0), allocCopy(0), allocFromString(0), allocFromCString(0),
+    : alloc(0), allocCopy(0), allocFromCString(0),
       assignFast(0), clear(0), append(0), moves(0), toStream(0), setChar(0),
       getChar(0), compareSlow(0), compareFast(0), copyOut(0),
       rawAccess(0), nulTerminate(0), chop(0), trim(0), find(0), scanf(0),
@@ -49,7 +49,6 @@
 {
     alloc += ss.alloc;
     allocCopy += ss.allocCopy;
-    allocFromString += ss.allocFromString;
     allocFromCString += ss.allocFromCString;
     assignFast += ss.assignFast;
     clear += ss.clear;
@@ -92,23 +91,12 @@
     ++stats.live;
 }
 
-SBuf::SBuf(const String &S)
-    : store_(GetStorePrototype()), off_(0), len_(0)
-{
-    debugs(24, 8, id << " created from string");
-    assign(S.rawBuf(), S.size());
-    ++stats.alloc;
-    ++stats.allocFromString;
-    ++stats.live;
-}
-
 SBuf::SBuf(const std::string &s)
     : store_(GetStorePrototype()), off_(0), len_(0)
 {
     debugs(24, 8, id << " created from std::string");
     lowAppend(s.data(),s.length());
     ++stats.alloc;
-    ++stats.allocFromString;
     ++stats.live;
 }
 
@@ -882,7 +870,6 @@
     os <<
        "SBuf stats:\nnumber of allocations: " << alloc <<
        "\ncopy-allocations: " << allocCopy <<
-       "\ncopy-allocations from SquidString: " << allocFromString <<
        "\ncopy-allocations from C String: " << allocFromCString <<
        "\nlive references: " << live <<
        "\nno-copy assignments: " << assignFast <<
@@ -947,15 +934,6 @@
         throw OutOfBoundsException(*this, pos, __FILE__, __LINE__);
 }
 
-String
-SBuf::toString() const
-{
-    String rv;
-    rv.limitInit(buf(), length());
-    ++stats.copyOut;
-    return rv;
-}
-
 /** re-allocate the backing store of the SBuf.
  *
  * If there are contents in the SBuf, they will be copied over.

=== renamed file 'src/SBuf.h' => 'src/sbuf/SBuf.h'
--- src/SBuf.h	2016-02-08 11:22:48 +0000
+++ src/sbuf/SBuf.h	2016-02-24 18:12:43 +0000
@@ -14,9 +14,8 @@
 #include "base/InstanceId.h"
 #include "Debug.h"
 #include "globals.h"
-#include "MemBlob.h"
+#include "sbuf/MemBlob.h"
 #include "SBufExceptions.h"
-#include "SquidString.h"
 
 #include <climits>
 #include <cstdarg>
@@ -50,7 +49,6 @@
 public:
     uint64_t alloc; ///<number of calls to SBuf constructors
     uint64_t allocCopy; ///<number of calls to SBuf copy-constructor
-    uint64_t allocFromString; ///<number of copy-allocations from Strings
     uint64_t allocFromCString; ///<number of copy-allocations from c-strings
     uint64_t assignFast; ///<number of no-copy assignment operations
     uint64_t clear; ///<number of clear operations
@@ -162,12 +160,6 @@
     explicit SBuf(const char *S, size_type n);
     explicit SBuf(const char *S);
 
-    /** Constructor: import SquidString, copying contents.
-     *
-     * This method will be removed once SquidString has gone.
-     */
-    explicit SBuf(const String &S);
-
     /// Constructor: import std::string. Contents are copied.
     explicit SBuf(const std::string &s);
 
@@ -639,12 +631,6 @@
     /// converts all characters to upper case; \see man toupper(3)
     void toUpper();
 
-    /** String export function
-     * converts the SBuf to a legacy String, by copy.
-     * \deprecated
-     */
-    String toString() const;
-
     /// std::string export function
     std::string toStdString() const { return std::string(buf(),length()); }
 

=== renamed file 'src/SBufAlgos.cc' => 'src/sbuf/SBufAlgos.cc'
=== renamed file 'src/SBufAlgos.h' => 'src/sbuf/SBufAlgos.h'
=== renamed file 'src/SBufDetailedStats.cc' => 'src/sbuf/SBufDetailedStats.cc'
=== renamed file 'src/SBufDetailedStats.h' => 'src/sbuf/SBufDetailedStats.h'
--- src/SBufDetailedStats.h	2016-01-01 00:12:18 +0000
+++ src/sbuf/SBufDetailedStats.h	2016-02-24 12:16:16 +0000
@@ -9,7 +9,7 @@
 #ifndef SQUID_SBUFDETAILEDSTATS_H
 #define SQUID_SBUFDETAILEDSTATS_H
 
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 class StatHist;
 

=== renamed file 'src/SBufExceptions.cc' => 'src/sbuf/SBufExceptions.cc'
=== renamed file 'src/SBufExceptions.h' => 'src/sbuf/SBufExceptions.h'
=== renamed file 'src/SBufList.cc' => 'src/sbuf/SBufList.cc'
=== renamed file 'src/SBufList.h' => 'src/sbuf/SBufList.h'
=== renamed file 'src/SBufStream.h' => 'src/sbuf/SBufStream.h'
=== added file 'src/sbuf/SBufStringConvert.h'
--- src/sbuf/SBufStringConvert.h	1970-01-01 00:00:00 +0000
+++ src/sbuf/SBufStringConvert.h	2016-02-25 16:34:29 +0000
@@ -0,0 +1,33 @@
+/*
+ * Copyright (C) 1996-2016 The Squid Software Foundation and contributors
+ *
+ * Squid software is distributed under GPLv2+ license and includes
+ * contributions from numerous individuals and organizations.
+ * Please see the COPYING and CONTRIBUTORS files for details.
+ */
+
+#ifndef SQUID_SRC_SBUF_SBUFSTRING_H_
+#define SQUID_SRC_SBUF_SBUFSTRING_H_
+
+#include "SBuf.h"
+#include "SquidString.h"
+
+/// create a new SBuf from a String by copying contents
+inline SBuf
+StringToSBuf(const String &s)
+{
+    return SBuf(s.rawBuf(), s.size());
+}
+
+/** create a new String from a SBuf by copying contents
+ * \deprecated
+ */
+inline String
+SBufToString(const SBuf &s)
+{
+    String rv;
+    rv.limitInit(s.rawContent(), s.length());
+    return rv;
+}
+
+#endif /* SQUID_SRC_SBUF_SBUFSTRING_H_ */

=== modified file 'src/security/KeyData.h'
--- src/security/KeyData.h	2016-01-01 00:12:18 +0000
+++ src/security/KeyData.h	2016-02-23 08:51:22 +0000
@@ -9,7 +9,7 @@
 #ifndef SQUID_SRC_SECURITY_KEYDATA_H
 #define SQUID_SRC_SECURITY_KEYDATA_H
 
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "security/forward.h"
 
 namespace Security

=== modified file 'src/servers/Server.h'
--- src/servers/Server.h	2016-01-24 17:21:02 +0000
+++ src/servers/Server.h	2016-02-23 08:51:22 +0000
@@ -18,7 +18,7 @@
 #include "comm/Write.h"
 #include "CommCalls.h"
 #include "Pipeline.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 /**
  * Common base for all Server classes used

=== modified file 'src/ssl/bio.h'
--- src/ssl/bio.h	2016-01-01 00:12:18 +0000
+++ src/ssl/bio.h	2016-02-23 08:51:22 +0000
@@ -10,7 +10,7 @@
 #define SQUID_SSL_BIO_H
 
 #include "fd.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 #include <iosfwd>
 #include <list>

=== modified file 'src/ssl/support.h'
--- src/ssl/support.h	2016-02-17 21:03:29 +0000
+++ src/ssl/support.h	2016-02-23 08:51:22 +0000
@@ -14,7 +14,7 @@
 #if USE_OPENSSL
 
 #include "base/CbDataList.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "security/forward.h"
 #include "ssl/gadgets.h"
 

=== modified file 'src/tests/SBufFindTest.cc'
--- src/tests/SBufFindTest.cc	2016-01-01 00:12:18 +0000
+++ src/tests/SBufFindTest.cc	2016-02-25 16:43:51 +0000
@@ -8,7 +8,7 @@
 
 #include "squid.h"
 #include "base/CharacterSet.h"
-#include "SBufFindTest.h"
+#include "tests/SBufFindTest.h"
 
 #include <cppunit/extensions/HelperMacros.h>
 #include <cppunit/Message.h>

=== modified file 'src/tests/SBufFindTest.h'
--- src/tests/SBufFindTest.h	2016-01-01 00:12:18 +0000
+++ src/tests/SBufFindTest.h	2016-02-23 08:51:22 +0000
@@ -9,7 +9,7 @@
 #ifndef SQUID_SRC_TEST_SBUFFINDTEST_H
 #define SQUID_SRC_TEST_SBUFFINDTEST_H
 
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 #include <set>
 #include <string>

=== modified file 'src/tests/stub_SBuf.cc'
--- src/tests/stub_SBuf.cc	2016-01-01 00:12:18 +0000
+++ src/tests/stub_SBuf.cc	2016-02-24 18:12:43 +0000
@@ -11,7 +11,7 @@
 #define STUB_API "SBuf.cc"
 #include "tests/STUB.h"
 
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 InstanceIdDefinitions(SBuf, "SBuf");
 
@@ -27,7 +27,6 @@
 SBuf::SBuf(const SBuf &S) {}
 SBuf::SBuf(const char *S, size_type n) {}
 SBuf::SBuf(const char *S) {}
-SBuf::SBuf(const String &S) {}
 SBuf::SBuf(const std::string &s) {}
 SBuf::~SBuf() {}
 SBuf& SBuf::assign(const SBuf &S) STUB_RETVAL(*this)
@@ -66,5 +65,4 @@
 int SBuf::scanf(const char *format, ...) STUB_RETVAL(-1)
 void SBuf::toLower() STUB
 void SBuf::toUpper() STUB
-String SBuf::toString() const STUB_RETVAL(String(""))
 

=== modified file 'src/tests/stub_SBufDetailedStats.cc'
--- src/tests/stub_SBufDetailedStats.cc	2016-01-01 00:12:18 +0000
+++ src/tests/stub_SBufDetailedStats.cc	2016-02-24 12:16:16 +0000
@@ -7,15 +7,15 @@
  */
 
 #include "squid.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 #define STUB_API "SBufDetailedStats.cc"
 #include "tests/STUB.h"
 
 class StatHist;
 
-void recordSBufSizeAtDestruct(SBuf::size_type) {}
-const StatHist * collectSBufDestructTimeStats() STUB_RETVAL(NULL)
-void recordMemBlobSizeAtDestruct(SBuf::size_type) {}
-const StatHist * collectMemBlobDestructTimeStats() STUB_RETVAL(NULL)
+void recordSBufSizeAtDestruct(SBuf::size_type) STUB_NOP
+const StatHist * collectSBufDestructTimeStats() STUB_RETVAL(nullptr)
+void recordMemBlobSizeAtDestruct(SBuf::size_type) STUB_NOP
+const StatHist * collectMemBlobDestructTimeStats() STUB_RETVAL(nullptr)
 

=== modified file 'src/tests/testSBuf.cc'
--- src/tests/testSBuf.cc	2016-01-01 00:12:18 +0000
+++ src/tests/testSBuf.cc	2016-02-25 16:43:51 +0000
@@ -8,12 +8,11 @@
 
 #include "squid.h"
 #include "base/CharacterSet.h"
-#include "SBuf.h"
-#include "SBufAlgos.h"
+#include "sbuf/SBuf.h"
+#include "sbuf/SBufAlgos.h"
 #include "SBufFindTest.h"
-#include "SBufStream.h"
-#include "SquidString.h"
-#include "testSBuf.h"
+#include "sbuf/SBufStream.h"
+#include "tests/testSBuf.h"
 #include "unitTestMain.h"
 
 #include <iostream>
@@ -116,13 +115,6 @@
         CPPUNIT_ASSERT_EQUAL(s4,s3);
     }
 
-    // TEST: go via SquidString adapters.
-    {
-        String str(fox);
-        SBuf s1(str);
-        CPPUNIT_ASSERT_EQUAL(literal,s1);
-    }
-
     // TEST: go via std::string adapter.
     {
         std::string str(fox);

=== modified file 'src/tests/testSBuf.h'
--- src/tests/testSBuf.h	2016-01-01 00:12:18 +0000
+++ src/tests/testSBuf.h	2016-02-23 08:51:22 +0000
@@ -11,7 +11,7 @@
 
 #include <cppunit/extensions/HelperMacros.h>
 
-#include "OutOfBoundsException.h"
+#include "sbuf/OutOfBoundsException.h"
 
 /*
  * test the SBuf functionalities

=== modified file 'src/tests/testSBufList.cc'
--- src/tests/testSBufList.cc	2016-01-01 00:12:18 +0000
+++ src/tests/testSBufList.cc	2016-02-25 16:43:51 +0000
@@ -7,9 +7,9 @@
  */
 
 #include "squid.h"
-#include "SBufAlgos.h"
-#include "SBufList.h"
-#include "testSBufList.h"
+#include "sbuf/SBufAlgos.h"
+#include "sbuf/SBufList.h"
+#include "tests/testSBufList.h"
 #include "unitTestMain.h"
 
 CPPUNIT_TEST_SUITE_REGISTRATION( testSBufList );

=== modified file 'src/tests/testSBufList.h'
--- src/tests/testSBufList.h	2016-01-01 00:12:18 +0000
+++ src/tests/testSBufList.h	2016-02-23 08:51:22 +0000
@@ -11,7 +11,7 @@
 
 #include <cppunit/extensions/HelperMacros.h>
 
-#include "OutOfBoundsException.h"
+#include "sbuf/OutOfBoundsException.h"
 
 class testSBufList : public CPPUNIT_NS::TestFixture
 {

=== modified file 'src/tools.h'
--- src/tools.h	2016-01-01 00:12:18 +0000
+++ src/tools.h	2016-02-23 08:51:22 +0000
@@ -11,7 +11,7 @@
 #ifndef SQUID_TOOLS_H_
 #define SQUID_TOOLS_H_
 
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "typedefs.h"
 
 class MemBuf;

=== modified file 'src/tunnel.cc'
--- src/tunnel.cc	2016-02-02 15:39:23 +0000
+++ src/tunnel.cc	2016-02-23 08:51:22 +0000
@@ -32,7 +32,7 @@
 #include "LogTags.h"
 #include "MemBuf.h"
 #include "PeerSelectState.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "SquidConfig.h"
 #include "SquidTime.h"
 #include "ssl/BlindPeerConnector.h"

=== modified file 'src/wordlist.h'
--- src/wordlist.h	2016-01-01 00:12:18 +0000
+++ src/wordlist.h	2016-02-23 08:51:22 +0000
@@ -11,7 +11,7 @@
 
 #include "globals.h"
 #include "profiler/Profiler.h"
-#include "SBufList.h"
+#include "sbuf/SBufList.h"
 
 /** A list of C-strings
  *
@@ -48,7 +48,7 @@
 
 /** Concatenate a wordlist
  *
- * \deprecated use SBufListContainerJoin(SBuf()) from SBufAlgos.h instead
+ * \deprecated use SBufListContainerJoin(SBuf()) from sbuf/SBufAlgos.h instead
  */
 void wordlistCat(const wordlist *, MemBuf *);
 
@@ -60,7 +60,7 @@
 
 /** Concatenate the words in a wordlist
  *
- * \deprecated use SBufListContainerJoin(SBuf()) from SBufAlgos.h instead
+ * \deprecated use SBufListContainerJoin(SBuf()) from sbuf/SBufAlgos.h instead
  */
 void wordlistJoin(wordlist **, wordlist **);
 

# Begin bundle
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
