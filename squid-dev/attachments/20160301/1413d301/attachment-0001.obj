# Bazaar merge directive format 2 (Bazaar 0.90)
# revision_id: kinkie@squid-cache.org-20160301161949-i98jj2xbqutztx0w
# target_branch: file:///home/kinkie/squid/workspace/trunk/
# testament_sha1: 71c71e24be29b3199d04edb6ff141f60dfa8762e
# timestamp: 2016-03-01 17:28:43 +0100
# base_revision_id: kinkie@squid-cache.org-20160301103555-\
#   4t0eh1tvh2pj1rxo
# 
# Begin patch
=== modified file 'src/HttpHeader.h'
--- src/HttpHeader.h	2016-01-01 00:12:18 +0000
+++ src/HttpHeader.h	2016-03-01 16:19:49 +0000
@@ -14,6 +14,7 @@
 /* because we pass a spec by value */
 #include "HttpHeaderMask.h"
 #include "mem/forward.h"
+#include "sbuf/forward.h"
 #include "SquidString.h"
 
 #include <vector>
@@ -24,7 +25,6 @@
 class HttpHdrRange;
 class HttpHdrSc;
 class Packable;
-class SBuf;
 
 /** Possible owners of http header */
 typedef enum {

=== modified file 'src/clients/forward.h'
--- src/clients/forward.h	2016-01-01 00:12:18 +0000
+++ src/clients/forward.h	2016-03-01 16:19:49 +0000
@@ -9,9 +9,10 @@
 #ifndef SQUID_CLIENTS_FORWARD_H
 #define SQUID_CLIENTS_FORWARD_H
 
+#include "sbuf/forward.h"
+
 class FwdState;
 class HttpRequest;
-class SBuf;
 
 class AsyncJob;
 template <class Cbc> class CbcPointer;

=== modified file 'src/comm/IoCallback.h'
--- src/comm/IoCallback.h	2016-01-01 00:12:18 +0000
+++ src/comm/IoCallback.h	2016-03-01 16:19:49 +0000
@@ -13,8 +13,7 @@
 #include "comm/Flag.h"
 #include "comm/forward.h"
 #include "mem/forward.h"
-
-class SBuf;
+#include "sbuf/forward.h"
 
 namespace Comm
 {

=== modified file 'src/comm/Read.h'
--- src/comm/Read.h	2016-01-01 00:12:18 +0000
+++ src/comm/Read.h	2016-03-01 16:19:49 +0000
@@ -12,8 +12,7 @@
 #include "base/AsyncCall.h"
 #include "comm/forward.h"
 #include "CommCalls.h"
-
-class SBuf;
+#include "sbuf/forward.h"
 
 namespace Comm
 {

=== modified file 'src/ftp/Elements.h'
--- src/ftp/Elements.h	2016-01-01 00:12:18 +0000
+++ src/ftp/Elements.h	2016-03-01 16:19:49 +0000
@@ -10,8 +10,8 @@
 #define SQUID_FTP_ELEMENTS_H
 
 #include "http/StatusCode.h"
+#include "sbuf/forward.h"
 
-class SBuf;
 class HttpReply;
 
 namespace AnyP

=== modified file 'src/internal.h'
--- src/internal.h	2016-01-01 00:12:18 +0000
+++ src/internal.h	2016-03-01 16:19:49 +0000
@@ -15,9 +15,9 @@
 #define SQUID_INTERNAL_H_
 
 #include "comm/forward.h"
+#include "sbuf/forward.h"
 
 class HttpRequest;
-class SBuf;
 class StoreEntry;
 
 void internalStart(const Comm::ConnectionPointer &clientConn, HttpRequest *, StoreEntry *);

=== modified file 'src/ipc/mem/Segment.h'
--- src/ipc/mem/Segment.h	2016-01-28 01:30:37 +0000
+++ src/ipc/mem/Segment.h	2016-03-01 16:19:49 +0000
@@ -10,10 +10,9 @@
 #define SQUID_IPC_MEM_SEGMENT_H
 
 #include "base/RunnersRegistry.h"
+#include "sbuf/forward.h"
 #include "SquidString.h"
 
-class SBuf;
-
 namespace Ipc
 {
 

=== modified file 'src/sbuf/Makefile.am'
--- src/sbuf/Makefile.am	2016-03-01 09:58:44 +0000
+++ src/sbuf/Makefile.am	2016-03-01 15:52:09 +0000
@@ -11,19 +11,20 @@
 noinst_LTLIBRARIES = libsbuf.la
 
 libsbuf_la_SOURCES = \
-	MemBlob.cc \
-	MemBlob.h \
-	OutOfBoundsException.h \
-	SBuf.cc \
-	SBuf.h \
 	Algorithms.cc \
 	Algorithms.h \
 	DetailedStats.cc \
 	DetailedStats.h \
 	Exceptions.cc \
 	Exceptions.h \
+	forward.h \
 	List.cc \
 	List.h \
-	Stream.h \
+	MemBlob.cc \
+	MemBlob.h \
+	OutOfBoundsException.h \
+	SBuf.cc \
+	SBuf.h \
 	Stats.cc \
-	Stats.h
+	Stats.h \
+	Stream.h

=== added file 'src/sbuf/forward.h'
--- src/sbuf/forward.h	1970-01-01 00:00:00 +0000
+++ src/sbuf/forward.h	2016-03-01 15:51:56 +0000
@@ -0,0 +1,37 @@
+/*
+ * Copyright (C) 1996-2016 The Squid Software Foundation and contributors
+ *
+ * Squid software is distributed under GPLv2+ license and includes
+ * contributions from numerous individuals and organizations.
+ * Please see the COPYING and CONTRIBUTORS files for details.
+ */
+
+#ifndef SQUID_SRC_SBUF_FORWARD_H
+#define SQUID_SRC_SBUF_FORWARD_H
+
+#include <functional>
+#include <list>
+
+class MemBlob;
+
+class SBuf;
+class SBufIterator;
+class SBufReverseIterator;
+
+class OutOfBoundsException;
+class InvalidParamException;
+class SBufTooBigException;
+
+class SBufStats;
+typedef std::list<SBuf> SBufList;
+
+class SBufEqual;
+class SBufStartsWith;
+class SBufAddLength;
+namespace std {
+template <> struct hash<SBuf>;
+}
+class CaseInsensitiveSBufHash;
+
+#endif /* SQUID_SRC_SBUF_FORWARD_H */
+

# Begin bundle
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
DkgjmrS0QSE3NtF3JFOFCQe3dLHw
