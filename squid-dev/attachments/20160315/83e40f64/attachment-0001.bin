Convert AccessLogEntry::url to an SBuf. This eliminates at least one memory leak.

This work is submitted on behalf of Bloomberg L.P.

=== modified file 'src/AccessLogEntry.h'
--- src/AccessLogEntry.h	2016-03-11 15:03:20 +0000
+++ src/AccessLogEntry.h	2016-03-14 04:13:24 +0000
@@ -21,6 +21,7 @@
 #include "LogTags.h"
 #include "MessageSizes.h"
 #include "Notes.h"
+#include "SBuf.h"
 #if ICAP_CLIENT
 #include "adaptation/icap/Elements.h"
 #endif
@@ -56,7 +57,7 @@
     /// Fetch the transaction method string (ICP opcode, HTCP opcode or HTTP method)
     SBuf getLogMethod() const;
 
-    const char *url;
+    SBuf url;
 
     /// TCP/IP level details about the client connection
     Comm::ConnectionPointer tcpClient;

=== modified file 'src/acl/FilledChecklist.cc'
--- src/acl/FilledChecklist.cc	2016-01-31 12:05:30 +0000
+++ src/acl/FilledChecklist.cc	2016-03-14 04:16:21 +0000
@@ -103,9 +103,9 @@
             HTTPMSGLOCK(al->adapted_request);
         }
 
-        if (!al->url) {
+        if (al->url.isEmpty()) {
             showDebugWarning("URL");
-            al->url = xstrdup(request->url.absolute().c_str());
+            al->url = request->url.absolute();
         }
     }
 

=== modified file 'src/format/Format.cc'
--- src/format/Format.cc	2016-03-11 15:03:20 +0000
+++ src/format/Format.cc	2016-03-14 04:16:21 +0000
@@ -1039,7 +1039,9 @@
         break;
 
         case LFT_REQUEST_URI:
-            out = al->url;
+            if (!al->url.isEmpty()) {
+                out = al->url.c_str();
+            }
             break;
 
         case LFT_REQUEST_VERSION_OLD_2X:

=== modified file 'src/log/FormatHttpdCombined.cc'
--- src/log/FormatHttpdCombined.cc	2016-01-01 00:12:18 +0000
+++ src/log/FormatHttpdCombined.cc	2016-03-14 04:16:21 +0000
@@ -53,7 +53,7 @@
                   user_auth ? user_auth : dash_str,
                   Time::FormatHttpd(squid_curtime),
                   SQUIDSBUFPRINT(method),
-                  al->url,
+                  al->url.c_str(),
                   AnyP::ProtocolType_str[al->http.version.protocol],
                   al->http.version.major, al->http.version.minor,
                   al->http.code,

=== modified file 'src/log/FormatHttpdCommon.cc'
--- src/log/FormatHttpdCommon.cc	2016-01-01 00:12:18 +0000
+++ src/log/FormatHttpdCommon.cc	2016-03-14 04:16:22 +0000
@@ -40,7 +40,7 @@
                   user_auth ? user_auth : dash_str,
                   Time::FormatHttpd(squid_curtime),
                   SQUIDSBUFPRINT(method),
-                  al->url,
+                  al->url.c_str(),
                   AnyP::ProtocolType_str[al->http.version.protocol],
                   al->http.version.major, al->http.version.minor,
                   al->http.code,

=== modified file 'src/log/FormatSquidNative.cc'
--- src/log/FormatSquidNative.cc	2016-01-01 00:12:18 +0000
+++ src/log/FormatSquidNative.cc	2016-03-14 04:16:22 +0000
@@ -59,7 +59,7 @@
                   al->http.code,
                   al->http.clientReplySz.messageTotal(),
                   SQUIDSBUFPRINT(method),
-                  al->url,
+                  al->url.c_str(),
                   user ? user : dash_str,
                   al->hier.ping.timedout ? "TIMEOUT_" : "",
                   hier_code_str[al->hier.code],

=== modified file 'src/log/FormatSquidReferer.cc'
--- src/log/FormatSquidReferer.cc	2016-01-01 00:12:18 +0000
+++ src/log/FormatSquidReferer.cc	2016-03-14 04:16:22 +0000
@@ -33,6 +33,6 @@
                   (int) current_time.tv_usec / 1000,
                   clientip,
                   referer,
-                  al->url ? al->url : "-");
+                  !al->url.isEmpty() ? al->url.c_str() : "-");
 }
 

=== modified file 'src/log/access_log.cc'
--- src/log/access_log.cc	2016-01-01 00:12:18 +0000
+++ src/log/access_log.cc	2016-03-14 04:16:10 +0000
@@ -76,7 +76,7 @@
 accessLogLogTo(CustomLog* log, AccessLogEntry::Pointer &al, ACLChecklist * checklist)
 {
 
-    if (al->url == NULL)
+    if (al->url.isEmpty())
         al->url = dash_str;
 
     if (!al->http.content_type || *al->http.content_type == '\0')
@@ -160,8 +160,8 @@
     else {
         unsigned int ibuf[365];
         size_t isize;
-        xstrncpy((char *) ibuf, al->url, 364 * sizeof(int));
-        isize = ((strlen(al->url) + 8) / 8) * 2;
+        xstrncpy((char *) ibuf, al->url.c_str(), 364 * sizeof(int));
+        isize = ((al->url.length() + 8) / 8) * 2;
 
         if (isize > 364)
             isize = 364;

