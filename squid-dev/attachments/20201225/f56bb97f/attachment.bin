diff -ur squid-master/src/client_side_request.cc squid-master-patched/src/client_side_request.cc
--- squid-master/src/client_side_request.cc	2020-12-23 19:34:46.000000000 +0300
+++ squid-master-patched/src/client_side_request.cc	2020-12-24 23:37:45.288275391 +0300
@@ -2027,6 +2027,16 @@
         if (!adaptedBodySource) // no body
             storeEntry()->complete();
         clientGetMoreData(node, this);
+
+        if (request->method == Http::METHOD_CONNECT && getConn())
+        {
+            Http::StatusCode new_status = new_rep->sline.status();
+            if (Http::Is2xx(new_status))
+                getConn()->stopReceiving("REQMOD replied to CONNECT with HTTP 2xx");
+            else
+                // Due to rfc7231, connection remains governed by HTTP.
+                getConn()->flags.readMore = true; // read next HTTP request
+        }
     }
 
     // we are done with getting headers (but may be receiving body)
Only in squid-master-patched/src: client_side_request.cc.orig
diff -ur squid-master/src/http/StatusCode.h squid-master-patched/src/http/StatusCode.h
--- squid-master/src/http/StatusCode.h	2020-12-23 19:34:46.000000000 +0300
+++ squid-master-patched/src/http/StatusCode.h	2020-12-24 23:37:45.288275391 +0300
@@ -90,6 +90,8 @@
 const char *StatusCodeString(const Http::StatusCode status);
 /// whether this is an informational 1xx response status code
 inline bool Is1xx(const int sc) { return scContinue <= sc && sc < scOkay; }
+/// whether this is a successful 2xx response status code
+inline bool Is2xx(const int sc) { return scOkay <= sc && sc < scMultipleChoices; }
 /// whether this response status code prohibits sending Content-Length
 inline bool ProhibitsContentLength(const StatusCode sc) { return sc == scNoContent || Is1xx(sc); }
 
