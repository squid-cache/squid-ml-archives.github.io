<tt>
&lt;div&nbsp;dir=&quot;auto&quot;&gt;I&nbsp;support&nbsp;the&nbsp;switch&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;div&nbsp;dir=&quot;ltr&quot;&nbsp;class=&quot;gmail_attr&quot;&gt;On&nbsp;Sun,&nbsp;4&nbsp;Dec&nbsp;2022&nbsp;at&nbsp;16:18,&nbsp;Alex&nbsp;Rousskov&nbsp;&lt;&lt;a&nbsp;href=&quot;mailto:rousskov@measurement-factory.com&quot;&gt;rousskov@measurement-factory.com&lt;/a&gt;&gt;&nbsp;wrote:&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;Hello,&lt;br&gt;<br>
&lt;br&gt;<br>
 &nbsp; &nbsp; I&nbsp;propose&nbsp;that&nbsp;we&nbsp;switch&nbsp;master/v6&nbsp;from&nbsp;C++11&nbsp;to&nbsp;C++17:&nbsp;Modern&nbsp;&lt;br&gt;<br>
environments&nbsp;support&nbsp;C++17&nbsp;well.&nbsp;We&nbsp;are&nbsp;wasting&nbsp;significant&nbsp;amounts&nbsp;of&nbsp;&lt;br&gt;<br>
time&nbsp;on&nbsp;emulating&nbsp;such&nbsp;basic&nbsp;C++17&nbsp;features&nbsp;as&nbsp;std::optional.&nbsp;We&nbsp;are&nbsp;&lt;br&gt;<br>
writing&nbsp;worse&nbsp;code&nbsp;than&nbsp;we&nbsp;can&nbsp;because&nbsp;we&nbsp;lack&nbsp;access&nbsp;to&nbsp;such&nbsp;basic&nbsp;&lt;br&gt;<br>
C++14&nbsp;and&nbsp;C++17&nbsp;features&nbsp;as&lt;br&gt;<br>
&lt;br&gt;<br>
*&nbsp;function&nbsp;return&nbsp;type&nbsp;deduction&nbsp;(auto)&lt;br&gt;<br>
*&nbsp;generic&nbsp;lambdas&nbsp;(auto&nbsp;arguments)&lt;br&gt;<br>
*&nbsp;relaxed&nbsp;constexpr&nbsp;restrictions&lt;br&gt;<br>
*&nbsp;std::make_unique&lt;br&gt;<br>
*&nbsp;std::integer_sequence&lt;br&gt;<br>
*&nbsp;std::quoted&lt;br&gt;<br>
*&nbsp;Nested&nbsp;namespace&nbsp;definitions&lt;br&gt;<br>
*&nbsp;[[fallthrough]],&nbsp;[[maybe_unused]],&nbsp;and&nbsp;[[nodiscard]]&lt;br&gt;<br>
*&nbsp;fold&nbsp;expressions&lt;br&gt;<br>
*&nbsp;auto&nbsp;[a,&nbsp;b]&nbsp;=&nbsp;getTwoReturnValues();&lt;br&gt;<br>
*&nbsp;inline&nbsp;variables&lt;br&gt;<br>
*&nbsp;std::any&lt;br&gt;<br>
*&nbsp;std::variant&lt;br&gt;<br>
*&nbsp;std::byte&lt;br&gt;<br>
&lt;br&gt;<br>
If&nbsp;we&nbsp;do&nbsp;not&nbsp;switch&nbsp;now,&nbsp;then&nbsp;we&nbsp;would&nbsp;have&nbsp;to&nbsp;wait&nbsp;about&nbsp;a&nbsp;year&nbsp;for&nbsp;the&nbsp;&lt;br&gt;<br>
next&nbsp;such&nbsp;opportunity&nbsp;because&nbsp;we&nbsp;should&nbsp;not&nbsp;introduce&nbsp;such&nbsp;a&nbsp;big&nbsp;&lt;br&gt;<br>
difference&nbsp;between&nbsp;master&nbsp;and&nbsp;the&nbsp;upcoming&nbsp;unstable&nbsp;v6&nbsp;branch.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
C++17&nbsp;is&nbsp;supported&nbsp;by&nbsp;popular&nbsp;modern&nbsp;compilers&nbsp;and&nbsp;stable&nbsp;distros.&nbsp;Squid&nbsp;&lt;br&gt;<br>
master&nbsp;branch&nbsp;should&nbsp;target&nbsp;those&nbsp;IMO.&nbsp;Even&nbsp;old&nbsp;environments&nbsp;can&nbsp;install&nbsp;&lt;br&gt;<br>
the&nbsp;necessary&nbsp;modern&nbsp;compilers&nbsp;(e.g.,&nbsp;RHEL5&nbsp;users&nbsp;can&nbsp;get&nbsp;them&nbsp;via&nbsp;Red&nbsp;&lt;br&gt;<br>
Hat&nbsp;Developer&nbsp;Toolset).&lt;br&gt;<br>
&lt;br&gt;<br>
*&nbsp;GCC&nbsp;v5&nbsp;supports&nbsp;most&nbsp;C++17&nbsp;features.&lt;br&gt;<br>
*&nbsp;GCC&nbsp;v8&nbsp;supports&nbsp;all&nbsp;relevant&nbsp;C++17&nbsp;features.&lt;br&gt;<br>
*&nbsp;Clang&nbsp;v5&nbsp;supports&nbsp;nearly&nbsp;all&nbsp;C++17&nbsp;features.&lt;br&gt;<br>
*&nbsp;Clang&nbsp;v8&nbsp;supports&nbsp;all&nbsp;relevant&nbsp;C++17&nbsp;features.&lt;br&gt;<br>
&lt;br&gt;<br>
*&nbsp;Ubuntu&nbsp;20.04&nbsp;LTS&nbsp;ships&nbsp;with&nbsp;GCC&nbsp;v9&nbsp;and&nbsp;clang&nbsp;v10.&lt;br&gt;<br>
&lt;br&gt;<br>
*&nbsp;&lt;a&nbsp;href=&quot;https://gcc.gnu.org/projects/cxx-status.html#cxx17&quot;&nbsp;rel=&quot;noreferrer&quot;&nbsp;target=&quot;_blank&quot;&gt;https://gcc.gnu.org/projects/cxx-status.html#cxx17&lt;/a&gt;&lt;br&gt;<br>
*&nbsp;&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2017&quot;&nbsp;rel=&quot;noreferrer&quot;&nbsp;target=&quot;_blank&quot;&gt;https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2017&lt;/a&gt;&lt;br&gt;<br>
*&nbsp;&lt;a&nbsp;href=&quot;https://clang.llvm.org/cxx_status.html#cxx17&quot;&nbsp;rel=&quot;noreferrer&quot;&nbsp;target=&quot;_blank&quot;&gt;https://clang.llvm.org/cxx_status.html#cxx17&lt;/a&gt;&lt;br&gt;<br>
*&nbsp;&lt;a&nbsp;href=&quot;https://en.cppreference.com/w/cpp/compiler_support/17&quot;&nbsp;rel=&quot;noreferrer&quot;&nbsp;target=&quot;_blank&quot;&gt;https://en.cppreference.com/w/cpp/compiler_support/17&lt;/a&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
Switching&nbsp;to&nbsp;just&nbsp;C++14&nbsp;would&nbsp;be&nbsp;better&nbsp;than&nbsp;nothing,&nbsp;but&nbsp;it&nbsp;will&nbsp;not&nbsp;&lt;br&gt;<br>
give&nbsp;us&nbsp;several&nbsp;C++17&nbsp;features&nbsp;that&nbsp;we&nbsp;already&nbsp;waste&nbsp;serious&nbsp;time&nbsp;on&nbsp;&lt;br&gt;<br>
emulating/avoiding&nbsp;(e.g.,&nbsp;std::optional).&nbsp;We&nbsp;should&nbsp;not&nbsp;switch&nbsp;to&nbsp;C++20&nbsp;&lt;br&gt;<br>
yet&nbsp;because&nbsp;modern&nbsp;stable&nbsp;compilers&nbsp;still&nbsp;have&nbsp;some&nbsp;C++20&nbsp;support&nbsp;holes.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
I&nbsp;can&nbsp;volunteer&nbsp;the&nbsp;corresponding&nbsp;PR.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
Any&nbsp;objections&nbsp;to&nbsp;switching&nbsp;master/v6&nbsp;to&nbsp;C++17?&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
Thank&nbsp;you,&lt;br&gt;<br>
&lt;br&gt;<br>
Alex.&lt;br&gt;<br>
_______________________________________________&lt;br&gt;<br>
squid-dev&nbsp;mailing&nbsp;list&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;mailto:squid-dev@lists.squid-cache.org&quot;&nbsp;target=&quot;_blank&quot;&gt;squid-dev@lists.squid-cache.org&lt;/a&gt;&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;http://lists.squid-cache.org/listinfo/squid-dev&quot;&nbsp;rel=&quot;noreferrer&quot;&nbsp;target=&quot;_blank&quot;&gt;http://lists.squid-cache.org/listinfo/squid-dev&lt;/a&gt;&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;--&nbsp;&lt;br&gt;&lt;div&nbsp;dir=&quot;ltr&quot;&nbsp;class=&quot;gmail_signature&quot;&nbsp;data-smartmail=&quot;gmail_signature&quot;&gt;@mobile&lt;/div&gt;<br>

</tt>
