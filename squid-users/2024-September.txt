From ngtech1ltd at gmail.com  Mon Sep  2 07:25:03 2024
From: ngtech1ltd at gmail.com (ngtech1ltd at gmail.com)
Date: Mon, 2 Sep 2024 10:25:03 +0300
Subject: [squid-users] A periodic update
Message-ID: <007601dafd09$3b271140$b17533c0$@gmail.com>

Hey Everybody,

Since https://cachevideos.com/ is no longer in development due to YouTube
and other vendors usage of tokens and vbr streaming.
Are there any specific video sites which are good to be cached?
Can we cache Vimeo or any other specific sites without using ICAP or ECAP ie
using plain StoreID?

Maybe Facebook?

We are talking about a SSL BUMP setup..

I have seen:
https://www.marasystems.com/products/cachemara.html

But it seems that they probably are not using Squid anymore or at-least not
a vanilla Squid.

I was working on url filtering and it seems that ufdbguard prefers to use
storage rather than CPU from what I see (specifically on YouTube).
I prefer using a bit more CPU rather then disk.

I have started working on Squid Nuggets with hope to publish some videos
about couple nice things with squid.
One of the things is SquidGuard internals breakdown and conversion to  human
readable code ie RUBY.

Eliezer



From zebu14 at free.fr  Mon Sep  2 19:00:23 2024
From: zebu14 at free.fr (Xavier Lecluse)
Date: Mon, 2 Sep 2024 21:00:23 +0200 (CEST)
Subject: [squid-users] Looking for a solution to identify "unauthenticated"
 squid proxy users.
In-Reply-To: <1017205870.90540734.1725303498921.JavaMail.root@zimbra17-e3.priv.proxad.net>
Message-ID: <1951120503.90547286.1725303623123.JavaMail.root@zimbra17-e3.priv.proxad.net>

Hello everybody,

I am facing a problem with my actual access.log configuration.
I use this logformat for the access.log :
"logformat timereadable %tl %un %Ss %>Hs %>a:%>p %st %rm %ru %mt %<st %Sh %<A %la %lp %2tr"

It's all good to trace requests when users are authentified, the login is present into <%un>.
But I have some users which are not authentified (because of incompatiblity with their softwares) and then I don't have any information to differentiate which requests are made by each "user".

I tried to add <%et> <%ea> <%ul> <%ue>, without any success (the <%ul> just display the same as <%un> in my case).

I am searching a way to display a field which would help me to identify the requester.
For example, I use an ACL a rule file for each "user" in which several ACLs are defined. (squid/current/etc/current/rule/PXI_TESTPXI_P.conf)

Is there a way to use the "matching rule" file in the access log ?

Actually, this is the log from an authenticated user :
Sep  2 17:08:32 FPVPXI2 squid[312387]: 02/Sep/2024:17:08:32 +0200 test TCP_TUNNEL 200 10.x.x.250:51994 6765 CONNECT www.google.com:443 - 5716 FIRSTUP_PARENT 10.x.x.241 10.x.x.240 3128 326

And one from an unauthenticated user :
Sep  2 16:38:47 QFPVPXI2 squid[311234]: 02/Sep/2024:16:38:47 +0200 - TCP_TUNNEL 200 10.x.x.242:22426 6726 CONNECT www.google.com:443 - 5718 FIRSTUP_PARENT 10.x.x.241 10.x.x.240 3128 249



Regards,

Xavier


From rousskov at measurement-factory.com  Mon Sep  2 20:38:44 2024
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Mon, 2 Sep 2024 16:38:44 -0400
Subject: [squid-users] Looking for a solution to identify
 "unauthenticated" squid proxy users.
In-Reply-To: <1951120503.90547286.1725303623123.JavaMail.root@zimbra17-e3.priv.proxad.net>
References: <1951120503.90547286.1725303623123.JavaMail.root@zimbra17-e3.priv.proxad.net>
Message-ID: <6de66df8-6bfa-4220-8ab8-90df280945a7@measurement-factory.com>

On 2024-09-02 15:00, Xavier Lecluse wrote:

> I am facing a problem with my actual access.log configuration.
> I use this logformat for the access.log :
> "logformat timereadable %tl %un %Ss %>Hs %>a:%>p %st %rm %ru %mt %<st %Sh %<A %la %lp %2tr"
> 
> It's all good to trace requests when users are authentified, the login is present into <%un>.
> But I have some users which are not authentified (because of incompatiblity with their softwares) and then I don't have any information to differentiate which requests are made by each "user".
> 
> I tried to add <%et> <%ea> <%ul> <%ue>, without any success (the <%ul> just display the same as <%un> in my case).
> 
> I am searching a way to display a field which would help me to identify the requester.
> For example, I use an ACL a rule file for each "user" in which several ACLs are defined. (squid/current/etc/current/rule/PXI_TESTPXI_P.conf)
> 
> Is there a way to use the "matching rule" file in the access log ?

Since many squid.conf directives are driven by ACLs, a typical 
transaction often matches dozens of rules, explicit and implicit ones. 
There is no %code that correctly guesses which matching rule should be 
logged.

However, you can define an always-matching annotate_transaction ACL and 
add it to any rule (or multiple rules). Specific or all transaction 
annotations can then be logged (or sent to helpers, etc.) using %note 
logformat code.

Untested example:

     acl markAsSpecial annotate_transaction category=special
     acl markAsBad annotate_transaction category=bad
     ...
     http_access allow goodClients
     http_access allow specialClients markAsSpecial
     http_access deny to_localhost markAsBad
     ...
     logformat timereadable %tl %note{category} %un %Ss ...


* annotate_transaction ACL type is documented at
http://www.squid-cache.org/Doc/config/acl/

* %note logformat code is documented at
http://www.squid-cache.org/Doc/config/logformat/



HTH,

Alex.


> Actually, this is the log from an authenticated user :
> Sep  2 17:08:32 FPVPXI2 squid[312387]: 02/Sep/2024:17:08:32 +0200 test TCP_TUNNEL 200 10.x.x.250:51994 6765 CONNECT www.google.com:443 - 5716 FIRSTUP_PARENT 10.x.x.241 10.x.x.240 3128 326
> 
> And one from an unauthenticated user :
> Sep  2 16:38:47 QFPVPXI2 squid[311234]: 02/Sep/2024:16:38:47 +0200 - TCP_TUNNEL 200 10.x.x.242:22426 6726 CONNECT www.google.com:443 - 5718 FIRSTUP_PARENT 10.x.x.241 10.x.x.240 3128 249
> 
> 
> 
> Regards,
> 
> Xavier
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users



From rousskov at measurement-factory.com  Mon Sep  2 21:57:03 2024
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Mon, 2 Sep 2024 17:57:03 -0400
Subject: [squid-users] Squid traffic paths
In-Reply-To: <CAFB-0QaP4uZhUB3V-E4DRYizVD+k2Ja1hHeAgY8bysQvE9-xRA@mail.gmail.com>
References: <CAFB-0QaP4uZhUB3V-E4DRYizVD+k2Ja1hHeAgY8bysQvE9-xRA@mail.gmail.com>
Message-ID: <a610a320-a0fe-4123-9821-11c6782a5c0d@measurement-factory.com>

On 2024-08-31 15:00, Scott Bates wrote:
> The squid logs show traffic going to the expected destinations.

I assume that the above statement does _not_ talk about problematic 
traffic. In other words, Squid does handle some transactions, but not 
the problematic transactions you are asking about. I believe the above 
observation confirms part (a) of my working theory.


> If I look at wireshark on one of the client systems I do see some http 
> entries?going to those destinations?through the squid server.

OK, for the purpose of this email thread, ignore traffic going through 
the Squid server.


> However 
> most of the traffic (UDP / TCP) doesn't seem to be going through the 
> squid server.

UDP: Squid does not proxy UDP-based protocols. If you want to proxy UDP, 
Squid is not the solution.

TCP: Squid can proxy HTTP/1 and FTP transactions (over TCP). Does that 
problematic TCP traffic in question contain HTTP or FTP transactions 
(i.e. originates from HTTP or FTP clients running on test VMs)? If not, 
then your existing "HTTP proxy configuration" on test VMs is probably 
not applicable -- the clients on those VMs probably ignore that HTTP 
proxy setting because they do not talk HTTP...


> I'm not sure how to force all traffic to use squid on the client system.

I do not know enough about Windows to help you with this Squid-unrelated 
configuration, but please note that since Squid cannot proxy traffic 
other than HTTP and FTP, you probably do not want to force traffic other 
than HTTP and FTP through Squid. In other words, Squid is not a 
"universal" proxy that can proxy everything.


HTH,

Alex.


> On 2024-08-28 09:14, Alex Rousskov wrote:
>> On 2024-08-28 08:52, Scott Bates wrote:
>> 
>>>> Alex: What protocol do those external services use in problematic use 
>>>> cases?>> Does Squid see the corresponding requests from VMs?
>>>> Squid can only proxy HTTP and FTP...
>> 
>>> http and https only
>> 
>> Does Squid log the corresponding problematic transactions to its 
>> access.log?
>> 
>> 
>>> The weird thing is I have an android test phone that also goes through 
>>> squid and that device shows the correct IP on the online services.
>> 
>> My working theory is that (a) android test phone goes through Squid 
>> (i.e. uses Squid as an HTTP proxy) while (b) the problematic test 
>> traffic does not (i.e. goes directly to the external service).
>> 
>> The first guess can be confirmed using access.log (should be trivial in 
>> an isolated test environment). The second guess can be confirmed by 
>> packet capture analysis (may not be trivial in a virtualized environment 
>> and on Windows).
>> 
>> 
>> HTH,
>> 
>> Alex.
>> 



From m.egert at sunsetfolien.de  Tue Sep  3 10:26:39 2024
From: m.egert at sunsetfolien.de (Michael Egert)
Date: Tue, 3 Sep 2024 10:26:39 +0000
Subject: [squid-users] negotiate_kerberos_auth not working anymore
In-Reply-To: <FR5P281MB4798BD5226BC5558D879FAE7FA972@FR5P281MB4798.DEUP281.PROD.OUTLOOK.COM>
References: <FR5P281MB4798BD5226BC5558D879FAE7FA972@FR5P281MB4798.DEUP281.PROD.OUTLOOK.COM>
Message-ID: <FR5P281MB479862CC897FB294B24E8CA3FA932@FR5P281MB4798.DEUP281.PROD.OUTLOOK.COM>

No idea?

Von: squid-users <squid-users-bounces at lists.squid-cache.org> Im Auftrag von Michael Egert
Gesendet: Freitag, 30. August 2024 14:35
An: squid-users at lists.squid-cache.org
Betreff: [squid-users] negotiate_kerberos_auth not working anymore

Hello all,

I have a little problem with this helper, it worked fine for a while and then suddely stopped working.

I can call a kerberos ticket when using kinit



root at sv-asa-proxy:/var/log/squid# kinit -kt /etc/squid/sv-asa-proxy.keytab HTTP/sv-asa-proxy at ASA.LOCAL<mailto:HTTP/sv-asa-proxy at ASA.LOCAL>
root at sv-asa-proxy:/var/log/squid# klist
Ticket cache: FILE:/tmp/krb5cc_0
Default principal: HTTP/sv-asa-proxy at ASA.LOCAL<mailto:HTTP/sv-asa-proxy at ASA.LOCAL>

Valid starting     Expires            Service principal
08/30/24 14:24:27  08/31/24 00:24:27  krbtgt/ASA.LOCAL at ASA.LOCAL<mailto:krbtgt/ASA.LOCAL at ASA.LOCAL>
        renew until 08/31/24 14:24:27
root at sv-asa-proxy:/var/log/squid#


so - this works well

this is a part of my squid.conf:

auth_param negotiate program /usr/lib/squid/negotiate_kerberos_auth -k /etc/squid/sv-asa-proxy.keytab -s HTTP/sv-asa-proxy at ASA.LOCAL<mailto:HTTP/sv-asa-proxy at ASA.LOCAL>  -r -d
auth_parauth_param negotiate children 100 startup=0 idle=10
auth_param negotiate keep_alive on
acl kerb-auth proxy_auth REQUIRED

i also tried

auth_param negotiate program /usr/lib/squid/negotiate_kerberos_auth -k /etc/squid/sv-asa-proxy.keytab -s HTTP/sv-asa-proxy at ASA.LOCAL<mailto:HTTP/sv-asa-proxy at ASA.LOCAL>  -s GSS_C_NO_NAME -r -d

no success...

when i try

root at sv-asa-proxy:/var/log/squid# /usr/lib/squid/negotiate_kerberos_auth_test -k /etc/squid/sv-asa-proxy.keytab -s HTTP/sv-asa-proxy.asa.local at ASA.LOCAL<mailto:HTTP/sv-asa-proxy.asa.local at ASA.LOCAL> -s GSS_C_NO_NAME -d -i
2024/08/30 14:28:35| negotiate_kerberos_auth_test: gss_init_sec_context() failed: Unspecified GSS failure.  Minor code may provide more information. Server not found in Kerberos database
Token: NULL
root at sv-asa-proxy:/var/log/squid#

and when i try this one:

root at sv-asa-proxy:/var/log/squid# /usr/lib/squid/negotiate_kerberos_auth -k /etc/squid/sv-asa-proxy.keytab -s HTTP/sv-asa-proxy.asa.local at ASA.LOCAL<mailto:HTTP/sv-asa-proxy.asa.local at ASA.LOCAL> -d -r
negotiate_kerberos_auth.cc(489): pid=5286 :2024/08/30 14:29:25| negotiate_kerberos_auth: INFO: Starting version 3.1.0sq
negotiate_kerberos_auth.cc(548): pid=5286 :2024/08/30 14:29:25| negotiate_kerberos_auth: INFO: Setting keytab to /etc/squid/sv-asa-proxy.keytab
negotiate_kerberos_auth.cc(571): pid=5286 :2024/08/30 14:29:25| negotiate_kerberos_auth: INFO: Changed keytab to MEMORY:negotiate_kerberos_auth_5286
admin at ASA.LOCAL<mailto:admin at ASA.LOCAL>
negotiate_kerberos_auth.cc(612): pid=5286 :2024/08/30 14:30:06| negotiate_kerberos_auth: DEBUG: Got 'admin at ASA.LOCAL' from squid (length: 15).
negotiate_kerberos_auth.cc(661): pid=5286 :2024/08/30 14:30:06| negotiate_kerberos_auth: ERROR: Invalid request [admin at ASA.LOCAL]
BH Invalid request

And the log:

2024/08/30 14:31:25 kid1| Set Current Directory to /var/spool/squid
2024/08/30 14:31:25 kid1| Starting Squid Cache version 5.9 for x86_64-pc-linux-gnu...
2024/08/30 14:31:25 kid1| Service Name: squid
2024/08/30 14:31:25 kid1| Process ID 5309
2024/08/30 14:31:25 kid1| Process Roles: worker
2024/08/30 14:31:25 kid1| With 1024 file descriptors available
2024/08/30 14:31:25 kid1| Initializing IP Cache...
2024/08/30 14:31:25 kid1| DNS Socket created at [::], FD 9
2024/08/30 14:31:25 kid1| DNS Socket created at 0.0.0.0, FD 10
2024/08/30 14:31:25 kid1| Adding nameserver 192.168.40.1 from squid.conf
2024/08/30 14:31:25 kid1| Adding nameserver 192.168.40.2 from squid.conf
2024/08/30 14:31:25 kid1| helperOpenServers: Starting 0/100 'negotiate_kerberos_auth' processes
2024/08/30 14:31:25 kid1| helperStatefulOpenServers: No 'negotiate_kerberos_auth' processes needed.
2024/08/30 14:31:25 kid1| helperOpenServers: Starting 0/25 'ext_kerberos_ldap_group_acl' processes
2024/08/30 14:31:25 kid1| helperOpenServers: No 'ext_kerberos_ldap_group_acl' processes needed.
2024/08/30 14:31:25 kid1| Logfile: opening log daemon:/var/log/squid/access.log
2024/08/30 14:31:25 kid1| Logfile Daemon: opening log /var/log/squid/access.log
2024/08/30 14:31:26 kid1| Unlinkd pipe opened on FD 16
2024/08/30 14:31:26 kid1| Local cache digest enabled; rebuild/rewrite every 3600/3600 sec
2024/08/30 14:31:26 kid1| Logfile: opening log daemon:/var/log/squid/store.log
2024/08/30 14:31:26 kid1| Logfile Daemon: opening log /var/log/squid/store.log
2024/08/30 14:31:26 kid1| Swap maxSize 20480000 + 2097152 KB, estimated 1736704 objects
2024/08/30 14:31:26 kid1| Target number of buckets: 86835
2024/08/30 14:31:26 kid1| Using 131072 Store buckets
2024/08/30 14:31:26 kid1| Max Mem  size: 2097152 KB
2024/08/30 14:31:26 kid1| Max Swap size: 20480000 KB
2024/08/30 14:31:26 kid1| Rebuilding storage in /var/cache/squid (clean log)
2024/08/30 14:31:26 kid1| Using Least Load store dir selection
2024/08/30 14:31:26 kid1| Set Current Directory to /var/spool/squid
2024/08/30 14:31:26 kid1| Finished loading MIME types and icons.
2024/08/30 14:31:26 kid1| HTCP Disabled.
2024/08/30 14:31:26 kid1| Pinger socket opened on FD 23
2024/08/30 14:31:26 kid1| Squid plugin modules loaded: 0
2024/08/30 14:31:26 kid1| Adaptation support is off.
2024/08/30 14:31:26 kid1| Accepting HTTP Socket connections at conn3 local=[::]:8080 remote=[::] FD 21 flags=9
2024/08/30 14:31:26 kid1| Done reading /var/cache/squid swaplog (50 entries)
2024/08/30 14:31:26 kid1| Finished rebuilding storage from disk.
2024/08/30 14:31:26 kid1|        50 Entries scanned
2024/08/30 14:31:26 kid1|         0 Invalid entries.
2024/08/30 14:31:26 kid1|         0 With invalid flags.
2024/08/30 14:31:26 kid1|        50 Objects loaded.
2024/08/30 14:31:26 kid1|         0 Objects expired.
2024/08/30 14:31:26 kid1|         0 Objects cancelled.
2024/08/30 14:31:26 kid1|         0 Duplicate URLs purged.
2024/08/30 14:31:26 kid1|         0 Swapfile clashes avoided.
2024/08/30 14:31:26 kid1|   Took 0.01 seconds (5303.35 objects/sec).
2024/08/30 14:31:26 kid1| Beginning Validation Procedure
2024/08/30 14:31:26 kid1|   Completed Validation Procedure
2024/08/30 14:31:26 kid1|   Validated 50 Entries
2024/08/30 14:31:26 kid1|   store_swap_size = 732.00 KB
2024/08/30 14:31:26| pinger: Initialising ICMP pinger ...
2024/08/30 14:31:26| pinger: ICMP socket opened.
2024/08/30 14:31:26| pinger: ICMPv6 socket opened
2024/08/30 14:31:27 kid1| storeLateRelease: released 0 objects

Do you have any suggstions for me?

Kind regards

Michael

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240903/c6123d1f/attachment.htm>

From rousskov at measurement-factory.com  Tue Sep  3 13:28:08 2024
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Tue, 3 Sep 2024 09:28:08 -0400
Subject: [squid-users] negotiate_kerberos_auth not working anymore
In-Reply-To: <FR5P281MB4798BD5226BC5558D879FAE7FA972@FR5P281MB4798.DEUP281.PROD.OUTLOOK.COM>
References: <FR5P281MB4798BD5226BC5558D879FAE7FA972@FR5P281MB4798.DEUP281.PROD.OUTLOOK.COM>
Message-ID: <ec44580c-173c-4d58-92ab-033515ff7a2e@measurement-factory.com>

On 2024-08-30 08:35, Michael Egert wrote:

> I have a little problem with this helper, it worked fine for a while and 
> then suddely stopped working.

It may help others if you detail "stopped working" based on a test case 
involving Squid. AFAICT, your email contains an attempt to manually feed 
the helper a syntactically invalid request but does not detail what does 
not work when Squid is involved. The cache.log provided shows an unused 
helper.


> negotiate_kerberos_auth: DEBUG: Got 'admin at ASA.LOCAL' from squid
> negotiate_kerberos_auth: ERROR: Invalid request [admin at ASA.LOCAL]

A helper request must start with "YR" or "KK" characters. This manual 
request does not.


 > auth_parauth_param negotiate children 100 startup=0 idle=10

There is no "auth_parauth_param" directive. This is probably a 
copy-paste typo, but please check that the actual spelling is "auth_param".


Disclaimer: I do not know much about kerberos and negotiate_kerberos_auth.


HTH,

Alex.


> I can call a kerberos ticket when using kinit
> 
> root at sv-asa-proxy:/var/log/squid# kinit -kt 
> /etc/squid/sv-asa-proxy.keytab HTTP/sv-asa-proxy at ASA.LOCAL
> 
> root at sv-asa-proxy:/var/log/squid# klist
> 
> Ticket cache: FILE:/tmp/krb5cc_0
> 
> Default principal: HTTP/sv-asa-proxy at ASA.LOCAL
> 
> Valid starting???? Expires??????????? Service principal
> 
> 08/30/24 14:24:27? 08/31/24 00:24:27? krbtgt/ASA.LOCAL at ASA.LOCAL
> 
>  ??????? renew until 08/31/24 14:24:27
> 
> root at sv-asa-proxy:/var/log/squid#
> 
> so ? this works well
> 
> this is a part of my squid.conf:
> 
> auth_param negotiate program /usr/lib/squid/negotiate_kerberos_auth -k 
> /etc/squid/sv-asa-proxy.keytab -s HTTP/sv-asa-proxy at ASA.LOCAL 
> <mailto:HTTP/sv-asa-proxy at ASA.LOCAL>? -r -d
> 
> auth_parauth_param negotiate children 100 startup=0 idle=10
> 
> auth_param negotiate keep_alive on
> 
> acl kerb-auth proxy_auth REQUIRED
> 
> i also tried
> 
> auth_param negotiate program /usr/lib/squid/negotiate_kerberos_auth -k 
> /etc/squid/sv-asa-proxy.keytab -s HTTP/sv-asa-proxy at ASA.LOCAL? -s 
> GSS_C_NO_NAME -r -d
> 
> no success...
> 
> when i try
> 
> root at sv-asa-proxy:/var/log/squid# 
> /usr/lib/squid/negotiate_kerberos_auth_test -k 
> /etc/squid/sv-asa-proxy.keytab -s HTTP/sv-asa-proxy.asa.local at ASA.LOCAL 
> -s GSS_C_NO_NAME -d -i
> 
> 2024/08/30 14:28:35| negotiate_kerberos_auth_test: 
> gss_init_sec_context() failed: Unspecified GSS failure.? Minor code may 
> provide more information. Server not found in Kerberos database
> 
> Token: NULL
> 
> root at sv-asa-proxy:/var/log/squid#
> 
> and when i try this one:
> 
> root at sv-asa-proxy:/var/log/squid# /usr/lib/squid/negotiate_kerberos_auth 
> -k /etc/squid/sv-asa-proxy.keytab -s 
> HTTP/sv-asa-proxy.asa.local at ASA.LOCAL 
> <mailto:HTTP/sv-asa-proxy.asa.local at ASA.LOCAL> -d -r
> 
> negotiate_kerberos_auth.cc(489): pid=5286 :2024/08/30 14:29:25| 
> negotiate_kerberos_auth: INFO: Starting version 3.1.0sq
> 
> negotiate_kerberos_auth.cc(548): pid=5286 :2024/08/30 14:29:25| 
> negotiate_kerberos_auth: INFO: Setting keytab to 
> /etc/squid/sv-asa-proxy.keytab
> 
> negotiate_kerberos_auth.cc(571): pid=5286 :2024/08/30 14:29:25| 
> negotiate_kerberos_auth: INFO: Changed keytab to 
> MEMORY:negotiate_kerberos_auth_5286
> 
> admin at ASA.LOCAL <mailto:admin at ASA.LOCAL>
> 
> negotiate_kerberos_auth.cc(612): pid=5286 :2024/08/30 14:30:06| 
> negotiate_kerberos_auth: DEBUG: Got 'admin at ASA.LOCAL' from squid 
> (length: 15).
> 
> negotiate_kerberos_auth.cc(661): pid=5286 :2024/08/30 14:30:06| 
> negotiate_kerberos_auth: ERROR: Invalid request [admin at ASA.LOCAL]
> 
> BH Invalid request
> 
> And the log:
> 
> 2024/08/30 14:31:25 kid1| Set Current Directory to /var/spool/squid
> 
> 2024/08/30 14:31:25 kid1| Starting Squid Cache version 5.9 for 
> x86_64-pc-linux-gnu...
> 
> 2024/08/30 14:31:25 kid1| Service Name: squid
> 
> 2024/08/30 14:31:25 kid1| Process ID 5309
> 
> 2024/08/30 14:31:25 kid1| Process Roles: worker
> 
> 2024/08/30 14:31:25 kid1| With 1024 file descriptors available
> 
> 2024/08/30 14:31:25 kid1| Initializing IP Cache...
> 
> 2024/08/30 14:31:25 kid1| DNS Socket created at [::], FD 9
> 
> 2024/08/30 14:31:25 kid1| DNS Socket created at 0.0.0.0, FD 10
> 
> 2024/08/30 14:31:25 kid1| Adding nameserver 192.168.40.1 from squid.conf
> 
> 2024/08/30 14:31:25 kid1| Adding nameserver 192.168.40.2 from squid.conf
> 
> 2024/08/30 14:31:25 kid1| helperOpenServers: Starting 0/100 
> 'negotiate_kerberos_auth' processes
> 
> 2024/08/30 14:31:25 kid1| helperStatefulOpenServers: No 
> 'negotiate_kerberos_auth' processes needed.
> 
> 2024/08/30 14:31:25 kid1| helperOpenServers: Starting 0/25 
> 'ext_kerberos_ldap_group_acl' processes
> 
> 2024/08/30 14:31:25 kid1| helperOpenServers: No 
> 'ext_kerberos_ldap_group_acl' processes needed.
> 
> 2024/08/30 14:31:25 kid1| Logfile: opening log 
> daemon:/var/log/squid/access.log
> 
> 2024/08/30 14:31:25 kid1| Logfile Daemon: opening log 
> /var/log/squid/access.log
> 
> 2024/08/30 14:31:26 kid1| Unlinkd pipe opened on FD 16
> 
> 2024/08/30 14:31:26 kid1| Local cache digest enabled; rebuild/rewrite 
> every 3600/3600 sec
> 
> 2024/08/30 14:31:26 kid1| Logfile: opening log 
> daemon:/var/log/squid/store.log
> 
> 2024/08/30 14:31:26 kid1| Logfile Daemon: opening log 
> /var/log/squid/store.log
> 
> 2024/08/30 14:31:26 kid1| Swap maxSize 20480000 + 2097152 KB, estimated 
> 1736704 objects
> 
> 2024/08/30 14:31:26 kid1| Target number of buckets: 86835
> 
> 2024/08/30 14:31:26 kid1| Using 131072 Store buckets
> 
> 2024/08/30 14:31:26 kid1| Max Mem? size: 2097152 KB
> 
> 2024/08/30 14:31:26 kid1| Max Swap size: 20480000 KB
> 
> 2024/08/30 14:31:26 kid1| Rebuilding storage in /var/cache/squid (clean log)
> 
> 2024/08/30 14:31:26 kid1| Using Least Load store dir selection
> 
> 2024/08/30 14:31:26 kid1| Set Current Directory to /var/spool/squid
> 
> 2024/08/30 14:31:26 kid1| Finished loading MIME types and icons.
> 
> 2024/08/30 14:31:26 kid1| HTCP Disabled.
> 
> 2024/08/30 14:31:26 kid1| Pinger socket opened on FD 23
> 
> 2024/08/30 14:31:26 kid1| Squid plugin modules loaded: 0
> 
> 2024/08/30 14:31:26 kid1| Adaptation support is off.
> 
> 2024/08/30 14:31:26 kid1| Accepting HTTP Socket connections at conn3 
> local=[::]:8080 remote=[::] FD 21 flags=9
> 
> 2024/08/30 14:31:26 kid1| Done reading /var/cache/squid swaplog (50 entries)
> 
> 2024/08/30 14:31:26 kid1| Finished rebuilding storage from disk.
> 
> 2024/08/30 14:31:26 kid1|??????? 50 Entries scanned
> 
> 2024/08/30 14:31:26 kid1|???????? 0 Invalid entries.
> 
> 2024/08/30 14:31:26 kid1|???????? 0 With invalid flags.
> 
> 2024/08/30 14:31:26 kid1|??????? 50 Objects loaded.
> 
> 2024/08/30 14:31:26 kid1|???????? 0 Objects expired.
> 
> 2024/08/30 14:31:26 kid1|???????? 0 Objects cancelled.
> 
> 2024/08/30 14:31:26 kid1|???????? 0 Duplicate URLs purged.
> 
> 2024/08/30 14:31:26 kid1|???????? 0 Swapfile clashes avoided.
> 
> 2024/08/30 14:31:26 kid1|?? Took 0.01 seconds (5303.35 objects/sec).
> 
> 2024/08/30 14:31:26 kid1| Beginning Validation Procedure
> 
> 2024/08/30 14:31:26 kid1|?? Completed Validation Procedure
> 
> 2024/08/30 14:31:26 kid1|?? Validated 50 Entries
> 
> 2024/08/30 14:31:26 kid1|?? store_swap_size = 732.00 KB
> 
> 2024/08/30 14:31:26| pinger: Initialising ICMP pinger ...
> 
> 2024/08/30 14:31:26| pinger: ICMP socket opened.
> 
> 2024/08/30 14:31:26| pinger: ICMPv6 socket opened
> 
> 2024/08/30 14:31:27 kid1| storeLateRelease: released 0 objects
> 
> Do you have any suggstions for me?
> 
> Kind regards
> 
> Michael
> 
> 
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users



From scott.bates at gmail.com  Tue Sep  3 13:31:00 2024
From: scott.bates at gmail.com (Scott Bates)
Date: Tue, 3 Sep 2024 09:31:00 -0400
Subject: [squid-users] Squid traffic paths (Alex Rousskov)
Message-ID: <CAFB-0QaqLG1yAUu-y1JsKeC1-KQcLvH2LV2CAcOi6kAeC6JYAA@mail.gmail.com>

Understood. The weird thing is that I have that one android device that is
working correctly. IE: The online services are showing it's correct squid
proxy. No other android or windows vm will do that. Very odd.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240903/b068210c/attachment.htm>

From rousskov at measurement-factory.com  Tue Sep  3 20:42:42 2024
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Tue, 3 Sep 2024 16:42:42 -0400
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <d063bef52efd4e32a9f9bb27f934e673@hexcel.com>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <Zs84drvoIpZ1f6DR@fantomas.sk> <58bdfaada3fa46d0938b7346ec04c336@hexcel.com>
 <947309fa-d1fc-4a75-ac49-ea7bc5c5ff12@measurement-factory.com>
 <faffca37-fa59-46ff-80e4-245c37fa90b9@measurement-factory.com>
 <c00942c1c8ab46b5b393d70f32346798@hexcel.com>
 <59274673-47e9-431d-ad45-7fa3a5a8ebca@measurement-factory.com>
 <d063bef52efd4e32a9f9bb27f934e673@hexcel.com>
Message-ID: <e35fb7b1-12ce-41b8-83c1-51a208739127@measurement-factory.com>

Hi Josh,

     Thank you for sharing debugging logs. "CONNECT hexcelssp" 
transaction is being denied by the following rule:

     http_access deny block_user

None of the ~10 http_access rules above the quoted one matched. Which of 
those rules do you expect to match that "CONNECT hexcelssp" request 
(_before_ the rule quoted above denies the request and asks the client 
to authenticate)? I suspect it is the local_dst_dom rule.

local_dst_dom ACL will not match this transaction. You have changed the 
definition of that ACL from a hard-coded (in squid.conf) "arcgate" name 
to an unknown to me set of names inside "etc/squid/local_dst_dom" file. 
I wonder whether that file path is correct: Did you mean that path to be 
relative (i.e. "etc...") rather than absolute (i.e. "/etc...")? Try 
using an absolute path and double check that the file contains 
"hexcelssp" name.


HTH,

Alex.


2024/09/03 13:14:11.467 kid1| 85,2| client_side_request.cc(758) 
clientAccessCheckDone: The request CONNECT hexcelssp:443 is 
AUTH_REQUIRED; last ACL checked: block_user




On 2024-08-29 10:34, Piana, Josh wrote:
> Good morning Alex,
> 
> I've added the following to my squid.conf file
> # logformat custom %err_code/%err_detail
> # access_log daemon:/var/log/squid/access,log custom
> 
> I've also enabled debugging options:
> # debug_options ALL,9
> 
> I've also cleaned up our ACL's to better reflect what is going on:
> # acl src_self src 127.0.0.0/8
> # acl src_self src 10.46.11.69
> # acl dst_self dst 127.0.0.0/8
> # acl dst_self dst 10.46.11.69
> 
> # acl from_arc src 10.46.0.0/15
> 
> # acl local_dst_addr dst 10.0.0.0/8
> # acl local_dst_addr dst 172.0.0.0/8
> 
> When accessing internal devices via IP, it works.
> I think this is because of this ACL:
> # http_access           allow local_dst_addr
> # http_reply_access     allow local_dst_addr
> 
> But when I access those same internal devices via hostname, it fails.
> I'm using this ACL, which I just created a separate file for:
> acl local_dst_dom dstdomain "etc/squid/local_dst_dom"
> http_access       allow local_dst_dom
> http_reply_access allow local_dst_dom
> 
> I added an ACL file because I figure it will be more extensive than the more simple IP range ACL's.
> I've added a few local websites to the "local_dst_dom" list, but I'm unable to get this to resolve without using IP.
> 
> For instance: "https://hexcelssp/" is the name of one of our internal websites for our company.
> This doesn't load under our current config but "https://10.96.14.174/" DOES load.
> 
> I've added "hexnt2067" as well, which you can see me testing in the below logs.
> Again, this DOES work with its IP, 10.96.102.67.
> 
> I'm not getting a proxy error message when I try to browse to that URL though, we just can't reach it.
> 	
> Here's the log results after enabling debugging and better log features:
> 
> 29/Aug/2024:10:25:33 -0400.380 10.46.49.190 TCP_DENIED/407 4132 CONNECT hexcelssp:443 - HIER_NONE/- text/html
> 29/Aug/2024:10:25:33 -0400.515 10.46.49.190 NONE_NONE/500 0 CONNECT hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
> 29/Aug/2024:10:25:39 -0400.799 10.46.49.190 TCP_TUNNEL/200 11716 CONNECT contile.services.mozilla.com:443 JPIANA at AD.<DOMAIN>.COM HIER_DIRECT/34.117.188.166 -
> 29/Aug/2024:10:26:05 -0400.507 10.46.49.190 TCP_DENIED/407 4474 GET http://hexnt2067/sites/it/help/SitePages/Home.aspx - HIER_NONE/- text/html
> 29/Aug/2024:10:26:05 -0400.646 10.46.49.190 TCP_MISS/500 8320 GET http://hexnt2067/sites/it/help/SitePages/Home.aspx JPIANA at AD.<DOMAIN>.COM HIER_NONE/- text/html
> 29/Aug/2024:10:26:05 -0400.735 10.46.49.190 TCP_DENIED/403 4440 GET http://arcgate2.ad/.<domain>.com:8080/squid-internal-static/icons/SN.png - HIER_NONE/- text/html
> 29/Aug/2024:10:26:05 -0400.779 10.46.49.190 TCP_MISS_ABORTED/500 0 GET http://hexnt2067/favicon.ico JPIANA at AD.<DOMAIN>.COM HIER_NONE/- text/html
> 29/Aug/2024:10:27:13 -0400.036 10.46.49.190 TCP_DENIED/407 4474 GET http://hexnt2067/sites/it/help/SitePages/Home.aspx - HIER_NONE/- text/html
> 29/Aug/2024:10:27:13 -0400.227 10.46.49.190 TCP_MISS/500 8334 GET http://hexnt2067/sites/it/help/SitePages/Home.aspx JPIANA at AD.<DOMAIN>.COM HIER_NONE/- text/html
> 29/Aug/2024:10:27:13 -0400.302 10.46.49.190 TCP_DENIED/403 4440 GET http://arcgate2.ad/.<domain>.com:8080/squid-internal-static/icons/SN.png - HIER_NONE/- text/html
> 29/Aug/2024:10:27:17 -0400.376 10.46.49.190 TCP_DENIED/407 4132 CONNECT hexcelssp:443 - HIER_NONE/- text/html
> 29/Aug/2024:10:27:17 -0400.514 10.46.49.190 NONE_NONE/500 0 CONNECT hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
> 
> I'm not sure the debugging and extra log details were added correctly, because these look the same.
> 
> Thanks,
> Josh
> 
> 
> -----Original Message-----
> From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of Alex Rousskov
> Sent: Wednesday, August 28, 2024 4:01 PM
> To: squid-users at lists.squid-cache.org
> Subject: Re: [squid-users] Unable to access internal resources via hostname
> 
> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
> 
> 
> On 2024-08-28 15:25, Piana, Josh wrote:
> 
>> I now understand that Squid 5.5 ... is actually out of date as well.
>> I regret installing and working off of this because I jused assumed
>> the "yum" install command for the Squid distro would give me the most
>> recent, known-good, software. That's completely on me.
> 
> Whether yum install installs something production-worthy today is between you and your Linux distro. Squid Project volunteers, including me, do no control what distribution you pick and what that distribution ships. The reason I mentioned v5 support status is to avoid creating a false impression that there are no _other_ (i.e. unreported by you on this thread) problems you may want to know about and to lower your expectations from the level of support you may get from Squid Project volunteers like me.
> 
> Said that, I doubt the problem you are trying to solve is v5-specific.
> You may get better diagnostics if you run v6+, and you may receive fewer unusable (with v5) instructions if you run v6+, but the problem is likely to be present in a v6-based setup as well.
> 
> 
>>  From how I understand it, his intentions for internal users accessing
>> internal resources, would skip authentication altogether.
> 
> I assume that the problematic test that you want to fix is done using "internal users". You have already stated that the test is accessing "internal resources". Yet, we see that Squid asks the test client to authenticate (TCP_DENIED/407). Thus,
> 
> * either local_dst_dom, local_dst_addr, and authless_src ACLs do not match test client transactions
> 
> * or there is an authentication-triggering directive (e.g., "http_access deny block_user") located above a matching "http_access allow" rule that uses one of those ACLs three.
> 
> Ideally, we should figure out which http_access rule matches the problematic transaction and triage from there. Unfortunately, Squid does not make that basic task easy. The best option I can think of is for you to share (privately if needed to avoid publishing sensitive info) a pointer to compressed cache.log file collected while reproducing the problem using a single test transaction after setting debug_options to ALL,9. Squid FAQ has a few hints about collecting relevant info:
> https://wiki.squid-cache.org/SquidFaq/BugReporting#debugging-a-single-transaction
> 
> This "unexpected authentication" mystery may not be directly related to the "HTTP 500 error responses" mystery we discussed earlier, but it may help to fix authentication first.
> 
> 
> HTH,
> 
> Alex.
> 
> 
>> Here's a small piece, with his notes included, of why I think that.
>>
>> ----------------------------------------------------------------------
>> --------------------------------------------------
>> #
>> ----------------------------------------------------------------------
>> ------
>> # allow without authentication
>> # these rules allow certain connects without user authentication #
>> these allow any protocol/method/etc
>>
>> #                 ***** IMPORTANT *****
>> # Adding to these lists also exempts from all content filtering.
>> # In particular, executables will be allowed to download!
>> #                 ***** IMPORTANT *****
>>
>> # allow connects to local destinations without authentication # by
>> domain name from URL
>> http_access       allow local_dst_dom
>> http_reply_access allow local_dst_dom
>>
>> # by IP address name resolves to
>> http_access       allow local_dst_addr
>> http_reply_access allow local_dst_addr
>> ----------------------------------------------------------------------
>> --------------------------------------------------
>>
>> The "http_access allow local_dst_dom" and the following reply statement seems to point toward his intentions when writing this.
>>
>> The only thing in the old config this was referencing was this, and to me, it doesn't make sense:
>> # acl local_dst_dom dstdomain arcgate
>>
>> It's worth noting that despite how awkward this seems, it DOES work. On the old web proxy we're currently still running live.
>>
>> I've gone as far as swapping out just the authentication settings and keeping the entire old config, but it still doesn't work.
>> I've setup a realmd/sssd/kerberos backend instead of Samba/Windbind that the old server uses.
>>
>> To state the issue we're having again - internal resources connecting to other internal resources fails via hostname, but works when using IP. I was able to troubleshoot and conclude DNS was not the issue, as all other aspects are working as intended and they certainly do use DNS. Also pings resolve using hostname from the new squidbox so that implies that DNS is working as expected.
>>
>> Ultimately, here's what I think we want, please feel free to poke holes in it:
>> Allow clients who are accessing other internal rersources to be able to browse to it using its hostname, without needing authentication first.
>>
>>
>> I do intend on adding those parameters you mentioned to the logs so I can get better details within. I also need to look into how to use the debugging features, I'm not familiar with it at all.
>>
>> I apologize for the wall of text, looking forward to what you guys have to say about this.
>>
>> Thanks,
>> Josh
>>
>> -----Original Message-----
>> From: squid-users <squid-users-bounces at lists.squid-cache.org> On
>> Behalf Of Alex Rousskov
>> Sent: Wednesday, August 28, 2024 2:31 PM
>> To: squid-users at lists.squid-cache.org
>> Subject: Re: [squid-users] Unable to access internal resources via
>> hostname
>>
>> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>>
>>
>> On 2024-08-28 14:18, Alex Rousskov wrote:
>>> On 2024-08-28 11:24, Piana, Josh wrote:
>>>
>>>> Here's the log and (I think) relevant ACL's?
>>>
>>> According to your access.log, Squid denies problematic CONNECT
>>> requests with HTTP 407 errors responses. Usually, that means those
>>> requests match an "http_access deny" rule. Clearly, you expect an
>>> "allow" outcome instead, but it is difficult (for me) to figure out
>>> where your expectations mismatch reality; there are no rules that
>>> explicitly mention hexcelssp domain, for example: Which "http_access
>>> allow" rule do you expect those denied requests to match?
>>
>> Sorry, I probably misinterpreted those access.log records: It looks like the denied (TCP_DENIED/407) access is something you actually expect because you want that test request to be authenticated. The client supplies the necessary credentials in the second request, and then that second request fails with a (rather generic) HTTP 500 error code, without contacting the origin server.
>>
>> I am guessing that you are concerned about that second request/transaction rather than the first one.
>>
>> Squid generates HTTP 500 errors for a variety of different reasons. Are there any messages in cache.log (at default debugging level) that correspond to these failing test transactions? If there are none, please add %err_code/%err_detail to your access_log logformat so that Squid logs more information about the problem to access.log (see logformat and access_log directives in squid.conf.documented for details).
>>
>>
>> Thank you,
>>
>> Alex.
>>
>>
>>
>>> Also, does mgr:ipcache cache manager query confirm that Squid has
>>> read your /etc/hosts file and cached the record you expect it to use?
>>>
>>> Alex.
>>>
>>>
>>>> --------------------------------------------------------------------
>>>> -
>>>> --------------------------------------
>>>> # /var/log/squid/access.log results for internal conflicts
>>>>
>>>> 28/Aug/2024:10:57:17 -0400.234 10.46.49.190 TCP_DENIED/407 4132
>>>> CONNECT hexcelssp:443 - HIER_NONE/- text/html
>>>> 28/Aug/2024:10:57:17 -0400.253 10.46.49.190 NONE_NONE/500 0 CONNECT
>>>> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
>>>> 28/Aug/2024:10:57:17 -0400.380 10.46.49.190 TCP_DENIED/407 4132
>>>> CONNECT hexcelssp:443 - HIER_NONE/- text/html
>>>> 28/Aug/2024:10:57:17 -0400.399 10.46.49.190 NONE_NONE/500 0 CONNECT
>>>> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
>>>> --------------------------------------------------------------------
>>>> -
>>>> --------------------------------------
>>>>
>>>> # acl all src all
>>>>
>>>> acl src_self src 127.0.0.0/8
>>>> acl src_self src 10.46.11.69
>>>>
>>>> acl dst_self dst 127.0.0.0/8
>>>> acl dst_self dst 10.46.11.69
>>>>
>>>> acl from_arc src 10.46.0.0/15
>>>>
>>>> acl local_dst_addr dst 10.0.0.0/8
>>>> acl local_dst_addr dst 172.0.0.0/8
>>>> acl local_dst_addr dst bldg3.<domain>.com acl local_dst_addr dst
>>>> bldg5.<domain>.com
>>>>
>>>> # these keep URLs of popular local servers from being forwarded acl
>>>> local_dst_dom dstdomain arcgate
>>>>
>>>> # allow connects to local destinations without authentication # by
>>>> domain name from URL
>>>> http_access       allow local_dst_dom
>>>> http_reply_access allow local_dst_dom
>>>>
>>>> # by IP address name resolves to
>>>> http_access       allow local_dst_addr
>>>> http_reply_access allow local_dst_addr
>>>>
>>>> # allow trusted hosts without authentication # these are just ip's
>>>> on the 10.46.11.x network acl authless_src src "/etc/squid/authless_src"
>>>> http_access       allow authless_src
>>>> http_reply_access allow authless_src
>>>> --------------------------------------------------------------------
>>>> -
>>>> --------------------------------------
>>>>
>>>> -----Original Message-----
>>>> From: squid-users <squid-users-bounces at lists.squid-cache.org> On
>>>> Behalf Of Matus UHLAR - fantomas
>>>> Sent: Wednesday, August 28, 2024 10:47 AM
>>>> To: squid-users at lists.squid-cache.org
>>>> Subject: Re: [squid-users] Unable to access internal resources via
>>>> hostname
>>>>
>>>> Caution: This email originated from outside of Hexcel. Do not click
>>>> links or open attachments unless you recognize the sender and know
>>>> the content is safe.
>>>>
>>>>
>>>> On 28.08.24 14:20, Piana, Josh wrote:
>>>>> Hello Squid Support,
>>>>
>>>> This squid user forum FYI
>>>>
>>>>> We are unable to get to internal resources via hostname but using
>>>>> the IP address works fine.  Immediately, I thought this was DNS but
>>>>> when I checked the /etc/resolv.conf/ file it was pointing correctly
>>>>> to our Windows DNS server and we can ping all devices using their
>>>>> hostname, just not when browsing to it.  This leads me to believe
>>>>> something may be wrong with our squid config.
>>>>
>>>> hard to guess without seeing logs or ACL's.
>>>>
>>>>
>>>> --
>>>> Matus UHLAR - fantomas, uhlar at fantomas.sk ; http://www/.
>>>> fantomas.sk%2F&data=05%7C02%7Cjosh.piana%40hexcel.com%7C2db72264caa0
>>>> 4
>>>> f1fd80d08dcc78f9245%7C4248050df19546d5ac9c0c7c52b04cae%7C0%7C0%7C638
>>>> 6
>>>> 04666668859787%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV
>>>> 2
>>>> luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=Z7cUEdNvInDA
>>>> J
>>>> PwgQJhXWSK3H2mkAPe4CNcfYJFyy6M%3D&reserved=0
>>>> Warning: I wish NOT to receive e-mail advertising to this address.
>>>> Varovanie: na tuto adresu chcem NEDOSTAVAT akukolvek reklamnu postu.
>>>> It's now safe to throw off your computer.
>>>> _______________________________________________
>>>> squid-users mailing list
>>>> squid-users at lists.squid-cache.org
>>>> https://lis/
>>>> ts.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.pian
>>>> a
>>>> %40hexcel.com%7C2db72264caa04f1fd80d08dcc78f9245%7C4248050df19546d5a
>>>> c
>>>> 9c0c7c52b04cae%7C0%7C0%7C638604666674016161%7CUnknown%7CTWFpbGZsb3d8
>>>> e
>>>> yJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C
>>>> 0
>>>> %7C%7C%7C&sdata=%2B%2B7inZxg2LEmB2KFVWmtn64FG8SwHpEZeEyAjhNClnU%3D&r
>>>> e
>>>> served=0 _______________________________________________
>>>> squid-users mailing list
>>>> squid-users at lists.squid-cache.org
>>>> https://lis/
>>>> ts.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.pian
>>>> a
>>>> %40hexcel.com%7C2db72264caa04f1fd80d08dcc78f9245%7C4248050df19546d5a
>>>> c
>>>> 9c0c7c52b04cae%7C0%7C0%7C638604666674016161%7CUnknown%7CTWFpbGZsb3d8
>>>> e
>>>> yJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C
>>>> 0
>>>> %7C%7C%7C&sdata=%2B%2B7inZxg2LEmB2KFVWmtn64FG8SwHpEZeEyAjhNClnU%3D&r
>>>> e
>>>> served=0
>>>
>>> _______________________________________________
>>> squid-users mailing list
>>> squid-users at lists.squid-cache.org
>>> https://list/
>>> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana%
>>> 4
>>> 0hexcel.com%7C2db72264caa04f1fd80d08dcc78f9245%7C4248050df19546d5ac9c
>>> 0
>>> c7c52b04cae%7C0%7C0%7C638604666674016161%7CUnknown%7CTWFpbGZsb3d8eyJW
>>> I
>>> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%
>>> 7
>>> C%7C&sdata=%2B%2B7inZxg2LEmB2KFVWmtn64FG8SwHpEZeEyAjhNClnU%3D&reserve
>>> d
>>> =0
>>
>> _______________________________________________
>> squid-users mailing list
>> squid-users at lists.squid-cache.org
>> https://list/
>> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana%4
>> 0hexcel.com%7C6f7f2ea035ca4506507008dcc79c3598%7C4248050df19546d5ac9c0
>> c7c52b04cae%7C0%7C0%7C638604720952164544%7CUnknown%7CTWFpbGZsb3d8eyJWI
>> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7
>> C%7C&sdata=RrdtLQu5y421WIi6vjyxj1ZsNRdIn%2FMaKusbjKGoY48%3D&reserved=0
>> _______________________________________________
>> squid-users mailing list
>> squid-users at lists.squid-cache.org
>> https://list/
>> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana%4
>> 0hexcel.com%7C6f7f2ea035ca4506507008dcc79c3598%7C4248050df19546d5ac9c0
>> c7c52b04cae%7C0%7C0%7C638604720952164544%7CUnknown%7CTWFpbGZsb3d8eyJWI
>> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7
>> C%7C&sdata=RrdtLQu5y421WIi6vjyxj1ZsNRdIn%2FMaKusbjKGoY48%3D&reserved=0
> 
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users



From Josh.Piana at hexcel.com  Wed Sep  4 16:25:20 2024
From: Josh.Piana at hexcel.com (Piana, Josh)
Date: Wed, 4 Sep 2024 16:25:20 +0000
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <e35fb7b1-12ce-41b8-83c1-51a208739127@measurement-factory.com>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <Zs84drvoIpZ1f6DR@fantomas.sk> <58bdfaada3fa46d0938b7346ec04c336@hexcel.com>
 <947309fa-d1fc-4a75-ac49-ea7bc5c5ff12@measurement-factory.com>
 <faffca37-fa59-46ff-80e4-245c37fa90b9@measurement-factory.com>
 <c00942c1c8ab46b5b393d70f32346798@hexcel.com>
 <59274673-47e9-431d-ad45-7fa3a5a8ebca@measurement-factory.com>
 <d063bef52efd4e32a9f9bb27f934e673@hexcel.com>
 <e35fb7b1-12ce-41b8-83c1-51a208739127@measurement-factory.com>
Message-ID: <538ebdbdf0074bc4bcc04e0c923983a8@hexcel.com>

Hry Alex, 

That's REALLY strange that its getting blocked by "http_access deny block_user". That's an ACL that is supposed to just deny "known good" users that we don't want to have access to the user proxy. This ACL references the "block_user" list which includes guest accounts, vender accounts, and a few users. The account I'm testing with, "jpiana" is not on that list. I wonder why I'm getting filtered here and not the very bottom of the squid.conf where we have the "http_access deny all" ACL. 

Maybe the order of my ACL's is wrong? 

In regards to the "local_dst_dom", I've setup a a list here under this path:  "/etc/squid/local_dst_dom", to immitate the other ACL rules. When I added the ".hexcelssp.com" address to this list, it failed to work. Most likely because this isn't a domain. 

FWIW, I just want ad.arc-tech.com devices to be allowed to reach all other ad.arc-tech.com devices via hostname. I'm willing to remove any other ACL that's getting in the way of that in order to make this work. This whole config that we have has been pieced together and I'd like to get it to the way it's supposed to be. 

What do you recommend? I can send the whole config again, exactly as we have it now, and see what we can fix/remove/replace. 

Appreicate you helping, 
Josh 

-----Original Message-----
From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of Alex Rousskov
Sent: Tuesday, September 3, 2024 4:43 PM
To: squid-users at lists.squid-cache.org
Subject: Re: [squid-users] Unable to access internal resources via hostname

Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.


Hi Josh,

     Thank you for sharing debugging logs. "CONNECT hexcelssp"
transaction is being denied by the following rule:

     http_access deny block_user

None of the ~10 http_access rules above the quoted one matched. Which of those rules do you expect to match that "CONNECT hexcelssp" request (_before_ the rule quoted above denies the request and asks the client to authenticate)? I suspect it is the local_dst_dom rule.

local_dst_dom ACL will not match this transaction. You have changed the definition of that ACL from a hard-coded (in squid.conf) "arcgate" name to an unknown to me set of names inside "etc/squid/local_dst_dom" file.
I wonder whether that file path is correct: Did you mean that path to be relative (i.e. "etc...") rather than absolute (i.e. "/etc...")? Try using an absolute path and double check that the file contains "hexcelssp" name.


HTH,

Alex.


2024/09/03 13:14:11.467 kid1| 85,2| client_side_request.cc(758)
clientAccessCheckDone: The request CONNECT hexcelssp:443 is AUTH_REQUIRED; last ACL checked: block_user




On 2024-08-29 10:34, Piana, Josh wrote:
> Good morning Alex,
>
> I've added the following to my squid.conf file # logformat custom 
> %err_code/%err_detail # access_log daemon:/var/log/squid/access,log 
> custom
>
> I've also enabled debugging options:
> # debug_options ALL,9
>
> I've also cleaned up our ACL's to better reflect what is going on:
> # acl src_self src 127.0.0.0/8
> # acl src_self src 10.46.11.69
> # acl dst_self dst 127.0.0.0/8
> # acl dst_self dst 10.46.11.69
>
> # acl from_arc src 10.46.0.0/15
>
> # acl local_dst_addr dst 10.0.0.0/8
> # acl local_dst_addr dst 172.0.0.0/8
>
> When accessing internal devices via IP, it works.
> I think this is because of this ACL:
> # http_access           allow local_dst_addr
> # http_reply_access     allow local_dst_addr
>
> But when I access those same internal devices via hostname, it fails.
> I'm using this ACL, which I just created a separate file for:
> acl local_dst_dom dstdomain "etc/squid/local_dst_dom"
> http_access       allow local_dst_dom
> http_reply_access allow local_dst_dom
>
> I added an ACL file because I figure it will be more extensive than the more simple IP range ACL's.
> I've added a few local websites to the "local_dst_dom" list, but I'm unable to get this to resolve without using IP.
>
> For instance: "https://hexcelssp/" is the name of one of our internal websites for our company.
> This doesn't load under our current config but "https://10.96.14.174/" DOES load.
>
> I've added "hexnt2067" as well, which you can see me testing in the below logs.
> Again, this DOES work with its IP, 10.96.102.67.
>
> I'm not getting a proxy error message when I try to browse to that URL though, we just can't reach it.
>
> Here's the log results after enabling debugging and better log features:
>
> 29/Aug/2024:10:25:33 -0400.380 10.46.49.190 TCP_DENIED/407 4132 
> CONNECT hexcelssp:443 - HIER_NONE/- text/html
> 29/Aug/2024:10:25:33 -0400.515 10.46.49.190 NONE_NONE/500 0 CONNECT 
> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
> 29/Aug/2024:10:25:39 -0400.799 10.46.49.190 TCP_TUNNEL/200 11716 
> CONNECT contile.services.mozilla.com:443 JPIANA at AD.<DOMAIN>.COM 
> HIER_DIRECT/34.117.188.166 -
> 29/Aug/2024:10:26:05 -0400.507 10.46.49.190 TCP_DENIED/407 4474 GET 
> http://hexnt2067/sites/it/help/SitePages/Home.aspx - HIER_NONE/- 
> text/html
> 29/Aug/2024:10:26:05 -0400.646 10.46.49.190 TCP_MISS/500 8320 GET 
> http://hexnt2067/sites/it/help/SitePages/Home.aspx 
> JPIANA at AD.<DOMAIN>.COM HIER_NONE/- text/html
> 29/Aug/2024:10:26:05 -0400.735 10.46.49.190 TCP_DENIED/403 4440 GET 
> http://arcga/
> te2.ad%2F&data=05%7C02%7Cjosh.piana%40hexcel.com%7C09078e3264324c317c6
> e08dccc58fcfe%7C4248050df19546d5ac9c0c7c52b04cae%7C0%7C0%7C63860992981
> 3620083%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLC
> JBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=ApuKveTxEh4lWJiyQw3D5A
> Uh9PWut1%2FyxniOr6l1RL4%3D&reserved=0.<domain>.com:8080/squid-internal
> -static/icons/SN.png - HIER_NONE/- text/html
> 29/Aug/2024:10:26:05 -0400.779 10.46.49.190 TCP_MISS_ABORTED/500 0 GET 
> http://hexnt2067/favicon.ico JPIANA at AD.<DOMAIN>.COM HIER_NONE/- 
> text/html
> 29/Aug/2024:10:27:13 -0400.036 10.46.49.190 TCP_DENIED/407 4474 GET 
> http://hexnt2067/sites/it/help/SitePages/Home.aspx - HIER_NONE/- 
> text/html
> 29/Aug/2024:10:27:13 -0400.227 10.46.49.190 TCP_MISS/500 8334 GET 
> http://hexnt2067/sites/it/help/SitePages/Home.aspx 
> JPIANA at AD.<DOMAIN>.COM HIER_NONE/- text/html
> 29/Aug/2024:10:27:13 -0400.302 10.46.49.190 TCP_DENIED/403 4440 GET 
> http://arcga/
> te2.ad%2F&data=05%7C02%7Cjosh.piana%40hexcel.com%7C09078e3264324c317c6
> e08dccc58fcfe%7C4248050df19546d5ac9c0c7c52b04cae%7C0%7C0%7C63860992981
> 3620083%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLC
> JBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=ApuKveTxEh4lWJiyQw3D5A
> Uh9PWut1%2FyxniOr6l1RL4%3D&reserved=0.<domain>.com:8080/squid-internal
> -static/icons/SN.png - HIER_NONE/- text/html
> 29/Aug/2024:10:27:17 -0400.376 10.46.49.190 TCP_DENIED/407 4132 
> CONNECT hexcelssp:443 - HIER_NONE/- text/html
> 29/Aug/2024:10:27:17 -0400.514 10.46.49.190 NONE_NONE/500 0 CONNECT 
> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
>
> I'm not sure the debugging and extra log details were added correctly, because these look the same.
>
> Thanks,
> Josh
>
>
> -----Original Message-----
> From: squid-users <squid-users-bounces at lists.squid-cache.org> On 
> Behalf Of Alex Rousskov
> Sent: Wednesday, August 28, 2024 4:01 PM
> To: squid-users at lists.squid-cache.org
> Subject: Re: [squid-users] Unable to access internal resources via 
> hostname
>
> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>
>
> On 2024-08-28 15:25, Piana, Josh wrote:
>
>> I now understand that Squid 5.5 ... is actually out of date as well.
>> I regret installing and working off of this because I jused assumed 
>> the "yum" install command for the Squid distro would give me the most 
>> recent, known-good, software. That's completely on me.
>
> Whether yum install installs something production-worthy today is between you and your Linux distro. Squid Project volunteers, including me, do no control what distribution you pick and what that distribution ships. The reason I mentioned v5 support status is to avoid creating a false impression that there are no _other_ (i.e. unreported by you on this thread) problems you may want to know about and to lower your expectations from the level of support you may get from Squid Project volunteers like me.
>
> Said that, I doubt the problem you are trying to solve is v5-specific.
> You may get better diagnostics if you run v6+, and you may receive fewer unusable (with v5) instructions if you run v6+, but the problem is likely to be present in a v6-based setup as well.
>
>
>>  From how I understand it, his intentions for internal users 
>> accessing internal resources, would skip authentication altogether.
>
> I assume that the problematic test that you want to fix is done using 
> "internal users". You have already stated that the test is accessing 
> "internal resources". Yet, we see that Squid asks the test client to 
> authenticate (TCP_DENIED/407). Thus,
>
> * either local_dst_dom, local_dst_addr, and authless_src ACLs do not 
> match test client transactions
>
> * or there is an authentication-triggering directive (e.g., "http_access deny block_user") located above a matching "http_access allow" rule that uses one of those ACLs three.
>
> Ideally, we should figure out which http_access rule matches the problematic transaction and triage from there. Unfortunately, Squid does not make that basic task easy. The best option I can think of is for you to share (privately if needed to avoid publishing sensitive info) a pointer to compressed cache.log file collected while reproducing the problem using a single test transaction after setting debug_options to ALL,9. Squid FAQ has a few hints about collecting relevant info:
> https://wiki/
> .squid-cache.org%2FSquidFaq%2FBugReporting%23debugging-a-single-transa
> ction&data=05%7C02%7Cjosh.piana%40hexcel.com%7C09078e3264324c317c6e08d
> ccc58fcfe%7C4248050df19546d5ac9c0c7c52b04cae%7C0%7C0%7C638609929813776
> 344%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTi
> I6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=D%2BSI8apBgbZJnJfqr0J5WMiP
> GtnmIVdrFDPfD1vL6mM%3D&reserved=0
>
> This "unexpected authentication" mystery may not be directly related to the "HTTP 500 error responses" mystery we discussed earlier, but it may help to fix authentication first.
>
>
> HTH,
>
> Alex.
>
>
>> Here's a small piece, with his notes included, of why I think that.
>>
>> ---------------------------------------------------------------------
>> -
>> --------------------------------------------------
>> #
>> ---------------------------------------------------------------------
>> -
>> ------
>> # allow without authentication
>> # these rules allow certain connects without user authentication # 
>> these allow any protocol/method/etc
>>
>> #                 ***** IMPORTANT *****
>> # Adding to these lists also exempts from all content filtering.
>> # In particular, executables will be allowed to download!
>> #                 ***** IMPORTANT *****
>>
>> # allow connects to local destinations without authentication # by 
>> domain name from URL
>> http_access       allow local_dst_dom
>> http_reply_access allow local_dst_dom
>>
>> # by IP address name resolves to
>> http_access       allow local_dst_addr
>> http_reply_access allow local_dst_addr
>> ---------------------------------------------------------------------
>> -
>> --------------------------------------------------
>>
>> The "http_access allow local_dst_dom" and the following reply statement seems to point toward his intentions when writing this.
>>
>> The only thing in the old config this was referencing was this, and to me, it doesn't make sense:
>> # acl local_dst_dom dstdomain arcgate
>>
>> It's worth noting that despite how awkward this seems, it DOES work. On the old web proxy we're currently still running live.
>>
>> I've gone as far as swapping out just the authentication settings and keeping the entire old config, but it still doesn't work.
>> I've setup a realmd/sssd/kerberos backend instead of Samba/Windbind that the old server uses.
>>
>> To state the issue we're having again - internal resources connecting to other internal resources fails via hostname, but works when using IP. I was able to troubleshoot and conclude DNS was not the issue, as all other aspects are working as intended and they certainly do use DNS. Also pings resolve using hostname from the new squidbox so that implies that DNS is working as expected.
>>
>> Ultimately, here's what I think we want, please feel free to poke holes in it:
>> Allow clients who are accessing other internal rersources to be able to browse to it using its hostname, without needing authentication first.
>>
>>
>> I do intend on adding those parameters you mentioned to the logs so I can get better details within. I also need to look into how to use the debugging features, I'm not familiar with it at all.
>>
>> I apologize for the wall of text, looking forward to what you guys have to say about this.
>>
>> Thanks,
>> Josh
>>
>> -----Original Message-----
>> From: squid-users <squid-users-bounces at lists.squid-cache.org> On 
>> Behalf Of Alex Rousskov
>> Sent: Wednesday, August 28, 2024 2:31 PM
>> To: squid-users at lists.squid-cache.org
>> Subject: Re: [squid-users] Unable to access internal resources via 
>> hostname
>>
>> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>>
>>
>> On 2024-08-28 14:18, Alex Rousskov wrote:
>>> On 2024-08-28 11:24, Piana, Josh wrote:
>>>
>>>> Here's the log and (I think) relevant ACL's?
>>>
>>> According to your access.log, Squid denies problematic CONNECT 
>>> requests with HTTP 407 errors responses. Usually, that means those 
>>> requests match an "http_access deny" rule. Clearly, you expect an 
>>> "allow" outcome instead, but it is difficult (for me) to figure out 
>>> where your expectations mismatch reality; there are no rules that 
>>> explicitly mention hexcelssp domain, for example: Which "http_access 
>>> allow" rule do you expect those denied requests to match?
>>
>> Sorry, I probably misinterpreted those access.log records: It looks like the denied (TCP_DENIED/407) access is something you actually expect because you want that test request to be authenticated. The client supplies the necessary credentials in the second request, and then that second request fails with a (rather generic) HTTP 500 error code, without contacting the origin server.
>>
>> I am guessing that you are concerned about that second request/transaction rather than the first one.
>>
>> Squid generates HTTP 500 errors for a variety of different reasons. Are there any messages in cache.log (at default debugging level) that correspond to these failing test transactions? If there are none, please add %err_code/%err_detail to your access_log logformat so that Squid logs more information about the problem to access.log (see logformat and access_log directives in squid.conf.documented for details).
>>
>>
>> Thank you,
>>
>> Alex.
>>
>>
>>
>>> Also, does mgr:ipcache cache manager query confirm that Squid has 
>>> read your /etc/hosts file and cached the record you expect it to use?
>>>
>>> Alex.
>>>
>>>
>>>> -------------------------------------------------------------------
>>>> -
>>>> -
>>>> --------------------------------------
>>>> # /var/log/squid/access.log results for internal conflicts
>>>>
>>>> 28/Aug/2024:10:57:17 -0400.234 10.46.49.190 TCP_DENIED/407 4132 
>>>> CONNECT hexcelssp:443 - HIER_NONE/- text/html
>>>> 28/Aug/2024:10:57:17 -0400.253 10.46.49.190 NONE_NONE/500 0 CONNECT
>>>> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
>>>> 28/Aug/2024:10:57:17 -0400.380 10.46.49.190 TCP_DENIED/407 4132 
>>>> CONNECT hexcelssp:443 - HIER_NONE/- text/html
>>>> 28/Aug/2024:10:57:17 -0400.399 10.46.49.190 NONE_NONE/500 0 CONNECT
>>>> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
>>>> -------------------------------------------------------------------
>>>> -
>>>> -
>>>> --------------------------------------
>>>>
>>>> # acl all src all
>>>>
>>>> acl src_self src 127.0.0.0/8
>>>> acl src_self src 10.46.11.69
>>>>
>>>> acl dst_self dst 127.0.0.0/8
>>>> acl dst_self dst 10.46.11.69
>>>>
>>>> acl from_arc src 10.46.0.0/15
>>>>
>>>> acl local_dst_addr dst 10.0.0.0/8
>>>> acl local_dst_addr dst 172.0.0.0/8
>>>> acl local_dst_addr dst bldg3.<domain>.com acl local_dst_addr dst 
>>>> bldg5.<domain>.com
>>>>
>>>> # these keep URLs of popular local servers from being forwarded acl 
>>>> local_dst_dom dstdomain arcgate
>>>>
>>>> # allow connects to local destinations without authentication # by 
>>>> domain name from URL
>>>> http_access       allow local_dst_dom
>>>> http_reply_access allow local_dst_dom
>>>>
>>>> # by IP address name resolves to
>>>> http_access       allow local_dst_addr
>>>> http_reply_access allow local_dst_addr
>>>>
>>>> # allow trusted hosts without authentication # these are just ip's 
>>>> on the 10.46.11.x network acl authless_src src "/etc/squid/authless_src"
>>>> http_access       allow authless_src
>>>> http_reply_access allow authless_src
>>>> -------------------------------------------------------------------
>>>> -
>>>> -
>>>> --------------------------------------
>>>>
>>>> -----Original Message-----
>>>> From: squid-users <squid-users-bounces at lists.squid-cache.org> On 
>>>> Behalf Of Matus UHLAR - fantomas
>>>> Sent: Wednesday, August 28, 2024 10:47 AM
>>>> To: squid-users at lists.squid-cache.org
>>>> Subject: Re: [squid-users] Unable to access internal resources via 
>>>> hostname
>>>>
>>>> Caution: This email originated from outside of Hexcel. Do not click 
>>>> links or open attachments unless you recognize the sender and know 
>>>> the content is safe.
>>>>
>>>>
>>>> On 28.08.24 14:20, Piana, Josh wrote:
>>>>> Hello Squid Support,
>>>>
>>>> This squid user forum FYI
>>>>
>>>>> We are unable to get to internal resources via hostname but using 
>>>>> the IP address works fine.  Immediately, I thought this was DNS 
>>>>> but when I checked the /etc/resolv.conf/ file it was pointing 
>>>>> correctly to our Windows DNS server and we can ping all devices 
>>>>> using their hostname, just not when browsing to it.  This leads me 
>>>>> to believe something may be wrong with our squid config.
>>>>
>>>> hard to guess without seeing logs or ACL's.
>>>>
>>>>
>>>> --
>>>> Matus UHLAR - fantomas, uhlar at fantomas.sk ; http://www/.
>>>> fantomas.sk%2F&data=05%7C02%7Cjosh.piana%40hexcel.com%7C2db72264caa
>>>> 0
>>>> 4
>>>> f1fd80d08dcc78f9245%7C4248050df19546d5ac9c0c7c52b04cae%7C0%7C0%7C63
>>>> 8
>>>> 6
>>>> 04666668859787%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoi
>>>> V
>>>> 2
>>>> luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=Z7cUEdNvInD
>>>> A
>>>> J
>>>> PwgQJhXWSK3H2mkAPe4CNcfYJFyy6M%3D&reserved=0
>>>> Warning: I wish NOT to receive e-mail advertising to this address.
>>>> Varovanie: na tuto adresu chcem NEDOSTAVAT akukolvek reklamnu postu.
>>>> It's now safe to throw off your computer.
>>>> _______________________________________________
>>>> squid-users mailing list
>>>> squid-users at lists.squid-cache.org
>>>> https://lis/
>>>> ts.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.pia
>>>> n
>>>> a
>>>> %40hexcel.com%7C2db72264caa04f1fd80d08dcc78f9245%7C4248050df19546d5
>>>> a
>>>> c
>>>> 9c0c7c52b04cae%7C0%7C0%7C638604666674016161%7CUnknown%7CTWFpbGZsb3d
>>>> 8
>>>> e
>>>> yJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7
>>>> C
>>>> 0
>>>> %7C%7C%7C&sdata=%2B%2B7inZxg2LEmB2KFVWmtn64FG8SwHpEZeEyAjhNClnU%3D&
>>>> r
>>>> e
>>>> served=0 _______________________________________________
>>>> squid-users mailing list
>>>> squid-users at lists.squid-cache.org
>>>> https://lis/
>>>> ts.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.pia
>>>> n
>>>> a
>>>> %40hexcel.com%7C2db72264caa04f1fd80d08dcc78f9245%7C4248050df19546d5
>>>> a
>>>> c
>>>> 9c0c7c52b04cae%7C0%7C0%7C638604666674016161%7CUnknown%7CTWFpbGZsb3d
>>>> 8
>>>> e
>>>> yJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7
>>>> C
>>>> 0
>>>> %7C%7C%7C&sdata=%2B%2B7inZxg2LEmB2KFVWmtn64FG8SwHpEZeEyAjhNClnU%3D&
>>>> r
>>>> e
>>>> served=0
>>>
>>> _______________________________________________
>>> squid-users mailing list
>>> squid-users at lists.squid-cache.org
>>> https://list/
>>> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana
>>> %
>>> 4
>>> 0hexcel.com%7C2db72264caa04f1fd80d08dcc78f9245%7C4248050df19546d5ac9
>>> c
>>> 0
>>> c7c52b04cae%7C0%7C0%7C638604666674016161%7CUnknown%7CTWFpbGZsb3d8eyJ
>>> W
>>> I
>>> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C
>>> %
>>> 7
>>> C%7C&sdata=%2B%2B7inZxg2LEmB2KFVWmtn64FG8SwHpEZeEyAjhNClnU%3D&reserv
>>> e
>>> d
>>> =0
>>
>> _______________________________________________
>> squid-users mailing list
>> squid-users at lists.squid-cache.org
>> https://list/
>> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana%
>> 4
>> 0hexcel.com%7C6f7f2ea035ca4506507008dcc79c3598%7C4248050df19546d5ac9c
>> 0 
>> c7c52b04cae%7C0%7C0%7C638604720952164544%7CUnknown%7CTWFpbGZsb3d8eyJW
>> I
>> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%
>> 7
>> C%7C&sdata=RrdtLQu5y421WIi6vjyxj1ZsNRdIn%2FMaKusbjKGoY48%3D&reserved=
>> 0 _______________________________________________
>> squid-users mailing list
>> squid-users at lists.squid-cache.org
>> https://list/
>> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana%
>> 4
>> 0hexcel.com%7C6f7f2ea035ca4506507008dcc79c3598%7C4248050df19546d5ac9c
>> 0 
>> c7c52b04cae%7C0%7C0%7C638604720952164544%7CUnknown%7CTWFpbGZsb3d8eyJW
>> I
>> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%
>> 7
>> C%7C&sdata=RrdtLQu5y421WIi6vjyxj1ZsNRdIn%2FMaKusbjKGoY48%3D&reserved=
>> 0
>
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://list/
> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana%4
> 0hexcel.com%7C09078e3264324c317c6e08dccc58fcfe%7C4248050df19546d5ac9c0
> c7c52b04cae%7C0%7C0%7C638609929813776344%7CUnknown%7CTWFpbGZsb3d8eyJWI
> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7
> C%7C&sdata=znly2yhZPJNncjZ7A6npfy%2FOZmxAE47vHp0vspgZKgw%3D&reserved=0
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://list/
> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana%4
> 0hexcel.com%7C09078e3264324c317c6e08dccc58fcfe%7C4248050df19546d5ac9c0
> c7c52b04cae%7C0%7C0%7C638609929813776344%7CUnknown%7CTWFpbGZsb3d8eyJWI
> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7
> C%7C&sdata=znly2yhZPJNncjZ7A6npfy%2FOZmxAE47vHp0vspgZKgw%3D&reserved=0

_______________________________________________
squid-users mailing list
squid-users at lists.squid-cache.org
https://lists.squid-cache.org/listinfo/squid-users


From Josh.Piana at hexcel.com  Wed Sep  4 16:39:33 2024
From: Josh.Piana at hexcel.com (Piana, Josh)
Date: Wed, 4 Sep 2024 16:39:33 +0000
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <e35fb7b1-12ce-41b8-83c1-51a208739127@measurement-factory.com>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <Zs84drvoIpZ1f6DR@fantomas.sk> <58bdfaada3fa46d0938b7346ec04c336@hexcel.com>
 <947309fa-d1fc-4a75-ac49-ea7bc5c5ff12@measurement-factory.com>
 <faffca37-fa59-46ff-80e4-245c37fa90b9@measurement-factory.com>
 <c00942c1c8ab46b5b393d70f32346798@hexcel.com>
 <59274673-47e9-431d-ad45-7fa3a5a8ebca@measurement-factory.com>
 <d063bef52efd4e32a9f9bb27f934e673@hexcel.com>
 <e35fb7b1-12ce-41b8-83c1-51a208739127@measurement-factory.com>
Message-ID: <f7ca72b579474cc184e22dfd6ef55683@hexcel.com>

Alex, 

Please disregard the last message. 

I decided to use my brain for more than stealing oxygen. 

Modified my "local_dst_dom" ACL to the following: 

# acl local_dst_dom dstdomain ad.arc-tech.com
# http_access       allow local_dst_dom
# http_reply_access allow local_dst_dom

It works now, consider this issue resolved. 

Thank you and all other Squid volunteers for helping us troubleshoot. 

Respectfully, 
Josh



-----Original Message-----
From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of Alex Rousskov
Sent: Tuesday, September 3, 2024 4:43 PM
To: squid-users at lists.squid-cache.org
Subject: Re: [squid-users] Unable to access internal resources via hostname

Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.


Hi Josh,

     Thank you for sharing debugging logs. "CONNECT hexcelssp"
transaction is being denied by the following rule:

     http_access deny block_user

None of the ~10 http_access rules above the quoted one matched. Which of those rules do you expect to match that "CONNECT hexcelssp" request (_before_ the rule quoted above denies the request and asks the client to authenticate)? I suspect it is the local_dst_dom rule.

local_dst_dom ACL will not match this transaction. You have changed the definition of that ACL from a hard-coded (in squid.conf) "arcgate" name to an unknown to me set of names inside "etc/squid/local_dst_dom" file.
I wonder whether that file path is correct: Did you mean that path to be relative (i.e. "etc...") rather than absolute (i.e. "/etc...")? Try using an absolute path and double check that the file contains "hexcelssp" name.


HTH,

Alex.


2024/09/03 13:14:11.467 kid1| 85,2| client_side_request.cc(758)
clientAccessCheckDone: The request CONNECT hexcelssp:443 is AUTH_REQUIRED; last ACL checked: block_user




On 2024-08-29 10:34, Piana, Josh wrote:
> Good morning Alex,
>
> I've added the following to my squid.conf file # logformat custom 
> %err_code/%err_detail # access_log daemon:/var/log/squid/access,log 
> custom
>
> I've also enabled debugging options:
> # debug_options ALL,9
>
> I've also cleaned up our ACL's to better reflect what is going on:
> # acl src_self src 127.0.0.0/8
> # acl src_self src 10.46.11.69
> # acl dst_self dst 127.0.0.0/8
> # acl dst_self dst 10.46.11.69
>
> # acl from_arc src 10.46.0.0/15
>
> # acl local_dst_addr dst 10.0.0.0/8
> # acl local_dst_addr dst 172.0.0.0/8
>
> When accessing internal devices via IP, it works.
> I think this is because of this ACL:
> # http_access           allow local_dst_addr
> # http_reply_access     allow local_dst_addr
>
> But when I access those same internal devices via hostname, it fails.
> I'm using this ACL, which I just created a separate file for:
> acl local_dst_dom dstdomain "etc/squid/local_dst_dom"
> http_access       allow local_dst_dom
> http_reply_access allow local_dst_dom
>
> I added an ACL file because I figure it will be more extensive than the more simple IP range ACL's.
> I've added a few local websites to the "local_dst_dom" list, but I'm unable to get this to resolve without using IP.
>
> For instance: "https://hexcelssp/" is the name of one of our internal websites for our company.
> This doesn't load under our current config but "https://10.96.14.174/" DOES load.
>
> I've added "hexnt2067" as well, which you can see me testing in the below logs.
> Again, this DOES work with its IP, 10.96.102.67.
>
> I'm not getting a proxy error message when I try to browse to that URL though, we just can't reach it.
>
> Here's the log results after enabling debugging and better log features:
>
> 29/Aug/2024:10:25:33 -0400.380 10.46.49.190 TCP_DENIED/407 4132 
> CONNECT hexcelssp:443 - HIER_NONE/- text/html
> 29/Aug/2024:10:25:33 -0400.515 10.46.49.190 NONE_NONE/500 0 CONNECT 
> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
> 29/Aug/2024:10:25:39 -0400.799 10.46.49.190 TCP_TUNNEL/200 11716 
> CONNECT contile.services.mozilla.com:443 JPIANA at AD.<DOMAIN>.COM 
> HIER_DIRECT/34.117.188.166 -
> 29/Aug/2024:10:26:05 -0400.507 10.46.49.190 TCP_DENIED/407 4474 GET 
> http://hexnt2067/sites/it/help/SitePages/Home.aspx - HIER_NONE/- 
> text/html
> 29/Aug/2024:10:26:05 -0400.646 10.46.49.190 TCP_MISS/500 8320 GET 
> http://hexnt2067/sites/it/help/SitePages/Home.aspx 
> JPIANA at AD.<DOMAIN>.COM HIER_NONE/- text/html
> 29/Aug/2024:10:26:05 -0400.735 10.46.49.190 TCP_DENIED/403 4440 GET 
> http://arcga/
> te2.ad%2F&data=05%7C02%7Cjosh.piana%40hexcel.com%7C09078e3264324c317c6
> e08dccc58fcfe%7C4248050df19546d5ac9c0c7c52b04cae%7C0%7C0%7C63860992981
> 3620083%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLC
> JBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=ApuKveTxEh4lWJiyQw3D5A
> Uh9PWut1%2FyxniOr6l1RL4%3D&reserved=0.<domain>.com:8080/squid-internal
> -static/icons/SN.png - HIER_NONE/- text/html
> 29/Aug/2024:10:26:05 -0400.779 10.46.49.190 TCP_MISS_ABORTED/500 0 GET 
> http://hexnt2067/favicon.ico JPIANA at AD.<DOMAIN>.COM HIER_NONE/- 
> text/html
> 29/Aug/2024:10:27:13 -0400.036 10.46.49.190 TCP_DENIED/407 4474 GET 
> http://hexnt2067/sites/it/help/SitePages/Home.aspx - HIER_NONE/- 
> text/html
> 29/Aug/2024:10:27:13 -0400.227 10.46.49.190 TCP_MISS/500 8334 GET 
> http://hexnt2067/sites/it/help/SitePages/Home.aspx 
> JPIANA at AD.<DOMAIN>.COM HIER_NONE/- text/html
> 29/Aug/2024:10:27:13 -0400.302 10.46.49.190 TCP_DENIED/403 4440 GET 
> http://arcga/
> te2.ad%2F&data=05%7C02%7Cjosh.piana%40hexcel.com%7C09078e3264324c317c6
> e08dccc58fcfe%7C4248050df19546d5ac9c0c7c52b04cae%7C0%7C0%7C63860992981
> 3620083%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLC
> JBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=ApuKveTxEh4lWJiyQw3D5A
> Uh9PWut1%2FyxniOr6l1RL4%3D&reserved=0.<domain>.com:8080/squid-internal
> -static/icons/SN.png - HIER_NONE/- text/html
> 29/Aug/2024:10:27:17 -0400.376 10.46.49.190 TCP_DENIED/407 4132 
> CONNECT hexcelssp:443 - HIER_NONE/- text/html
> 29/Aug/2024:10:27:17 -0400.514 10.46.49.190 NONE_NONE/500 0 CONNECT 
> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
>
> I'm not sure the debugging and extra log details were added correctly, because these look the same.
>
> Thanks,
> Josh
>
>
> -----Original Message-----
> From: squid-users <squid-users-bounces at lists.squid-cache.org> On 
> Behalf Of Alex Rousskov
> Sent: Wednesday, August 28, 2024 4:01 PM
> To: squid-users at lists.squid-cache.org
> Subject: Re: [squid-users] Unable to access internal resources via 
> hostname
>
> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>
>
> On 2024-08-28 15:25, Piana, Josh wrote:
>
>> I now understand that Squid 5.5 ... is actually out of date as well.
>> I regret installing and working off of this because I jused assumed 
>> the "yum" install command for the Squid distro would give me the most 
>> recent, known-good, software. That's completely on me.
>
> Whether yum install installs something production-worthy today is between you and your Linux distro. Squid Project volunteers, including me, do no control what distribution you pick and what that distribution ships. The reason I mentioned v5 support status is to avoid creating a false impression that there are no _other_ (i.e. unreported by you on this thread) problems you may want to know about and to lower your expectations from the level of support you may get from Squid Project volunteers like me.
>
> Said that, I doubt the problem you are trying to solve is v5-specific.
> You may get better diagnostics if you run v6+, and you may receive fewer unusable (with v5) instructions if you run v6+, but the problem is likely to be present in a v6-based setup as well.
>
>
>>  From how I understand it, his intentions for internal users 
>> accessing internal resources, would skip authentication altogether.
>
> I assume that the problematic test that you want to fix is done using 
> "internal users". You have already stated that the test is accessing 
> "internal resources". Yet, we see that Squid asks the test client to 
> authenticate (TCP_DENIED/407). Thus,
>
> * either local_dst_dom, local_dst_addr, and authless_src ACLs do not 
> match test client transactions
>
> * or there is an authentication-triggering directive (e.g., "http_access deny block_user") located above a matching "http_access allow" rule that uses one of those ACLs three.
>
> Ideally, we should figure out which http_access rule matches the problematic transaction and triage from there. Unfortunately, Squid does not make that basic task easy. The best option I can think of is for you to share (privately if needed to avoid publishing sensitive info) a pointer to compressed cache.log file collected while reproducing the problem using a single test transaction after setting debug_options to ALL,9. Squid FAQ has a few hints about collecting relevant info:
> https://wiki/
> .squid-cache.org%2FSquidFaq%2FBugReporting%23debugging-a-single-transa
> ction&data=05%7C02%7Cjosh.piana%40hexcel.com%7C09078e3264324c317c6e08d
> ccc58fcfe%7C4248050df19546d5ac9c0c7c52b04cae%7C0%7C0%7C638609929813776
> 344%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTi
> I6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=D%2BSI8apBgbZJnJfqr0J5WMiP
> GtnmIVdrFDPfD1vL6mM%3D&reserved=0
>
> This "unexpected authentication" mystery may not be directly related to the "HTTP 500 error responses" mystery we discussed earlier, but it may help to fix authentication first.
>
>
> HTH,
>
> Alex.
>
>
>> Here's a small piece, with his notes included, of why I think that.
>>
>> ---------------------------------------------------------------------
>> -
>> --------------------------------------------------
>> #
>> ---------------------------------------------------------------------
>> -
>> ------
>> # allow without authentication
>> # these rules allow certain connects without user authentication # 
>> these allow any protocol/method/etc
>>
>> #                 ***** IMPORTANT *****
>> # Adding to these lists also exempts from all content filtering.
>> # In particular, executables will be allowed to download!
>> #                 ***** IMPORTANT *****
>>
>> # allow connects to local destinations without authentication # by 
>> domain name from URL
>> http_access       allow local_dst_dom
>> http_reply_access allow local_dst_dom
>>
>> # by IP address name resolves to
>> http_access       allow local_dst_addr
>> http_reply_access allow local_dst_addr
>> ---------------------------------------------------------------------
>> -
>> --------------------------------------------------
>>
>> The "http_access allow local_dst_dom" and the following reply statement seems to point toward his intentions when writing this.
>>
>> The only thing in the old config this was referencing was this, and to me, it doesn't make sense:
>> # acl local_dst_dom dstdomain arcgate
>>
>> It's worth noting that despite how awkward this seems, it DOES work. On the old web proxy we're currently still running live.
>>
>> I've gone as far as swapping out just the authentication settings and keeping the entire old config, but it still doesn't work.
>> I've setup a realmd/sssd/kerberos backend instead of Samba/Windbind that the old server uses.
>>
>> To state the issue we're having again - internal resources connecting to other internal resources fails via hostname, but works when using IP. I was able to troubleshoot and conclude DNS was not the issue, as all other aspects are working as intended and they certainly do use DNS. Also pings resolve using hostname from the new squidbox so that implies that DNS is working as expected.
>>
>> Ultimately, here's what I think we want, please feel free to poke holes in it:
>> Allow clients who are accessing other internal rersources to be able to browse to it using its hostname, without needing authentication first.
>>
>>
>> I do intend on adding those parameters you mentioned to the logs so I can get better details within. I also need to look into how to use the debugging features, I'm not familiar with it at all.
>>
>> I apologize for the wall of text, looking forward to what you guys have to say about this.
>>
>> Thanks,
>> Josh
>>
>> -----Original Message-----
>> From: squid-users <squid-users-bounces at lists.squid-cache.org> On 
>> Behalf Of Alex Rousskov
>> Sent: Wednesday, August 28, 2024 2:31 PM
>> To: squid-users at lists.squid-cache.org
>> Subject: Re: [squid-users] Unable to access internal resources via 
>> hostname
>>
>> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>>
>>
>> On 2024-08-28 14:18, Alex Rousskov wrote:
>>> On 2024-08-28 11:24, Piana, Josh wrote:
>>>
>>>> Here's the log and (I think) relevant ACL's?
>>>
>>> According to your access.log, Squid denies problematic CONNECT 
>>> requests with HTTP 407 errors responses. Usually, that means those 
>>> requests match an "http_access deny" rule. Clearly, you expect an 
>>> "allow" outcome instead, but it is difficult (for me) to figure out 
>>> where your expectations mismatch reality; there are no rules that 
>>> explicitly mention hexcelssp domain, for example: Which "http_access 
>>> allow" rule do you expect those denied requests to match?
>>
>> Sorry, I probably misinterpreted those access.log records: It looks like the denied (TCP_DENIED/407) access is something you actually expect because you want that test request to be authenticated. The client supplies the necessary credentials in the second request, and then that second request fails with a (rather generic) HTTP 500 error code, without contacting the origin server.
>>
>> I am guessing that you are concerned about that second request/transaction rather than the first one.
>>
>> Squid generates HTTP 500 errors for a variety of different reasons. Are there any messages in cache.log (at default debugging level) that correspond to these failing test transactions? If there are none, please add %err_code/%err_detail to your access_log logformat so that Squid logs more information about the problem to access.log (see logformat and access_log directives in squid.conf.documented for details).
>>
>>
>> Thank you,
>>
>> Alex.
>>
>>
>>
>>> Also, does mgr:ipcache cache manager query confirm that Squid has 
>>> read your /etc/hosts file and cached the record you expect it to use?
>>>
>>> Alex.
>>>
>>>
>>>> -------------------------------------------------------------------
>>>> -
>>>> -
>>>> --------------------------------------
>>>> # /var/log/squid/access.log results for internal conflicts
>>>>
>>>> 28/Aug/2024:10:57:17 -0400.234 10.46.49.190 TCP_DENIED/407 4132 
>>>> CONNECT hexcelssp:443 - HIER_NONE/- text/html
>>>> 28/Aug/2024:10:57:17 -0400.253 10.46.49.190 NONE_NONE/500 0 CONNECT
>>>> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
>>>> 28/Aug/2024:10:57:17 -0400.380 10.46.49.190 TCP_DENIED/407 4132 
>>>> CONNECT hexcelssp:443 - HIER_NONE/- text/html
>>>> 28/Aug/2024:10:57:17 -0400.399 10.46.49.190 NONE_NONE/500 0 CONNECT
>>>> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
>>>> -------------------------------------------------------------------
>>>> -
>>>> -
>>>> --------------------------------------
>>>>
>>>> # acl all src all
>>>>
>>>> acl src_self src 127.0.0.0/8
>>>> acl src_self src 10.46.11.69
>>>>
>>>> acl dst_self dst 127.0.0.0/8
>>>> acl dst_self dst 10.46.11.69
>>>>
>>>> acl from_arc src 10.46.0.0/15
>>>>
>>>> acl local_dst_addr dst 10.0.0.0/8
>>>> acl local_dst_addr dst 172.0.0.0/8
>>>> acl local_dst_addr dst bldg3.<domain>.com acl local_dst_addr dst 
>>>> bldg5.<domain>.com
>>>>
>>>> # these keep URLs of popular local servers from being forwarded acl 
>>>> local_dst_dom dstdomain arcgate
>>>>
>>>> # allow connects to local destinations without authentication # by 
>>>> domain name from URL
>>>> http_access       allow local_dst_dom
>>>> http_reply_access allow local_dst_dom
>>>>
>>>> # by IP address name resolves to
>>>> http_access       allow local_dst_addr
>>>> http_reply_access allow local_dst_addr
>>>>
>>>> # allow trusted hosts without authentication # these are just ip's 
>>>> on the 10.46.11.x network acl authless_src src "/etc/squid/authless_src"
>>>> http_access       allow authless_src
>>>> http_reply_access allow authless_src
>>>> -------------------------------------------------------------------
>>>> -
>>>> -
>>>> --------------------------------------
>>>>
>>>> -----Original Message-----
>>>> From: squid-users <squid-users-bounces at lists.squid-cache.org> On 
>>>> Behalf Of Matus UHLAR - fantomas
>>>> Sent: Wednesday, August 28, 2024 10:47 AM
>>>> To: squid-users at lists.squid-cache.org
>>>> Subject: Re: [squid-users] Unable to access internal resources via 
>>>> hostname
>>>>
>>>> Caution: This email originated from outside of Hexcel. Do not click 
>>>> links or open attachments unless you recognize the sender and know 
>>>> the content is safe.
>>>>
>>>>
>>>> On 28.08.24 14:20, Piana, Josh wrote:
>>>>> Hello Squid Support,
>>>>
>>>> This squid user forum FYI
>>>>
>>>>> We are unable to get to internal resources via hostname but using 
>>>>> the IP address works fine.  Immediately, I thought this was DNS 
>>>>> but when I checked the /etc/resolv.conf/ file it was pointing 
>>>>> correctly to our Windows DNS server and we can ping all devices 
>>>>> using their hostname, just not when browsing to it.  This leads me 
>>>>> to believe something may be wrong with our squid config.
>>>>
>>>> hard to guess without seeing logs or ACL's.
>>>>
>>>>
>>>> --
>>>> Matus UHLAR - fantomas, uhlar at fantomas.sk ; http://www/.
>>>> fantomas.sk%2F&data=05%7C02%7Cjosh.piana%40hexcel.com%7C2db72264caa
>>>> 0
>>>> 4
>>>> f1fd80d08dcc78f9245%7C4248050df19546d5ac9c0c7c52b04cae%7C0%7C0%7C63
>>>> 8
>>>> 6
>>>> 04666668859787%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoi
>>>> V
>>>> 2
>>>> luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=Z7cUEdNvInD
>>>> A
>>>> J
>>>> PwgQJhXWSK3H2mkAPe4CNcfYJFyy6M%3D&reserved=0
>>>> Warning: I wish NOT to receive e-mail advertising to this address.
>>>> Varovanie: na tuto adresu chcem NEDOSTAVAT akukolvek reklamnu postu.
>>>> It's now safe to throw off your computer.
>>>> _______________________________________________
>>>> squid-users mailing list
>>>> squid-users at lists.squid-cache.org
>>>> https://lis/
>>>> ts.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.pia
>>>> n
>>>> a
>>>> %40hexcel.com%7C2db72264caa04f1fd80d08dcc78f9245%7C4248050df19546d5
>>>> a
>>>> c
>>>> 9c0c7c52b04cae%7C0%7C0%7C638604666674016161%7CUnknown%7CTWFpbGZsb3d
>>>> 8
>>>> e
>>>> yJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7
>>>> C
>>>> 0
>>>> %7C%7C%7C&sdata=%2B%2B7inZxg2LEmB2KFVWmtn64FG8SwHpEZeEyAjhNClnU%3D&
>>>> r
>>>> e
>>>> served=0 _______________________________________________
>>>> squid-users mailing list
>>>> squid-users at lists.squid-cache.org
>>>> https://lis/
>>>> ts.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.pia
>>>> n
>>>> a
>>>> %40hexcel.com%7C2db72264caa04f1fd80d08dcc78f9245%7C4248050df19546d5
>>>> a
>>>> c
>>>> 9c0c7c52b04cae%7C0%7C0%7C638604666674016161%7CUnknown%7CTWFpbGZsb3d
>>>> 8
>>>> e
>>>> yJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7
>>>> C
>>>> 0
>>>> %7C%7C%7C&sdata=%2B%2B7inZxg2LEmB2KFVWmtn64FG8SwHpEZeEyAjhNClnU%3D&
>>>> r
>>>> e
>>>> served=0
>>>
>>> _______________________________________________
>>> squid-users mailing list
>>> squid-users at lists.squid-cache.org
>>> https://list/
>>> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana
>>> %
>>> 4
>>> 0hexcel.com%7C2db72264caa04f1fd80d08dcc78f9245%7C4248050df19546d5ac9
>>> c
>>> 0
>>> c7c52b04cae%7C0%7C0%7C638604666674016161%7CUnknown%7CTWFpbGZsb3d8eyJ
>>> W
>>> I
>>> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C
>>> %
>>> 7
>>> C%7C&sdata=%2B%2B7inZxg2LEmB2KFVWmtn64FG8SwHpEZeEyAjhNClnU%3D&reserv
>>> e
>>> d
>>> =0
>>
>> _______________________________________________
>> squid-users mailing list
>> squid-users at lists.squid-cache.org
>> https://list/
>> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana%
>> 4
>> 0hexcel.com%7C6f7f2ea035ca4506507008dcc79c3598%7C4248050df19546d5ac9c
>> 0 
>> c7c52b04cae%7C0%7C0%7C638604720952164544%7CUnknown%7CTWFpbGZsb3d8eyJW
>> I
>> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%
>> 7
>> C%7C&sdata=RrdtLQu5y421WIi6vjyxj1ZsNRdIn%2FMaKusbjKGoY48%3D&reserved=
>> 0 _______________________________________________
>> squid-users mailing list
>> squid-users at lists.squid-cache.org
>> https://list/
>> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana%
>> 4
>> 0hexcel.com%7C6f7f2ea035ca4506507008dcc79c3598%7C4248050df19546d5ac9c
>> 0 
>> c7c52b04cae%7C0%7C0%7C638604720952164544%7CUnknown%7CTWFpbGZsb3d8eyJW
>> I
>> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%
>> 7
>> C%7C&sdata=RrdtLQu5y421WIi6vjyxj1ZsNRdIn%2FMaKusbjKGoY48%3D&reserved=
>> 0
>
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://list/
> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana%4
> 0hexcel.com%7C09078e3264324c317c6e08dccc58fcfe%7C4248050df19546d5ac9c0
> c7c52b04cae%7C0%7C0%7C638609929813776344%7CUnknown%7CTWFpbGZsb3d8eyJWI
> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7
> C%7C&sdata=znly2yhZPJNncjZ7A6npfy%2FOZmxAE47vHp0vspgZKgw%3D&reserved=0
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://list/
> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana%4
> 0hexcel.com%7C09078e3264324c317c6e08dccc58fcfe%7C4248050df19546d5ac9c0
> c7c52b04cae%7C0%7C0%7C638609929813776344%7CUnknown%7CTWFpbGZsb3d8eyJWI
> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7
> C%7C&sdata=znly2yhZPJNncjZ7A6npfy%2FOZmxAE47vHp0vspgZKgw%3D&reserved=0

_______________________________________________
squid-users mailing list
squid-users at lists.squid-cache.org
https://lists.squid-cache.org/listinfo/squid-users


From Josh.Piana at hexcel.com  Wed Sep  4 18:05:31 2024
From: Josh.Piana at hexcel.com (Piana, Josh)
Date: Wed, 4 Sep 2024 18:05:31 +0000
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <f7ca72b579474cc184e22dfd6ef55683@hexcel.com>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <Zs84drvoIpZ1f6DR@fantomas.sk> <58bdfaada3fa46d0938b7346ec04c336@hexcel.com>
 <947309fa-d1fc-4a75-ac49-ea7bc5c5ff12@measurement-factory.com>
 <faffca37-fa59-46ff-80e4-245c37fa90b9@measurement-factory.com>
 <c00942c1c8ab46b5b393d70f32346798@hexcel.com>
 <59274673-47e9-431d-ad45-7fa3a5a8ebca@measurement-factory.com>
 <d063bef52efd4e32a9f9bb27f934e673@hexcel.com>
 <e35fb7b1-12ce-41b8-83c1-51a208739127@measurement-factory.com>
 <f7ca72b579474cc184e22dfd6ef55683@hexcel.com>
Message-ID: <4537b23c7a534cd3a716ffd4f8471f5e@hexcel.com>

Alex, 

Double disregard. 

I was connected to our old proxy still when I tested that. Still not working local to local. 

-----Original Message-----
From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of Piana, Josh
Sent: Wednesday, September 4, 2024 12:40 PM
To: squid-users at lists.squid-cache.org
Subject: Re: [squid-users] Unable to access internal resources via hostname

Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.


Alex,

Please disregard the last message.

I decided to use my brain for more than stealing oxygen.

Modified my "local_dst_dom" ACL to the following:

# acl local_dst_dom dstdomain ad.arc-tech.com
# http_access       allow local_dst_dom
# http_reply_access allow local_dst_dom

It works now, consider this issue resolved.

Thank you and all other Squid volunteers for helping us troubleshoot.

Respectfully,
Josh



-----Original Message-----
From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of Alex Rousskov
Sent: Tuesday, September 3, 2024 4:43 PM
To: squid-users at lists.squid-cache.org
Subject: Re: [squid-users] Unable to access internal resources via hostname

Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.


Hi Josh,

     Thank you for sharing debugging logs. "CONNECT hexcelssp"
transaction is being denied by the following rule:

     http_access deny block_user

None of the ~10 http_access rules above the quoted one matched. Which of those rules do you expect to match that "CONNECT hexcelssp" request (_before_ the rule quoted above denies the request and asks the client to authenticate)? I suspect it is the local_dst_dom rule.

local_dst_dom ACL will not match this transaction. You have changed the definition of that ACL from a hard-coded (in squid.conf) "arcgate" name to an unknown to me set of names inside "etc/squid/local_dst_dom" file.
I wonder whether that file path is correct: Did you mean that path to be relative (i.e. "etc...") rather than absolute (i.e. "/etc...")? Try using an absolute path and double check that the file contains "hexcelssp" name.


HTH,

Alex.


2024/09/03 13:14:11.467 kid1| 85,2| client_side_request.cc(758)
clientAccessCheckDone: The request CONNECT hexcelssp:443 is AUTH_REQUIRED; last ACL checked: block_user




On 2024-08-29 10:34, Piana, Josh wrote:
> Good morning Alex,
>
> I've added the following to my squid.conf file # logformat custom 
> %err_code/%err_detail # access_log daemon:/var/log/squid/access,log 
> custom
>
> I've also enabled debugging options:
> # debug_options ALL,9
>
> I've also cleaned up our ACL's to better reflect what is going on:
> # acl src_self src 127.0.0.0/8
> # acl src_self src 10.46.11.69
> # acl dst_self dst 127.0.0.0/8
> # acl dst_self dst 10.46.11.69
>
> # acl from_arc src 10.46.0.0/15
>
> # acl local_dst_addr dst 10.0.0.0/8
> # acl local_dst_addr dst 172.0.0.0/8
>
> When accessing internal devices via IP, it works.
> I think this is because of this ACL:
> # http_access           allow local_dst_addr
> # http_reply_access     allow local_dst_addr
>
> But when I access those same internal devices via hostname, it fails.
> I'm using this ACL, which I just created a separate file for:
> acl local_dst_dom dstdomain "etc/squid/local_dst_dom"
> http_access       allow local_dst_dom
> http_reply_access allow local_dst_dom
>
> I added an ACL file because I figure it will be more extensive than the more simple IP range ACL's.
> I've added a few local websites to the "local_dst_dom" list, but I'm unable to get this to resolve without using IP.
>
> For instance: "https://hexcelssp/" is the name of one of our internal websites for our company.
> This doesn't load under our current config but "https://10.96.14.174/" DOES load.
>
> I've added "hexnt2067" as well, which you can see me testing in the below logs.
> Again, this DOES work with its IP, 10.96.102.67.
>
> I'm not getting a proxy error message when I try to browse to that URL though, we just can't reach it.
>
> Here's the log results after enabling debugging and better log features:
>
> 29/Aug/2024:10:25:33 -0400.380 10.46.49.190 TCP_DENIED/407 4132 
> CONNECT hexcelssp:443 - HIER_NONE/- text/html
> 29/Aug/2024:10:25:33 -0400.515 10.46.49.190 NONE_NONE/500 0 CONNECT
> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
> 29/Aug/2024:10:25:39 -0400.799 10.46.49.190 TCP_TUNNEL/200 11716 
> CONNECT contile.services.mozilla.com:443 JPIANA at AD.<DOMAIN>.COM
> HIER_DIRECT/34.117.188.166 -
> 29/Aug/2024:10:26:05 -0400.507 10.46.49.190 TCP_DENIED/407 4474 GET 
> http://hexnt2067/sites/it/help/SitePages/Home.aspx - HIER_NONE/- 
> text/html
> 29/Aug/2024:10:26:05 -0400.646 10.46.49.190 TCP_MISS/500 8320 GET 
> http://hexnt2067/sites/it/help/SitePages/Home.aspx
> JPIANA at AD.<DOMAIN>.COM HIER_NONE/- text/html
> 29/Aug/2024:10:26:05 -0400.735 10.46.49.190 TCP_DENIED/403 4440 GET 
> http://arcga/
> te2.ad%2F&data=05%7C02%7Cjosh.piana%40hexcel.com%7C09078e3264324c317c6
> e08dccc58fcfe%7C4248050df19546d5ac9c0c7c52b04cae%7C0%7C0%7C63860992981
> 3620083%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLC
> JBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=ApuKveTxEh4lWJiyQw3D5A
> Uh9PWut1%2FyxniOr6l1RL4%3D&reserved=0.<domain>.com:8080/squid-internal
> -static/icons/SN.png - HIER_NONE/- text/html
> 29/Aug/2024:10:26:05 -0400.779 10.46.49.190 TCP_MISS_ABORTED/500 0 GET 
> http://hexnt2067/favicon.ico JPIANA at AD.<DOMAIN>.COM HIER_NONE/- 
> text/html
> 29/Aug/2024:10:27:13 -0400.036 10.46.49.190 TCP_DENIED/407 4474 GET 
> http://hexnt2067/sites/it/help/SitePages/Home.aspx - HIER_NONE/- 
> text/html
> 29/Aug/2024:10:27:13 -0400.227 10.46.49.190 TCP_MISS/500 8334 GET 
> http://hexnt2067/sites/it/help/SitePages/Home.aspx
> JPIANA at AD.<DOMAIN>.COM HIER_NONE/- text/html
> 29/Aug/2024:10:27:13 -0400.302 10.46.49.190 TCP_DENIED/403 4440 GET 
> http://arcga/
> te2.ad%2F&data=05%7C02%7Cjosh.piana%40hexcel.com%7C09078e3264324c317c6
> e08dccc58fcfe%7C4248050df19546d5ac9c0c7c52b04cae%7C0%7C0%7C63860992981
> 3620083%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLC
> JBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=ApuKveTxEh4lWJiyQw3D5A
> Uh9PWut1%2FyxniOr6l1RL4%3D&reserved=0.<domain>.com:8080/squid-internal
> -static/icons/SN.png - HIER_NONE/- text/html
> 29/Aug/2024:10:27:17 -0400.376 10.46.49.190 TCP_DENIED/407 4132 
> CONNECT hexcelssp:443 - HIER_NONE/- text/html
> 29/Aug/2024:10:27:17 -0400.514 10.46.49.190 NONE_NONE/500 0 CONNECT
> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
>
> I'm not sure the debugging and extra log details were added correctly, because these look the same.
>
> Thanks,
> Josh
>
>
> -----Original Message-----
> From: squid-users <squid-users-bounces at lists.squid-cache.org> On 
> Behalf Of Alex Rousskov
> Sent: Wednesday, August 28, 2024 4:01 PM
> To: squid-users at lists.squid-cache.org
> Subject: Re: [squid-users] Unable to access internal resources via 
> hostname
>
> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>
>
> On 2024-08-28 15:25, Piana, Josh wrote:
>
>> I now understand that Squid 5.5 ... is actually out of date as well.
>> I regret installing and working off of this because I jused assumed 
>> the "yum" install command for the Squid distro would give me the most 
>> recent, known-good, software. That's completely on me.
>
> Whether yum install installs something production-worthy today is between you and your Linux distro. Squid Project volunteers, including me, do no control what distribution you pick and what that distribution ships. The reason I mentioned v5 support status is to avoid creating a false impression that there are no _other_ (i.e. unreported by you on this thread) problems you may want to know about and to lower your expectations from the level of support you may get from Squid Project volunteers like me.
>
> Said that, I doubt the problem you are trying to solve is v5-specific.
> You may get better diagnostics if you run v6+, and you may receive fewer unusable (with v5) instructions if you run v6+, but the problem is likely to be present in a v6-based setup as well.
>
>
>>  From how I understand it, his intentions for internal users 
>> accessing internal resources, would skip authentication altogether.
>
> I assume that the problematic test that you want to fix is done using 
> "internal users". You have already stated that the test is accessing 
> "internal resources". Yet, we see that Squid asks the test client to 
> authenticate (TCP_DENIED/407). Thus,
>
> * either local_dst_dom, local_dst_addr, and authless_src ACLs do not 
> match test client transactions
>
> * or there is an authentication-triggering directive (e.g., "http_access deny block_user") located above a matching "http_access allow" rule that uses one of those ACLs three.
>
> Ideally, we should figure out which http_access rule matches the problematic transaction and triage from there. Unfortunately, Squid does not make that basic task easy. The best option I can think of is for you to share (privately if needed to avoid publishing sensitive info) a pointer to compressed cache.log file collected while reproducing the problem using a single test transaction after setting debug_options to ALL,9. Squid FAQ has a few hints about collecting relevant info:
> https://wiki/
> .squid-cache.org%2FSquidFaq%2FBugReporting%23debugging-a-single-transa
> ction&data=05%7C02%7Cjosh.piana%40hexcel.com%7C09078e3264324c317c6e08d
> ccc58fcfe%7C4248050df19546d5ac9c0c7c52b04cae%7C0%7C0%7C638609929813776
> 344%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTi
> I6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=D%2BSI8apBgbZJnJfqr0J5WMiP
> GtnmIVdrFDPfD1vL6mM%3D&reserved=0
>
> This "unexpected authentication" mystery may not be directly related to the "HTTP 500 error responses" mystery we discussed earlier, but it may help to fix authentication first.
>
>
> HTH,
>
> Alex.
>
>
>> Here's a small piece, with his notes included, of why I think that.
>>
>> ---------------------------------------------------------------------
>> -
>> --------------------------------------------------
>> #
>> ---------------------------------------------------------------------
>> -
>> ------
>> # allow without authentication
>> # these rules allow certain connects without user authentication # 
>> these allow any protocol/method/etc
>>
>> #                 ***** IMPORTANT *****
>> # Adding to these lists also exempts from all content filtering.
>> # In particular, executables will be allowed to download!
>> #                 ***** IMPORTANT *****
>>
>> # allow connects to local destinations without authentication # by 
>> domain name from URL
>> http_access       allow local_dst_dom
>> http_reply_access allow local_dst_dom
>>
>> # by IP address name resolves to
>> http_access       allow local_dst_addr
>> http_reply_access allow local_dst_addr
>> ---------------------------------------------------------------------
>> -
>> --------------------------------------------------
>>
>> The "http_access allow local_dst_dom" and the following reply statement seems to point toward his intentions when writing this.
>>
>> The only thing in the old config this was referencing was this, and to me, it doesn't make sense:
>> # acl local_dst_dom dstdomain arcgate
>>
>> It's worth noting that despite how awkward this seems, it DOES work. On the old web proxy we're currently still running live.
>>
>> I've gone as far as swapping out just the authentication settings and keeping the entire old config, but it still doesn't work.
>> I've setup a realmd/sssd/kerberos backend instead of Samba/Windbind that the old server uses.
>>
>> To state the issue we're having again - internal resources connecting to other internal resources fails via hostname, but works when using IP. I was able to troubleshoot and conclude DNS was not the issue, as all other aspects are working as intended and they certainly do use DNS. Also pings resolve using hostname from the new squidbox so that implies that DNS is working as expected.
>>
>> Ultimately, here's what I think we want, please feel free to poke holes in it:
>> Allow clients who are accessing other internal rersources to be able to browse to it using its hostname, without needing authentication first.
>>
>>
>> I do intend on adding those parameters you mentioned to the logs so I can get better details within. I also need to look into how to use the debugging features, I'm not familiar with it at all.
>>
>> I apologize for the wall of text, looking forward to what you guys have to say about this.
>>
>> Thanks,
>> Josh
>>
>> -----Original Message-----
>> From: squid-users <squid-users-bounces at lists.squid-cache.org> On 
>> Behalf Of Alex Rousskov
>> Sent: Wednesday, August 28, 2024 2:31 PM
>> To: squid-users at lists.squid-cache.org
>> Subject: Re: [squid-users] Unable to access internal resources via 
>> hostname
>>
>> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>>
>>
>> On 2024-08-28 14:18, Alex Rousskov wrote:
>>> On 2024-08-28 11:24, Piana, Josh wrote:
>>>
>>>> Here's the log and (I think) relevant ACL's?
>>>
>>> According to your access.log, Squid denies problematic CONNECT 
>>> requests with HTTP 407 errors responses. Usually, that means those 
>>> requests match an "http_access deny" rule. Clearly, you expect an 
>>> "allow" outcome instead, but it is difficult (for me) to figure out 
>>> where your expectations mismatch reality; there are no rules that 
>>> explicitly mention hexcelssp domain, for example: Which "http_access 
>>> allow" rule do you expect those denied requests to match?
>>
>> Sorry, I probably misinterpreted those access.log records: It looks like the denied (TCP_DENIED/407) access is something you actually expect because you want that test request to be authenticated. The client supplies the necessary credentials in the second request, and then that second request fails with a (rather generic) HTTP 500 error code, without contacting the origin server.
>>
>> I am guessing that you are concerned about that second request/transaction rather than the first one.
>>
>> Squid generates HTTP 500 errors for a variety of different reasons. Are there any messages in cache.log (at default debugging level) that correspond to these failing test transactions? If there are none, please add %err_code/%err_detail to your access_log logformat so that Squid logs more information about the problem to access.log (see logformat and access_log directives in squid.conf.documented for details).
>>
>>
>> Thank you,
>>
>> Alex.
>>
>>
>>
>>> Also, does mgr:ipcache cache manager query confirm that Squid has 
>>> read your /etc/hosts file and cached the record you expect it to use?
>>>
>>> Alex.
>>>
>>>
>>>> -------------------------------------------------------------------
>>>> -
>>>> -
>>>> --------------------------------------
>>>> # /var/log/squid/access.log results for internal conflicts
>>>>
>>>> 28/Aug/2024:10:57:17 -0400.234 10.46.49.190 TCP_DENIED/407 4132 
>>>> CONNECT hexcelssp:443 - HIER_NONE/- text/html
>>>> 28/Aug/2024:10:57:17 -0400.253 10.46.49.190 NONE_NONE/500 0 CONNECT
>>>> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
>>>> 28/Aug/2024:10:57:17 -0400.380 10.46.49.190 TCP_DENIED/407 4132 
>>>> CONNECT hexcelssp:443 - HIER_NONE/- text/html
>>>> 28/Aug/2024:10:57:17 -0400.399 10.46.49.190 NONE_NONE/500 0 CONNECT
>>>> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
>>>> -------------------------------------------------------------------
>>>> -
>>>> -
>>>> --------------------------------------
>>>>
>>>> # acl all src all
>>>>
>>>> acl src_self src 127.0.0.0/8
>>>> acl src_self src 10.46.11.69
>>>>
>>>> acl dst_self dst 127.0.0.0/8
>>>> acl dst_self dst 10.46.11.69
>>>>
>>>> acl from_arc src 10.46.0.0/15
>>>>
>>>> acl local_dst_addr dst 10.0.0.0/8
>>>> acl local_dst_addr dst 172.0.0.0/8
>>>> acl local_dst_addr dst bldg3.<domain>.com acl local_dst_addr dst 
>>>> bldg5.<domain>.com
>>>>
>>>> # these keep URLs of popular local servers from being forwarded acl 
>>>> local_dst_dom dstdomain arcgate
>>>>
>>>> # allow connects to local destinations without authentication # by 
>>>> domain name from URL
>>>> http_access       allow local_dst_dom
>>>> http_reply_access allow local_dst_dom
>>>>
>>>> # by IP address name resolves to
>>>> http_access       allow local_dst_addr
>>>> http_reply_access allow local_dst_addr
>>>>
>>>> # allow trusted hosts without authentication # these are just ip's 
>>>> on the 10.46.11.x network acl authless_src src "/etc/squid/authless_src"
>>>> http_access       allow authless_src
>>>> http_reply_access allow authless_src
>>>> -------------------------------------------------------------------
>>>> -
>>>> -
>>>> --------------------------------------
>>>>
>>>> -----Original Message-----
>>>> From: squid-users <squid-users-bounces at lists.squid-cache.org> On 
>>>> Behalf Of Matus UHLAR - fantomas
>>>> Sent: Wednesday, August 28, 2024 10:47 AM
>>>> To: squid-users at lists.squid-cache.org
>>>> Subject: Re: [squid-users] Unable to access internal resources via 
>>>> hostname
>>>>
>>>> Caution: This email originated from outside of Hexcel. Do not click 
>>>> links or open attachments unless you recognize the sender and know 
>>>> the content is safe.
>>>>
>>>>
>>>> On 28.08.24 14:20, Piana, Josh wrote:
>>>>> Hello Squid Support,
>>>>
>>>> This squid user forum FYI
>>>>
>>>>> We are unable to get to internal resources via hostname but using 
>>>>> the IP address works fine.  Immediately, I thought this was DNS 
>>>>> but when I checked the /etc/resolv.conf/ file it was pointing 
>>>>> correctly to our Windows DNS server and we can ping all devices 
>>>>> using their hostname, just not when browsing to it.  This leads me 
>>>>> to believe something may be wrong with our squid config.
>>>>
>>>> hard to guess without seeing logs or ACL's.
>>>>
>>>>
>>>> --
>>>> Matus UHLAR - fantomas, uhlar at fantomas.sk ; http://www/.
>>>> fantomas.sk%2F&data=05%7C02%7Cjosh.piana%40hexcel.com%7C2db72264caa
>>>> 0
>>>> 4
>>>> f1fd80d08dcc78f9245%7C4248050df19546d5ac9c0c7c52b04cae%7C0%7C0%7C63
>>>> 8
>>>> 6
>>>> 04666668859787%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoi
>>>> V
>>>> 2
>>>> luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=Z7cUEdNvInD
>>>> A
>>>> J
>>>> PwgQJhXWSK3H2mkAPe4CNcfYJFyy6M%3D&reserved=0
>>>> Warning: I wish NOT to receive e-mail advertising to this address.
>>>> Varovanie: na tuto adresu chcem NEDOSTAVAT akukolvek reklamnu postu.
>>>> It's now safe to throw off your computer.
>>>> _______________________________________________
>>>> squid-users mailing list
>>>> squid-users at lists.squid-cache.org
>>>> https://lis/
>>>> ts.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.pia
>>>> n
>>>> a
>>>> %40hexcel.com%7C2db72264caa04f1fd80d08dcc78f9245%7C4248050df19546d5
>>>> a
>>>> c
>>>> 9c0c7c52b04cae%7C0%7C0%7C638604666674016161%7CUnknown%7CTWFpbGZsb3d
>>>> 8
>>>> e
>>>> yJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7
>>>> C
>>>> 0
>>>> %7C%7C%7C&sdata=%2B%2B7inZxg2LEmB2KFVWmtn64FG8SwHpEZeEyAjhNClnU%3D&
>>>> r
>>>> e
>>>> served=0 _______________________________________________
>>>> squid-users mailing list
>>>> squid-users at lists.squid-cache.org
>>>> https://lis/
>>>> ts.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.pia
>>>> n
>>>> a
>>>> %40hexcel.com%7C2db72264caa04f1fd80d08dcc78f9245%7C4248050df19546d5
>>>> a
>>>> c
>>>> 9c0c7c52b04cae%7C0%7C0%7C638604666674016161%7CUnknown%7CTWFpbGZsb3d
>>>> 8
>>>> e
>>>> yJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7
>>>> C
>>>> 0
>>>> %7C%7C%7C&sdata=%2B%2B7inZxg2LEmB2KFVWmtn64FG8SwHpEZeEyAjhNClnU%3D&
>>>> r
>>>> e
>>>> served=0
>>>
>>> _______________________________________________
>>> squid-users mailing list
>>> squid-users at lists.squid-cache.org
>>> https://list/
>>> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana
>>> %
>>> 4
>>> 0hexcel.com%7C2db72264caa04f1fd80d08dcc78f9245%7C4248050df19546d5ac9
>>> c
>>> 0
>>> c7c52b04cae%7C0%7C0%7C638604666674016161%7CUnknown%7CTWFpbGZsb3d8eyJ
>>> W
>>> I
>>> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C
>>> %
>>> 7
>>> C%7C&sdata=%2B%2B7inZxg2LEmB2KFVWmtn64FG8SwHpEZeEyAjhNClnU%3D&reserv
>>> e
>>> d
>>> =0
>>
>> _______________________________________________
>> squid-users mailing list
>> squid-users at lists.squid-cache.org
>> https://list/
>> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana%
>> 4
>> 0hexcel.com%7C6f7f2ea035ca4506507008dcc79c3598%7C4248050df19546d5ac9c
>> 0
>> c7c52b04cae%7C0%7C0%7C638604720952164544%7CUnknown%7CTWFpbGZsb3d8eyJW
>> I
>> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%
>> 7
>> C%7C&sdata=RrdtLQu5y421WIi6vjyxj1ZsNRdIn%2FMaKusbjKGoY48%3D&reserved=
>> 0 _______________________________________________
>> squid-users mailing list
>> squid-users at lists.squid-cache.org
>> https://list/
>> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana%
>> 4
>> 0hexcel.com%7C6f7f2ea035ca4506507008dcc79c3598%7C4248050df19546d5ac9c
>> 0
>> c7c52b04cae%7C0%7C0%7C638604720952164544%7CUnknown%7CTWFpbGZsb3d8eyJW
>> I
>> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%
>> 7
>> C%7C&sdata=RrdtLQu5y421WIi6vjyxj1ZsNRdIn%2FMaKusbjKGoY48%3D&reserved=
>> 0
>
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://list/
> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana%4
> 0hexcel.com%7C09078e3264324c317c6e08dccc58fcfe%7C4248050df19546d5ac9c0
> c7c52b04cae%7C0%7C0%7C638609929813776344%7CUnknown%7CTWFpbGZsb3d8eyJWI
> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7
> C%7C&sdata=znly2yhZPJNncjZ7A6npfy%2FOZmxAE47vHp0vspgZKgw%3D&reserved=0
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://list/
> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana%4
> 0hexcel.com%7C09078e3264324c317c6e08dccc58fcfe%7C4248050df19546d5ac9c0
> c7c52b04cae%7C0%7C0%7C638609929813776344%7CUnknown%7CTWFpbGZsb3d8eyJWI
> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7
> C%7C&sdata=znly2yhZPJNncjZ7A6npfy%2FOZmxAE47vHp0vspgZKgw%3D&reserved=0

_______________________________________________
squid-users mailing list
squid-users at lists.squid-cache.org
https://lists.squid-cache.org/listinfo/squid-users
_______________________________________________
squid-users mailing list
squid-users at lists.squid-cache.org
https://lists.squid-cache.org/listinfo/squid-users


From rousskov at measurement-factory.com  Wed Sep  4 19:16:19 2024
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Wed, 4 Sep 2024 15:16:19 -0400
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <538ebdbdf0074bc4bcc04e0c923983a8@hexcel.com>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <Zs84drvoIpZ1f6DR@fantomas.sk> <58bdfaada3fa46d0938b7346ec04c336@hexcel.com>
 <947309fa-d1fc-4a75-ac49-ea7bc5c5ff12@measurement-factory.com>
 <faffca37-fa59-46ff-80e4-245c37fa90b9@measurement-factory.com>
 <c00942c1c8ab46b5b393d70f32346798@hexcel.com>
 <59274673-47e9-431d-ad45-7fa3a5a8ebca@measurement-factory.com>
 <d063bef52efd4e32a9f9bb27f934e673@hexcel.com>
 <e35fb7b1-12ce-41b8-83c1-51a208739127@measurement-factory.com>
 <538ebdbdf0074bc4bcc04e0c923983a8@hexcel.com>
Message-ID: <7de91a21-c43c-4b1a-8adf-3e50c0f20017@measurement-factory.com>

On 2024-09-04 12:25, Piana, Josh wrote:

> That's REALLY strange that its getting blocked by "http_access deny
> block_user". That's an ACL that is supposed to just deny "known good"
> users that we don't want to have access to the user proxy. This ACL
> references the "block_user" list which includes guest accounts,
> vender accounts, and a few users. The account I'm testing with,
> "jpiana" is not on that list. I wonder why I'm getting filtered here
> and not the very bottom of the squid.conf where we have the
> "http_access deny all" ACL.

I know a lot of things have changed since you wrote the above, but I 
wanted to answer that still-relevant question: The test transaction gets 
an HTTP 407 response not because its client name matches a block_user 
ACL entry. The test transaction gets an HTTP 407 response because the 
user has not authenticated itself -- Squid sends HTTP 407 response to 
request authentication.

If you are still having problems after changing the test proxy and its 
configuration (as you discussed in your recent posts), please restate 
the primary problem and share debugging log of a test transaction again.


Cheers,

Alex.



> Maybe the order of my ACL's is wrong?
> 
> In regards to the "local_dst_dom", I've setup a a list here under this path:  "/etc/squid/local_dst_dom", to immitate the other ACL rules. When I added the ".hexcelssp.com" address to this list, it failed to work. Most likely because this isn't a domain.
> 
> FWIW, I just want ad.arc-tech.com devices to be allowed to reach all other ad.arc-tech.com devices via hostname. I'm willing to remove any other ACL that's getting in the way of that in order to make this work. This whole config that we have has been pieced together and I'd like to get it to the way it's supposed to be.
> 
> What do you recommend? I can send the whole config again, exactly as we have it now, and see what we can fix/remove/replace.
> 
> Appreicate you helping,
> Josh
> 
> -----Original Message-----
> From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of Alex Rousskov
> Sent: Tuesday, September 3, 2024 4:43 PM
> To: squid-users at lists.squid-cache.org
> Subject: Re: [squid-users] Unable to access internal resources via hostname
> 
> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
> 
> 
> Hi Josh,
> 
>       Thank you for sharing debugging logs. "CONNECT hexcelssp"
> transaction is being denied by the following rule:
> 
>       http_access deny block_user
> 
> None of the ~10 http_access rules above the quoted one matched. Which of those rules do you expect to match that "CONNECT hexcelssp" request (_before_ the rule quoted above denies the request and asks the client to authenticate)? I suspect it is the local_dst_dom rule.
> 
> local_dst_dom ACL will not match this transaction. You have changed the definition of that ACL from a hard-coded (in squid.conf) "arcgate" name to an unknown to me set of names inside "etc/squid/local_dst_dom" file.
> I wonder whether that file path is correct: Did you mean that path to be relative (i.e. "etc...") rather than absolute (i.e. "/etc...")? Try using an absolute path and double check that the file contains "hexcelssp" name.
> 
> 
> HTH,
> 
> Alex.
> 
> 
> 2024/09/03 13:14:11.467 kid1| 85,2| client_side_request.cc(758)
> clientAccessCheckDone: The request CONNECT hexcelssp:443 is AUTH_REQUIRED; last ACL checked: block_user
> 
> 
> 
> 
> On 2024-08-29 10:34, Piana, Josh wrote:
>> Good morning Alex,
>>
>> I've added the following to my squid.conf file # logformat custom
>> %err_code/%err_detail # access_log daemon:/var/log/squid/access,log
>> custom
>>
>> I've also enabled debugging options:
>> # debug_options ALL,9
>>
>> I've also cleaned up our ACL's to better reflect what is going on:
>> # acl src_self src 127.0.0.0/8
>> # acl src_self src 10.46.11.69
>> # acl dst_self dst 127.0.0.0/8
>> # acl dst_self dst 10.46.11.69
>>
>> # acl from_arc src 10.46.0.0/15
>>
>> # acl local_dst_addr dst 10.0.0.0/8
>> # acl local_dst_addr dst 172.0.0.0/8
>>
>> When accessing internal devices via IP, it works.
>> I think this is because of this ACL:
>> # http_access           allow local_dst_addr
>> # http_reply_access     allow local_dst_addr
>>
>> But when I access those same internal devices via hostname, it fails.
>> I'm using this ACL, which I just created a separate file for:
>> acl local_dst_dom dstdomain "etc/squid/local_dst_dom"
>> http_access       allow local_dst_dom
>> http_reply_access allow local_dst_dom
>>
>> I added an ACL file because I figure it will be more extensive than the more simple IP range ACL's.
>> I've added a few local websites to the "local_dst_dom" list, but I'm unable to get this to resolve without using IP.
>>
>> For instance: "https://hexcelssp/" is the name of one of our internal websites for our company.
>> This doesn't load under our current config but "https://10.96.14.174/" DOES load.
>>
>> I've added "hexnt2067" as well, which you can see me testing in the below logs.
>> Again, this DOES work with its IP, 10.96.102.67.
>>
>> I'm not getting a proxy error message when I try to browse to that URL though, we just can't reach it.
>>
>> Here's the log results after enabling debugging and better log features:
>>
>> 29/Aug/2024:10:25:33 -0400.380 10.46.49.190 TCP_DENIED/407 4132
>> CONNECT hexcelssp:443 - HIER_NONE/- text/html
>> 29/Aug/2024:10:25:33 -0400.515 10.46.49.190 NONE_NONE/500 0 CONNECT
>> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
>> 29/Aug/2024:10:25:39 -0400.799 10.46.49.190 TCP_TUNNEL/200 11716
>> CONNECT contile.services.mozilla.com:443 JPIANA at AD.<DOMAIN>.COM
>> HIER_DIRECT/34.117.188.166 -
>> 29/Aug/2024:10:26:05 -0400.507 10.46.49.190 TCP_DENIED/407 4474 GET
>> http://hexnt2067/sites/it/help/SitePages/Home.aspx - HIER_NONE/-
>> text/html
>> 29/Aug/2024:10:26:05 -0400.646 10.46.49.190 TCP_MISS/500 8320 GET
>> http://hexnt2067/sites/it/help/SitePages/Home.aspx
>> JPIANA at AD.<DOMAIN>.COM HIER_NONE/- text/html
>> 29/Aug/2024:10:26:05 -0400.735 10.46.49.190 TCP_DENIED/403 4440 GET
>> http://arcga/
>> te2.ad%2F&data=05%7C02%7Cjosh.piana%40hexcel.com%7C09078e3264324c317c6
>> e08dccc58fcfe%7C4248050df19546d5ac9c0c7c52b04cae%7C0%7C0%7C63860992981
>> 3620083%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLC
>> JBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=ApuKveTxEh4lWJiyQw3D5A
>> Uh9PWut1%2FyxniOr6l1RL4%3D&reserved=0.<domain>.com:8080/squid-internal
>> -static/icons/SN.png - HIER_NONE/- text/html
>> 29/Aug/2024:10:26:05 -0400.779 10.46.49.190 TCP_MISS_ABORTED/500 0 GET
>> http://hexnt2067/favicon.ico JPIANA at AD.<DOMAIN>.COM HIER_NONE/-
>> text/html
>> 29/Aug/2024:10:27:13 -0400.036 10.46.49.190 TCP_DENIED/407 4474 GET
>> http://hexnt2067/sites/it/help/SitePages/Home.aspx - HIER_NONE/-
>> text/html
>> 29/Aug/2024:10:27:13 -0400.227 10.46.49.190 TCP_MISS/500 8334 GET
>> http://hexnt2067/sites/it/help/SitePages/Home.aspx
>> JPIANA at AD.<DOMAIN>.COM HIER_NONE/- text/html
>> 29/Aug/2024:10:27:13 -0400.302 10.46.49.190 TCP_DENIED/403 4440 GET
>> http://arcga/
>> te2.ad%2F&data=05%7C02%7Cjosh.piana%40hexcel.com%7C09078e3264324c317c6
>> e08dccc58fcfe%7C4248050df19546d5ac9c0c7c52b04cae%7C0%7C0%7C63860992981
>> 3620083%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLC
>> JBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=ApuKveTxEh4lWJiyQw3D5A
>> Uh9PWut1%2FyxniOr6l1RL4%3D&reserved=0.<domain>.com:8080/squid-internal
>> -static/icons/SN.png - HIER_NONE/- text/html
>> 29/Aug/2024:10:27:17 -0400.376 10.46.49.190 TCP_DENIED/407 4132
>> CONNECT hexcelssp:443 - HIER_NONE/- text/html
>> 29/Aug/2024:10:27:17 -0400.514 10.46.49.190 NONE_NONE/500 0 CONNECT
>> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
>>
>> I'm not sure the debugging and extra log details were added correctly, because these look the same.
>>
>> Thanks,
>> Josh
>>
>>
>> -----Original Message-----
>> From: squid-users <squid-users-bounces at lists.squid-cache.org> On
>> Behalf Of Alex Rousskov
>> Sent: Wednesday, August 28, 2024 4:01 PM
>> To: squid-users at lists.squid-cache.org
>> Subject: Re: [squid-users] Unable to access internal resources via
>> hostname
>>
>> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>>
>>
>> On 2024-08-28 15:25, Piana, Josh wrote:
>>
>>> I now understand that Squid 5.5 ... is actually out of date as well.
>>> I regret installing and working off of this because I jused assumed
>>> the "yum" install command for the Squid distro would give me the most
>>> recent, known-good, software. That's completely on me.
>>
>> Whether yum install installs something production-worthy today is between you and your Linux distro. Squid Project volunteers, including me, do no control what distribution you pick and what that distribution ships. The reason I mentioned v5 support status is to avoid creating a false impression that there are no _other_ (i.e. unreported by you on this thread) problems you may want to know about and to lower your expectations from the level of support you may get from Squid Project volunteers like me.
>>
>> Said that, I doubt the problem you are trying to solve is v5-specific.
>> You may get better diagnostics if you run v6+, and you may receive fewer unusable (with v5) instructions if you run v6+, but the problem is likely to be present in a v6-based setup as well.
>>
>>
>>>   From how I understand it, his intentions for internal users
>>> accessing internal resources, would skip authentication altogether.
>>
>> I assume that the problematic test that you want to fix is done using
>> "internal users". You have already stated that the test is accessing
>> "internal resources". Yet, we see that Squid asks the test client to
>> authenticate (TCP_DENIED/407). Thus,
>>
>> * either local_dst_dom, local_dst_addr, and authless_src ACLs do not
>> match test client transactions
>>
>> * or there is an authentication-triggering directive (e.g., "http_access deny block_user") located above a matching "http_access allow" rule that uses one of those ACLs three.
>>
>> Ideally, we should figure out which http_access rule matches the problematic transaction and triage from there. Unfortunately, Squid does not make that basic task easy. The best option I can think of is for you to share (privately if needed to avoid publishing sensitive info) a pointer to compressed cache.log file collected while reproducing the problem using a single test transaction after setting debug_options to ALL,9. Squid FAQ has a few hints about collecting relevant info:
>> https://wiki/
>> .squid-cache.org%2FSquidFaq%2FBugReporting%23debugging-a-single-transa
>> ction&data=05%7C02%7Cjosh.piana%40hexcel.com%7C09078e3264324c317c6e08d
>> ccc58fcfe%7C4248050df19546d5ac9c0c7c52b04cae%7C0%7C0%7C638609929813776
>> 344%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTi
>> I6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=D%2BSI8apBgbZJnJfqr0J5WMiP
>> GtnmIVdrFDPfD1vL6mM%3D&reserved=0
>>
>> This "unexpected authentication" mystery may not be directly related to the "HTTP 500 error responses" mystery we discussed earlier, but it may help to fix authentication first.
>>
>>
>> HTH,
>>
>> Alex.
>>
>>
>>> Here's a small piece, with his notes included, of why I think that.
>>>
>>> ---------------------------------------------------------------------
>>> -
>>> --------------------------------------------------
>>> #
>>> ---------------------------------------------------------------------
>>> -
>>> ------
>>> # allow without authentication
>>> # these rules allow certain connects without user authentication #
>>> these allow any protocol/method/etc
>>>
>>> #                 ***** IMPORTANT *****
>>> # Adding to these lists also exempts from all content filtering.
>>> # In particular, executables will be allowed to download!
>>> #                 ***** IMPORTANT *****
>>>
>>> # allow connects to local destinations without authentication # by
>>> domain name from URL
>>> http_access       allow local_dst_dom
>>> http_reply_access allow local_dst_dom
>>>
>>> # by IP address name resolves to
>>> http_access       allow local_dst_addr
>>> http_reply_access allow local_dst_addr
>>> ---------------------------------------------------------------------
>>> -
>>> --------------------------------------------------
>>>
>>> The "http_access allow local_dst_dom" and the following reply statement seems to point toward his intentions when writing this.
>>>
>>> The only thing in the old config this was referencing was this, and to me, it doesn't make sense:
>>> # acl local_dst_dom dstdomain arcgate
>>>
>>> It's worth noting that despite how awkward this seems, it DOES work. On the old web proxy we're currently still running live.
>>>
>>> I've gone as far as swapping out just the authentication settings and keeping the entire old config, but it still doesn't work.
>>> I've setup a realmd/sssd/kerberos backend instead of Samba/Windbind that the old server uses.
>>>
>>> To state the issue we're having again - internal resources connecting to other internal resources fails via hostname, but works when using IP. I was able to troubleshoot and conclude DNS was not the issue, as all other aspects are working as intended and they certainly do use DNS. Also pings resolve using hostname from the new squidbox so that implies that DNS is working as expected.
>>>
>>> Ultimately, here's what I think we want, please feel free to poke holes in it:
>>> Allow clients who are accessing other internal rersources to be able to browse to it using its hostname, without needing authentication first.
>>>
>>>
>>> I do intend on adding those parameters you mentioned to the logs so I can get better details within. I also need to look into how to use the debugging features, I'm not familiar with it at all.
>>>
>>> I apologize for the wall of text, looking forward to what you guys have to say about this.
>>>
>>> Thanks,
>>> Josh
>>>
>>> -----Original Message-----
>>> From: squid-users <squid-users-bounces at lists.squid-cache.org> On
>>> Behalf Of Alex Rousskov
>>> Sent: Wednesday, August 28, 2024 2:31 PM
>>> To: squid-users at lists.squid-cache.org
>>> Subject: Re: [squid-users] Unable to access internal resources via
>>> hostname
>>>
>>> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>>>
>>>
>>> On 2024-08-28 14:18, Alex Rousskov wrote:
>>>> On 2024-08-28 11:24, Piana, Josh wrote:
>>>>
>>>>> Here's the log and (I think) relevant ACL's?
>>>>
>>>> According to your access.log, Squid denies problematic CONNECT
>>>> requests with HTTP 407 errors responses. Usually, that means those
>>>> requests match an "http_access deny" rule. Clearly, you expect an
>>>> "allow" outcome instead, but it is difficult (for me) to figure out
>>>> where your expectations mismatch reality; there are no rules that
>>>> explicitly mention hexcelssp domain, for example: Which "http_access
>>>> allow" rule do you expect those denied requests to match?
>>>
>>> Sorry, I probably misinterpreted those access.log records: It looks like the denied (TCP_DENIED/407) access is something you actually expect because you want that test request to be authenticated. The client supplies the necessary credentials in the second request, and then that second request fails with a (rather generic) HTTP 500 error code, without contacting the origin server.
>>>
>>> I am guessing that you are concerned about that second request/transaction rather than the first one.
>>>
>>> Squid generates HTTP 500 errors for a variety of different reasons. Are there any messages in cache.log (at default debugging level) that correspond to these failing test transactions? If there are none, please add %err_code/%err_detail to your access_log logformat so that Squid logs more information about the problem to access.log (see logformat and access_log directives in squid.conf.documented for details).
>>>
>>>
>>> Thank you,
>>>
>>> Alex.
>>>
>>>
>>>
>>>> Also, does mgr:ipcache cache manager query confirm that Squid has
>>>> read your /etc/hosts file and cached the record you expect it to use?
>>>>
>>>> Alex.
>>>>
>>>>
>>>>> -------------------------------------------------------------------
>>>>> -
>>>>> -
>>>>> --------------------------------------
>>>>> # /var/log/squid/access.log results for internal conflicts
>>>>>
>>>>> 28/Aug/2024:10:57:17 -0400.234 10.46.49.190 TCP_DENIED/407 4132
>>>>> CONNECT hexcelssp:443 - HIER_NONE/- text/html
>>>>> 28/Aug/2024:10:57:17 -0400.253 10.46.49.190 NONE_NONE/500 0 CONNECT
>>>>> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
>>>>> 28/Aug/2024:10:57:17 -0400.380 10.46.49.190 TCP_DENIED/407 4132
>>>>> CONNECT hexcelssp:443 - HIER_NONE/- text/html
>>>>> 28/Aug/2024:10:57:17 -0400.399 10.46.49.190 NONE_NONE/500 0 CONNECT
>>>>> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
>>>>> -------------------------------------------------------------------
>>>>> -
>>>>> -
>>>>> --------------------------------------
>>>>>
>>>>> # acl all src all
>>>>>
>>>>> acl src_self src 127.0.0.0/8
>>>>> acl src_self src 10.46.11.69
>>>>>
>>>>> acl dst_self dst 127.0.0.0/8
>>>>> acl dst_self dst 10.46.11.69
>>>>>
>>>>> acl from_arc src 10.46.0.0/15
>>>>>
>>>>> acl local_dst_addr dst 10.0.0.0/8
>>>>> acl local_dst_addr dst 172.0.0.0/8
>>>>> acl local_dst_addr dst bldg3.<domain>.com acl local_dst_addr dst
>>>>> bldg5.<domain>.com
>>>>>
>>>>> # these keep URLs of popular local servers from being forwarded acl
>>>>> local_dst_dom dstdomain arcgate
>>>>>
>>>>> # allow connects to local destinations without authentication # by
>>>>> domain name from URL
>>>>> http_access       allow local_dst_dom
>>>>> http_reply_access allow local_dst_dom
>>>>>
>>>>> # by IP address name resolves to
>>>>> http_access       allow local_dst_addr
>>>>> http_reply_access allow local_dst_addr
>>>>>
>>>>> # allow trusted hosts without authentication # these are just ip's
>>>>> on the 10.46.11.x network acl authless_src src "/etc/squid/authless_src"
>>>>> http_access       allow authless_src
>>>>> http_reply_access allow authless_src
>>>>> -------------------------------------------------------------------
>>>>> -
>>>>> -
>>>>> --------------------------------------
>>>>>
>>>>> -----Original Message-----
>>>>> From: squid-users <squid-users-bounces at lists.squid-cache.org> On
>>>>> Behalf Of Matus UHLAR - fantomas
>>>>> Sent: Wednesday, August 28, 2024 10:47 AM
>>>>> To: squid-users at lists.squid-cache.org
>>>>> Subject: Re: [squid-users] Unable to access internal resources via
>>>>> hostname
>>>>>
>>>>> Caution: This email originated from outside of Hexcel. Do not click
>>>>> links or open attachments unless you recognize the sender and know
>>>>> the content is safe.
>>>>>
>>>>>
>>>>> On 28.08.24 14:20, Piana, Josh wrote:
>>>>>> Hello Squid Support,
>>>>>
>>>>> This squid user forum FYI
>>>>>
>>>>>> We are unable to get to internal resources via hostname but using
>>>>>> the IP address works fine.  Immediately, I thought this was DNS
>>>>>> but when I checked the /etc/resolv.conf/ file it was pointing
>>>>>> correctly to our Windows DNS server and we can ping all devices
>>>>>> using their hostname, just not when browsing to it.  This leads me
>>>>>> to believe something may be wrong with our squid config.
>>>>>
>>>>> hard to guess without seeing logs or ACL's.
>>>>>
>>>>>
>>>>> --
>>>>> Matus UHLAR - fantomas, uhlar at fantomas.sk 


From squid3 at treenet.co.nz  Thu Sep  5 01:22:54 2024
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Thu, 5 Sep 2024 13:22:54 +1200
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <4537b23c7a534cd3a716ffd4f8471f5e@hexcel.com>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <Zs84drvoIpZ1f6DR@fantomas.sk> <58bdfaada3fa46d0938b7346ec04c336@hexcel.com>
 <947309fa-d1fc-4a75-ac49-ea7bc5c5ff12@measurement-factory.com>
 <faffca37-fa59-46ff-80e4-245c37fa90b9@measurement-factory.com>
 <c00942c1c8ab46b5b393d70f32346798@hexcel.com>
 <59274673-47e9-431d-ad45-7fa3a5a8ebca@measurement-factory.com>
 <d063bef52efd4e32a9f9bb27f934e673@hexcel.com>
 <e35fb7b1-12ce-41b8-83c1-51a208739127@measurement-factory.com>
 <f7ca72b579474cc184e22dfd6ef55683@hexcel.com>
 <4537b23c7a534cd3a716ffd4f8471f5e@hexcel.com>
Message-ID: <c4ae0610-b8b2-4a26-bed9-8cd1bf2b6901@treenet.co.nz>

Hi Josh,


There are two things I can see in the original message:

1) trusted *clients* (acl authless_src src ...) are documented as being 
limited to the 10.46.11.0/24 range.
  The client testing is outside, in the 10.46.49.190 IP address.

  ==> Please check your authless_src list is correct.


2) The CONNECT request has zero dots in the "domain" name. Which means 
the /etc/resolv.conf settings other than nameserver apply to the 
hostname during lookup.

  ==> Please supply your /etc/resolv.conf contents.


HTH
Amos



From nozomi.yamaguchi.t2 at jalinfotec.co.jp  Thu Sep  5 05:52:41 2024
From: nozomi.yamaguchi.t2 at jalinfotec.co.jp (YAMAGUCHI NOZOMI (JIT ICC))
Date: Thu, 5 Sep 2024 14:52:41 +0900
Subject: [squid-users] squid5.5 restart failure due to domain list
 duplication
Message-ID: <CAE6tmh8=+VUUUge_e-FFe3sLKhm-Q2eLK7KBSLsETBhYzzSRNw@mail.gmail.com>

To whom it may concern,

If there were duplicate domains in the list of domains used, restarting the
squid would cause the process to stop.
Below is the error statement.
ERROR: 'a.example.com' is a subdomain of 'example.com
FATAL: /etc/squid/squid.conf
I don't think the same thing happened with my previous squid3.5.

I have a few questions.
?Is it possible to configure the process not to stop even if there are
duplicates in the domain list?
?Are there any other user actions besides duplicate domains that would
trigger a process stop?

Any pointers would be really helpful.

Thanks in advance.

Regards,
Nichole
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240905/cb1965a2/attachment.htm>

From taku0919.taku at gmail.com  Thu Sep  5 08:58:41 2024
From: taku0919.taku at gmail.com (=?UTF-8?B?44Gr44Gw?=)
Date: Thu, 5 Sep 2024 17:58:41 +0900
Subject: [squid-users] Questions about Squid configuration
In-Reply-To: <c6889a69-d559-4180-ae27-5083e850329b@measurement-factory.com>
References: <CAK0+96e5Wpq3LpE4pf8k38nUpsmg+nyyocbOmnXS6=fqR+3C0g@mail.gmail.com>
 <add1024b-da05-46ba-9574-fd8048ec4fa1@measurement-factory.com>
 <CAK0+96eD+B2c_Fa3TpjE5E89WPsY-VaNadDSHK1ritgemkjrTw@mail.gmail.com>
 <c6889a69-d559-4180-ae27-5083e850329b@measurement-factory.com>
Message-ID: <CAK0+96dnXhvu6LyCrULcWfO0uxAiDDKaMm3Kj6a2BkS69yR5Hw@mail.gmail.com>

Hi Alex

Thanks for the reply !

I took the advice I received, reviewed the verification details, and
verified again with the two recommended steps.
The new verification includes the following four patterns:
1. successful communication of a valid request to an allowed site
[command]
curl https://pypi.org/ -v --cacert squid.crt -k

2. communication of invalid requests to allowed sites is denied
[command] ?Invalid header host
curl https://pypi.org/ -H "Host: www.yahoo.co.jp" -v --cacert squid.crt -k

3. communication of valid requests to prohibited sites is denied
[command]
curl https://www.yahoo.co.jp/ -v --cacert squid.crt -k

4. communication of invalid requests to prohibited sites is denied
[command]
curl https://www.yahoo.co.jp/ -H "Host:" -v --cacert squid.crt -k


STEP?
?1. Remove all of your current http_access rules. Keep ACLs. Perform
?host_verify_strict and access tests to confirm that all valid requests
?are denied and all invalid requests are rejected. If necessary, ask
?questions, file bug reports, patch Squid, and/or adjust your
?configuration to pass this test.

?Results for validation patterns
??403 Forbidden?X-Squid-Error: ERR_ACCESS_DENIED 0
??403 Forbidden?X-Squid-Error: ERR_ACCESS_DENIED 0
??403 Forbidden?X-Squid-Error: ERR_ACCESS_DENIED 0
??403 Forbidden?X-Squid-Error: ERR_ACCESS_DENIED 0

STEP?
?2. Copy http_access rules, with comments, from generated
?squid.conf.default. Insert your own access rules in the location marked
?by "INSERT YOUR OWN RULE(S) HERE" comment. Perform host_verify_strict
?and access tests to confirm that all valid requests to banned sites are
?denied, all other valid requests are allowed, and all invalid requests
?are rejected. If necessary, ask questions, file bug reports, patch
?Squid, and/or adjust your configuration to pass this test.

?Results for validation patterns
??200 OK
??409 Conflict?X-Squid-Error: ERR_CONFLICT_HOST 0
??409 Conflict?X-Squid-Error: ERR_CONFLICT_HOST 0
??200 OK

So my question is, in STEP 1.
?I expected to get a different response for a valid request than for
an invalid request, is this result correct?
In STEP 2.
?4. still returns 200 OK. Is this due to an error in the existing
configuration? Or do I need to add a new setting?

I am not a good English, so I may not have understood Alex's advice exactly.
If there are still mistakes, please point them out to me.

Thank you in advance.

2024?8?30?(?) 22:27 Alex Rousskov <rousskov at measurement-factory.com>:
>
> On 2024-08-29 22:28, ?? wrote:
>
> > With the newly reviewed configuration in the attachment
>
> OT: Please note that your configuration does not follow the recommended
> http_access rules order template in squid.conf.default and might,
> depending on your deployment environment, allow Squid to be used for
> attacks on 3rd party resources (e.g., ssh services). This observation is
> not related to your primary question and your "ban certain sites" goal.
> Following suggestions at the end of this email should fix this problem.
>
>
> > I found the following statement in the following official document
> > https://www.squid-cache.org/Doc/config/host_verify_strict/
> >
> > ? * The host names (domain or IP) must be identical,
> > ? but valueless or missing Host header disables all checks.
> >
> > So I ran an additional validation with an empty Host value, and the
> > request succeeded for a domain that was not in the whitelist.
> > The curl command for verification is below, and as before, only
> > .pypi.org is allowed in the whitelist.
> >
> > date;curl https://www.yahoo.co.jp/ -H "Host:" -v --cacert squid.crt -k
> >
> > Is it possible for Squid to prevent such requests as well?
>
> Yes, a req_header ACL should be able to detect such requests (i.e.
> requests without a Host header or with an empty Host header value).
> However, I suspect that "missing Host" is _not_ the problem you should
> be solving (as detailed below).
>
>
> > I was able to confirm that any one of the SNI, IP, or Host in the
> > request is incorrect (not whitelist allowed)
> > and Squid will correctly check and return a 409 Conflict.
>
> IMHO, you should target/validate a different set of goals/conditions:
>
> * A valid request targeting a banned site should be denied (HTTP 403
> response, %Ss=TCP_DENIED, %err_code=ERR_ACCESS_DENIED). This denial
> should be triggered by an "http_access deny" rule, preferably an
> explicit one. This denial will _not_ happen (and the request will
> instead be forwarded to the banned site it targets) if you replace all
> your http_access rules with a single "http_access allow all" line. This
> denial does not depend on host_verify_strict and underlying code.
>
> * An invalid request should be rejected (HTTP 4xx response). This
> includes, but is not limited to, host_verify_strict-driven rejections.
> This rejection should happen even if you replace all your http_access
> rules with a single "http_access allow all" line.
>
> AFAICT, your current configuration does not reach "deny valid requests
> targeting banned sites" goal while your question implies that you are
> incorrectly relying on host_verify_strict to perform that denial.
>
>
> I recommend the following:
>
> 1. Remove all of your current http_access rules. Keep ACLs. Perform
> host_verify_strict and access tests to confirm that all valid requests
> are denied and all invalid requests are rejected. If necessary, ask
> questions, file bug reports, patch Squid, and/or adjust your
> configuration to pass this test.
>
> 2. Copy http_access rules, with comments, from generated
> squid.conf.default. Insert your own access rules in the location marked
> by "INSERT YOUR OWN RULE(S) HERE" comment. Perform host_verify_strict
> and access tests to confirm that all valid requests to banned sites are
> denied, all other valid requests are allowed, and all invalid requests
> are rejected. If necessary, ask questions, file bug reports, patch
> Squid, and/or adjust your configuration to pass this test.
>
>
> HTH,
>
> Alex.
>
>
> > 2024?8?8?(?) 21:33 Alex Rousskov <rousskov at measurement-factory.com>:
> >>
> >> On 2024-08-06 20:59, ?? wrote:
> >>
> >>> When using Squid transparently, is it possible to control the
> >>> whitelist of the domain to connect to and inspect the Host field in
> >>> the request header together?
> >>
> >> Short answer: Yes.
> >>
> >>
> >>> According to the verification results, the Host field can be inspected
> >>> by "host_verify_strict on" in squid-transparent.conf, but it seems
> >>> that the whitelist is not controlled.
> >>
> >> AFAICT, the configuration you have shared allows all banned[1] traffic
> >> to/through https_port. For the problematic test case #5:
> >>
> >> All these http_access rules do _not_ match:
> >>
> >>> http_access allow localnet whitelist
> >>> http_access deny localnet whitelist_https !https_port
> >>> http_access deny localnet whitelist_transparent_https !https_port
> >>
> >>
> >> And then this next rule matches and allows traffic through:
> >>
> >>> http_access allow https_port
> >>
> >>
> >> This last http_access rule is not reached:
> >>
> >>> http_access deny all
> >>
> >>
> >> N.B. The above analysis assumes that your https_port ACL is explicitly
> >> defined in your squid.conf to match all traffic received at https_port.
> >> If you do not have such an ACL defined, then you need to fix that
> >> problem as well. I recommend naming ACLs differently from directive
> >> names (e.g., "toHttpsPort" rather than "https_port").
> >>
> >>
> >> Please note that Squid v4 is not supported by the Squid Project and is
> >> very buggy. I recommend using Squid v6 or later.
> >>
> >>
> >> HTH,
> >>
> >> Alex.
> >> [1] Here, "banned" means "_not_ matching whitelist ACL".
> >>
> >>
> >>> ?Configuration Details
> >>> ?squid-transparent.conf?Excerpts?
> >>> #Whitelist
> >>> acl whitelist dstdomain "/etc/squid/whitelist"
> >>> acl whitelist dstdomain "/etc/squid/whitelist_transparent"
> >>> acl whitelist_https dstdomain "/etc/squid/whitelist_https"
> >>> acl whitelist_transparent_https dstdomain
> >>> "/etc/squid/whitelist_transparent_https"
> >>>
> >>> proxy_protocol_access allow localnet
> >>> proxy_protocol_access deny all
> >>> http_access allow localnet whitelist
> >>> http_access deny localnet whitelist_https !https_port
> >>> http_access deny localnet whitelist_transparent_https !https_port
> >>>
> >>> # Handling HTTP requests
> >>> http_port 3129 intercept
> >>> # Handling HTTPS requests
> >>> https_port 3130 intercept tcpkeepalive=60,30,3 ssl-bump
> >>> generate-host-certificates=on dynamic_cert_mem_cache_size=20MB
> >>> tls-cert=/etc/squid/ssl/squid.crt tls-key=/etc/squid/ssl/squid.key
> >>> cipher=HIGH:MEDIUM:!LOW:!RC4:!SEED:!IDEA:!3DES:!MD5:!EXP:!PSK:!DSS
> >>> options=NO_TLSv1,NO_SSLv3,SINGLE_DH_USE,SINGLE_ECDH_USE
> >>> tls-dh=prime256v1:/etc/squid/ssl/bump_dhparam.pem
> >>> # Start up for squid process
> >>> http_port 3131
> >>> http_access allow https_port
> >>> acl allowed_https_sites ssl::server_name "/etc/squid/whitelist"
> >>> acl allowed_https_sites ssl::server_name "/etc/squid/whitelist_transparent"
> >>> acl allowed_https_sites ssl::server_name "/etc/squid/whitelist_https"
> >>> acl allowed_https_sites ssl::server_name
> >>> "/etc/squid/whitelist_transparent_https"
> >>>
> >>> http_access deny all
> >>>
> >>> # strict setting
> >>> host_verify_strict on
> >>>
> >>> # SSL_BUMP
> >>> sslcrtd_program /usr/lib64/squid/security_file_certgen -s
> >>> /var/lib/squid/ssl_db -M 20MB
> >>> acl step1 at_step SslBump1
> >>> acl step2 at_step SslBump2
> >>> acl step3 at_step SslBump3
> >>>
> >>> ssl_bump bump all
> >>
> >>
> >>> ?Verification of Settings
> >>> I ran the curl command from each of the client environments that use Squid.
> >>> 1. if SNI, Destination IP, and HeaderHost are correct, the user should
> >>> be able to connect to pypi.org
> >>> Command:
> >>> date;curl https://pypi.org/ -v --cacert squid_2.crt -k
> >>> Result: OK
> >>>
> >>> 2. rejection of communication to pypi.org if SNI is correct but
> >>> destination IP and HeaderHost are incorrect
> >>> Command:
> >>> date;curl https://pypi.org/ --resolve pypi.org:443:182.22.24.252 -H
> >>> "Host: www.yahoo.co.jp"  -v --cacert squid_2.crt -k
> >>> Result: OK (409 Conflict is returned)
> >>>
> >>> 3. rejection of communication to pypi.org if SNI and destination IP
> >>> are correct and HeaderHost is incorrect
> >>> Command:
> >>> date;curl https://pypi.org/ -H "Host: www.yahoo.co.jp" -v --cacert
> >>> squid_2.crt -k
> >>> Result: OK (409 Confilic returned)
> >>>
> >>> 4. rejection of communication to pypi.org if SNI and HeaderHost are
> >>> correct but destination IP is incorrect
> >>> Command:
> >>> date;curl https://pypi.org/ --resolve pypi.org:443:182.22.24.252 -v
> >>> --cacert squid_2.crt -k
> >>> Result: OK (409 Confilic returned)
> >>>
> >>> 5. if SNI, destination IP, and HeaderHost are all invalid (yahoo.co.jp
> >>> not registered in whitelist), communication will be rejected
> >>> Command:
> >>> date;curl https://yahoo.co.jp/ -v --cacert squid_2.crt -k
> >>> Result: NG (301 Moved Permanently is returned, but it appears that the
> >>> communication is reaching yahoo.co.jp)
> >>
> >>
> >>
> >>
> >> _______________________________________________
> >> squid-users mailing list
> >> squid-users at lists.squid-cache.org
> >> https://lists.squid-cache.org/listinfo/squid-users
>


From taku0919.taku at gmail.com  Thu Sep  5 09:01:20 2024
From: taku0919.taku at gmail.com (=?UTF-8?B?44Gr44Gw?=)
Date: Thu, 5 Sep 2024 18:01:20 +0900
Subject: [squid-users] Questions about Squid configuration
In-Reply-To: <CAK0+96dnXhvu6LyCrULcWfO0uxAiDDKaMm3Kj6a2BkS69yR5Hw@mail.gmail.com>
References: <CAK0+96e5Wpq3LpE4pf8k38nUpsmg+nyyocbOmnXS6=fqR+3C0g@mail.gmail.com>
 <add1024b-da05-46ba-9574-fd8048ec4fa1@measurement-factory.com>
 <CAK0+96eD+B2c_Fa3TpjE5E89WPsY-VaNadDSHK1ritgemkjrTw@mail.gmail.com>
 <c6889a69-d559-4180-ae27-5083e850329b@measurement-factory.com>
 <CAK0+96dnXhvu6LyCrULcWfO0uxAiDDKaMm3Kj6a2BkS69yR5Hw@mail.gmail.com>
Message-ID: <CAK0+96dezJBxbDeqBKAkEf9WUmEzrkDuABWuuWMmno5RDVguHw@mail.gmail.com>

I'm sorry. I forgot to attach the configuration file used in the
verification (partially masked).

2024?9?5?(?) 17:58 ?? <taku0919.taku at gmail.com>:
>
> Hi Alex
>
> Thanks for the reply !
>
> I took the advice I received, reviewed the verification details, and
> verified again with the two recommended steps.
> The new verification includes the following four patterns:
> 1. successful communication of a valid request to an allowed site
> [command]
> curl https://pypi.org/ -v --cacert squid.crt -k
>
> 2. communication of invalid requests to allowed sites is denied
> [command] ?Invalid header host
> curl https://pypi.org/ -H "Host: www.yahoo.co.jp" -v --cacert squid.crt -k
>
> 3. communication of valid requests to prohibited sites is denied
> [command]
> curl https://www.yahoo.co.jp/ -v --cacert squid.crt -k
>
> 4. communication of invalid requests to prohibited sites is denied
> [command]
> curl https://www.yahoo.co.jp/ -H "Host:" -v --cacert squid.crt -k
>
>
> STEP?
> ?1. Remove all of your current http_access rules. Keep ACLs. Perform
> ?host_verify_strict and access tests to confirm that all valid requests
> ?are denied and all invalid requests are rejected. If necessary, ask
> ?questions, file bug reports, patch Squid, and/or adjust your
> ?configuration to pass this test.
>
> ?Results for validation patterns
> ??403 Forbidden?X-Squid-Error: ERR_ACCESS_DENIED 0
> ??403 Forbidden?X-Squid-Error: ERR_ACCESS_DENIED 0
> ??403 Forbidden?X-Squid-Error: ERR_ACCESS_DENIED 0
> ??403 Forbidden?X-Squid-Error: ERR_ACCESS_DENIED 0
>
> STEP?
> ?2. Copy http_access rules, with comments, from generated
> ?squid.conf.default. Insert your own access rules in the location marked
> ?by "INSERT YOUR OWN RULE(S) HERE" comment. Perform host_verify_strict
> ?and access tests to confirm that all valid requests to banned sites are
> ?denied, all other valid requests are allowed, and all invalid requests
> ?are rejected. If necessary, ask questions, file bug reports, patch
> ?Squid, and/or adjust your configuration to pass this test.
>
> ?Results for validation patterns
> ??200 OK
> ??409 Conflict?X-Squid-Error: ERR_CONFLICT_HOST 0
> ??409 Conflict?X-Squid-Error: ERR_CONFLICT_HOST 0
> ??200 OK
>
> So my question is, in STEP 1.
> ?I expected to get a different response for a valid request than for
> an invalid request, is this result correct?
> In STEP 2.
> ?4. still returns 200 OK. Is this due to an error in the existing
> configuration? Or do I need to add a new setting?
>
> I am not a good English, so I may not have understood Alex's advice exactly.
> If there are still mistakes, please point them out to me.
>
> Thank you in advance.
>
> 2024?8?30?(?) 22:27 Alex Rousskov <rousskov at measurement-factory.com>:
> >
> > On 2024-08-29 22:28, ?? wrote:
> >
> > > With the newly reviewed configuration in the attachment
> >
> > OT: Please note that your configuration does not follow the recommended
> > http_access rules order template in squid.conf.default and might,
> > depending on your deployment environment, allow Squid to be used for
> > attacks on 3rd party resources (e.g., ssh services). This observation is
> > not related to your primary question and your "ban certain sites" goal.
> > Following suggestions at the end of this email should fix this problem.
> >
> >
> > > I found the following statement in the following official document
> > > https://www.squid-cache.org/Doc/config/host_verify_strict/
> > >
> > > ? * The host names (domain or IP) must be identical,
> > > ? but valueless or missing Host header disables all checks.
> > >
> > > So I ran an additional validation with an empty Host value, and the
> > > request succeeded for a domain that was not in the whitelist.
> > > The curl command for verification is below, and as before, only
> > > .pypi.org is allowed in the whitelist.
> > >
> > > date;curl https://www.yahoo.co.jp/ -H "Host:" -v --cacert squid.crt -k
> > >
> > > Is it possible for Squid to prevent such requests as well?
> >
> > Yes, a req_header ACL should be able to detect such requests (i.e.
> > requests without a Host header or with an empty Host header value).
> > However, I suspect that "missing Host" is _not_ the problem you should
> > be solving (as detailed below).
> >
> >
> > > I was able to confirm that any one of the SNI, IP, or Host in the
> > > request is incorrect (not whitelist allowed)
> > > and Squid will correctly check and return a 409 Conflict.
> >
> > IMHO, you should target/validate a different set of goals/conditions:
> >
> > * A valid request targeting a banned site should be denied (HTTP 403
> > response, %Ss=TCP_DENIED, %err_code=ERR_ACCESS_DENIED). This denial
> > should be triggered by an "http_access deny" rule, preferably an
> > explicit one. This denial will _not_ happen (and the request will
> > instead be forwarded to the banned site it targets) if you replace all
> > your http_access rules with a single "http_access allow all" line. This
> > denial does not depend on host_verify_strict and underlying code.
> >
> > * An invalid request should be rejected (HTTP 4xx response). This
> > includes, but is not limited to, host_verify_strict-driven rejections.
> > This rejection should happen even if you replace all your http_access
> > rules with a single "http_access allow all" line.
> >
> > AFAICT, your current configuration does not reach "deny valid requests
> > targeting banned sites" goal while your question implies that you are
> > incorrectly relying on host_verify_strict to perform that denial.
> >
> >
> > I recommend the following:
> >
> > 1. Remove all of your current http_access rules. Keep ACLs. Perform
> > host_verify_strict and access tests to confirm that all valid requests
> > are denied and all invalid requests are rejected. If necessary, ask
> > questions, file bug reports, patch Squid, and/or adjust your
> > configuration to pass this test.
> >
> > 2. Copy http_access rules, with comments, from generated
> > squid.conf.default. Insert your own access rules in the location marked
> > by "INSERT YOUR OWN RULE(S) HERE" comment. Perform host_verify_strict
> > and access tests to confirm that all valid requests to banned sites are
> > denied, all other valid requests are allowed, and all invalid requests
> > are rejected. If necessary, ask questions, file bug reports, patch
> > Squid, and/or adjust your configuration to pass this test.
> >
> >
> > HTH,
> >
> > Alex.
> >
> >
> > > 2024?8?8?(?) 21:33 Alex Rousskov <rousskov at measurement-factory.com>:
> > >>
> > >> On 2024-08-06 20:59, ?? wrote:
> > >>
> > >>> When using Squid transparently, is it possible to control the
> > >>> whitelist of the domain to connect to and inspect the Host field in
> > >>> the request header together?
> > >>
> > >> Short answer: Yes.
> > >>
> > >>
> > >>> According to the verification results, the Host field can be inspected
> > >>> by "host_verify_strict on" in squid-transparent.conf, but it seems
> > >>> that the whitelist is not controlled.
> > >>
> > >> AFAICT, the configuration you have shared allows all banned[1] traffic
> > >> to/through https_port. For the problematic test case #5:
> > >>
> > >> All these http_access rules do _not_ match:
> > >>
> > >>> http_access allow localnet whitelist
> > >>> http_access deny localnet whitelist_https !https_port
> > >>> http_access deny localnet whitelist_transparent_https !https_port
> > >>
> > >>
> > >> And then this next rule matches and allows traffic through:
> > >>
> > >>> http_access allow https_port
> > >>
> > >>
> > >> This last http_access rule is not reached:
> > >>
> > >>> http_access deny all
> > >>
> > >>
> > >> N.B. The above analysis assumes that your https_port ACL is explicitly
> > >> defined in your squid.conf to match all traffic received at https_port.
> > >> If you do not have such an ACL defined, then you need to fix that
> > >> problem as well. I recommend naming ACLs differently from directive
> > >> names (e.g., "toHttpsPort" rather than "https_port").
> > >>
> > >>
> > >> Please note that Squid v4 is not supported by the Squid Project and is
> > >> very buggy. I recommend using Squid v6 or later.
> > >>
> > >>
> > >> HTH,
> > >>
> > >> Alex.
> > >> [1] Here, "banned" means "_not_ matching whitelist ACL".
> > >>
> > >>
> > >>> ?Configuration Details
> > >>> ?squid-transparent.conf?Excerpts?
> > >>> #Whitelist
> > >>> acl whitelist dstdomain "/etc/squid/whitelist"
> > >>> acl whitelist dstdomain "/etc/squid/whitelist_transparent"
> > >>> acl whitelist_https dstdomain "/etc/squid/whitelist_https"
> > >>> acl whitelist_transparent_https dstdomain
> > >>> "/etc/squid/whitelist_transparent_https"
> > >>>
> > >>> proxy_protocol_access allow localnet
> > >>> proxy_protocol_access deny all
> > >>> http_access allow localnet whitelist
> > >>> http_access deny localnet whitelist_https !https_port
> > >>> http_access deny localnet whitelist_transparent_https !https_port
> > >>>
> > >>> # Handling HTTP requests
> > >>> http_port 3129 intercept
> > >>> # Handling HTTPS requests
> > >>> https_port 3130 intercept tcpkeepalive=60,30,3 ssl-bump
> > >>> generate-host-certificates=on dynamic_cert_mem_cache_size=20MB
> > >>> tls-cert=/etc/squid/ssl/squid.crt tls-key=/etc/squid/ssl/squid.key
> > >>> cipher=HIGH:MEDIUM:!LOW:!RC4:!SEED:!IDEA:!3DES:!MD5:!EXP:!PSK:!DSS
> > >>> options=NO_TLSv1,NO_SSLv3,SINGLE_DH_USE,SINGLE_ECDH_USE
> > >>> tls-dh=prime256v1:/etc/squid/ssl/bump_dhparam.pem
> > >>> # Start up for squid process
> > >>> http_port 3131
> > >>> http_access allow https_port
> > >>> acl allowed_https_sites ssl::server_name "/etc/squid/whitelist"
> > >>> acl allowed_https_sites ssl::server_name "/etc/squid/whitelist_transparent"
> > >>> acl allowed_https_sites ssl::server_name "/etc/squid/whitelist_https"
> > >>> acl allowed_https_sites ssl::server_name
> > >>> "/etc/squid/whitelist_transparent_https"
> > >>>
> > >>> http_access deny all
> > >>>
> > >>> # strict setting
> > >>> host_verify_strict on
> > >>>
> > >>> # SSL_BUMP
> > >>> sslcrtd_program /usr/lib64/squid/security_file_certgen -s
> > >>> /var/lib/squid/ssl_db -M 20MB
> > >>> acl step1 at_step SslBump1
> > >>> acl step2 at_step SslBump2
> > >>> acl step3 at_step SslBump3
> > >>>
> > >>> ssl_bump bump all
> > >>
> > >>
> > >>> ?Verification of Settings
> > >>> I ran the curl command from each of the client environments that use Squid.
> > >>> 1. if SNI, Destination IP, and HeaderHost are correct, the user should
> > >>> be able to connect to pypi.org
> > >>> Command:
> > >>> date;curl https://pypi.org/ -v --cacert squid_2.crt -k
> > >>> Result: OK
> > >>>
> > >>> 2. rejection of communication to pypi.org if SNI is correct but
> > >>> destination IP and HeaderHost are incorrect
> > >>> Command:
> > >>> date;curl https://pypi.org/ --resolve pypi.org:443:182.22.24.252 -H
> > >>> "Host: www.yahoo.co.jp"  -v --cacert squid_2.crt -k
> > >>> Result: OK (409 Conflict is returned)
> > >>>
> > >>> 3. rejection of communication to pypi.org if SNI and destination IP
> > >>> are correct and HeaderHost is incorrect
> > >>> Command:
> > >>> date;curl https://pypi.org/ -H "Host: www.yahoo.co.jp" -v --cacert
> > >>> squid_2.crt -k
> > >>> Result: OK (409 Confilic returned)
> > >>>
> > >>> 4. rejection of communication to pypi.org if SNI and HeaderHost are
> > >>> correct but destination IP is incorrect
> > >>> Command:
> > >>> date;curl https://pypi.org/ --resolve pypi.org:443:182.22.24.252 -v
> > >>> --cacert squid_2.crt -k
> > >>> Result: OK (409 Confilic returned)
> > >>>
> > >>> 5. if SNI, destination IP, and HeaderHost are all invalid (yahoo.co.jp
> > >>> not registered in whitelist), communication will be rejected
> > >>> Command:
> > >>> date;curl https://yahoo.co.jp/ -v --cacert squid_2.crt -k
> > >>> Result: NG (301 Moved Permanently is returned, but it appears that the
> > >>> communication is reaching yahoo.co.jp)
> > >>
> > >>
> > >>
> > >>
> > >> _______________________________________________
> > >> squid-users mailing list
> > >> squid-users at lists.squid-cache.org
> > >> https://lists.squid-cache.org/listinfo/squid-users
> >
-------------- next part --------------
A non-text attachment was scrubbed...
Name: step2.squid-transparent.conf
Type: application/octet-stream
Size: 4044 bytes
Desc: not available
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240905/22c0ff38/attachment.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: step1.squid-transparent.conf
Type: application/octet-stream
Size: 3430 bytes
Desc: not available
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240905/22c0ff38/attachment-0001.obj>

From uhlar at fantomas.sk  Thu Sep  5 11:01:53 2024
From: uhlar at fantomas.sk (Matus UHLAR - fantomas)
Date: Thu, 5 Sep 2024 13:01:53 +0200
Subject: [squid-users] squid5.5 restart failure due to domain list
 duplication
In-Reply-To: <CAE6tmh8=+VUUUge_e-FFe3sLKhm-Q2eLK7KBSLsETBhYzzSRNw@mail.gmail.com>
References: <CAE6tmh8=+VUUUge_e-FFe3sLKhm-Q2eLK7KBSLsETBhYzzSRNw@mail.gmail.com>
Message-ID: <ZtmPobpc158D7-Zy@fantomas.sk>

On 05.09.24 14:52, YAMAGUCHI NOZOMI (JIT ICC) wrote:
>If there were duplicate domains in the list of domains used, restarting the
>squid would cause the process to stop.
>Below is the error statement.
>ERROR: 'a.example.com' is a subdomain of 'example.com

Why do you keep duplicates on config?
you can call 'squid -k check' to see if your config is okay.



>FATAL: /etc/squid/squid.conf
>I don't think the same thing happened with my previous squid3.5.
>
>I have a few questions.
>?Is it possible to configure the process not to stop even if there are
>duplicates in the domain list?

If by "restarting" you mean stopping and starting squid (which is commonly 
called restart), reloading  "squid -k reload" would keep squid running.
However it would not reload invalid configuration.
  
>?Are there any other user actions besides duplicate domains that would
>trigger a process stop?

I guess some errors in squid config file can cause that.

-- 
Matus UHLAR - fantomas, uhlar at fantomas.sk ; http://www.fantomas.sk/
Warning: I wish NOT to receive e-mail advertising to this address.
Varovanie: na tuto adresu chcem NEDOSTAVAT akukolvek reklamnu postu.
Emacs is a complicated operating system without good text editor.


From Josh.Piana at hexcel.com  Thu Sep  5 15:56:27 2024
From: Josh.Piana at hexcel.com (Piana, Josh)
Date: Thu, 5 Sep 2024 15:56:27 +0000
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <c4ae0610-b8b2-4a26-bed9-8cd1bf2b6901@treenet.co.nz>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <Zs84drvoIpZ1f6DR@fantomas.sk> <58bdfaada3fa46d0938b7346ec04c336@hexcel.com>
 <947309fa-d1fc-4a75-ac49-ea7bc5c5ff12@measurement-factory.com>
 <faffca37-fa59-46ff-80e4-245c37fa90b9@measurement-factory.com>
 <c00942c1c8ab46b5b393d70f32346798@hexcel.com>
 <59274673-47e9-431d-ad45-7fa3a5a8ebca@measurement-factory.com>
 <d063bef52efd4e32a9f9bb27f934e673@hexcel.com>
 <e35fb7b1-12ce-41b8-83c1-51a208739127@measurement-factory.com>
 <f7ca72b579474cc184e22dfd6ef55683@hexcel.com>
 <4537b23c7a534cd3a716ffd4f8471f5e@hexcel.com>
 <c4ae0610-b8b2-4a26-bed9-8cd1bf2b6901@treenet.co.nz>
Message-ID: <d3ef9e5efbad41c39c74dcdb10f8f91a@hexcel.com>

Hello Amos, 

While the comments did say that it was just the 10.46.11.0 range, I don't think there's any other ACL forcing that. I tried adding the the two internal sites that are being blocked by their IP, restarted Squid, and tested. Still being blocked. You are right though, both of those web addresses are on a different IP scheme. Ideally we want anything on 172.0.0.0 to be allowed, and 10.96.0.0. The other question I have is, even if we specify those sites IP as "allowed", shouldn't we be able to brwose to them by their hostname as well? 

Currently, those internal sites ARE reachable. But only if we use IP. While this doesn't bother me, personally, the rest of our users would like to keep browsing via hostname as that's what they're used to and what many have shortcuts for. 

In regards to the results of /etc/resolv.conf, see below: 
search ad.arc-tech.com
nameserver 10.46.11.67

There must be a better way to just allow internal to internal traffic without needing to authenticate through the web proxy. The old config had it, but that was part of the issue. We have no idea how that was working, it didn't make sense at all and it was a bit outdated, Version 2.5 as opposed to our current 5.5. 

I'm happy to post out config again here, as it's changed a bit and I have cleaned it up. 

# squid.conf - Squid web cache configuration

##############################################################################
# General
##############################################################################

# 2020MAR23 running out with just 1024 as we switch to Hexcel.com OMA
max_filedesc 4096

# email address of cache administrator
cache_mgr ARCITAdmin at hexcel.com

# Run as...
cache_effective_user squid
cache_effective_group squid

# squid shutdown time
shutdown_lifetime 5 seconds

##############################################################################
# Logging
##############################################################################

# this makes the logs readable to humans
logformat custom %tl.%03tu %>a %Ss/%03>Hs %<st %rm %ru %[un %Sh/%<a %mt
access_log daemon:/var/log/squid/access.log custom

# this gives better error reporting
logformat custom %err_code/%err_detail
access_log daemon:/var/log/squid/access.log custom

# original arcgate had external logging, this setting was off
# this is now enabled
logfile_rotate 10

# debug_options ALL, 1-9, 1 being fatal errors only, 9 being EVERYTHING
debug_options ALL,1

# Buffer logs?  Yes means better performance, but crash debugging can be harder.
buffered_logs off	

# Red Hat-ish log names
cache_log /var/log/squid/cache.log
cache_access_log /var/log/squid/access.log

# store_log is only useful for debugging
cache_store_log none

# mime headers can record both the request and the response MIME headers for each HTTP transaction
# currently undeeded so we have this disabled
log_mime_hdrs off

# turning this off allows logs to show full URL's
strip_query_terms off

##############################################################################
# Network - General/misc
##############################################################################

# our HTTP proxy port
http_port 10.46.11.69:8080
# loopback management
http_port 127.0.0.1:3128

# disable ICP, port is typically 3130
icp_port 0

# if set to "on", Squid will append your client's IP address in the HTTP requests it forwards
forwarded_for off

##############################################################################
# Network timeout settings
##############################################################################

# if connect(2) does not succeed in 30 seconds, it is not going to
connect_timeout 30 seconds

# if we do not get any data at all for 2 minutes, we are not going to
read_timeout 2 minutes

# if we do not get an HTTP response in 2 minutes, we are not going to
request_timeout 2 minutes


##############################################################################
# Configuration of the local cache itself
##############################################################################

# default calue are 100 16 256 
# first variable is disk space in MB
# 10000 MB = 10 GB
cache_dir ufs /var/spool/squid/ 16000 64 64

# coredump location
coredump_dir /var/spool/squid/

# Replacement policies determine which objects are removed to free space:
# - LRU = least recently used objects are removed first
# - heap GDSF = optimizes object hit at expense of byte hit rate
# - heap LFUDA = optimizes byte hit rate at expense  of object hit rate
cache_replacement_policy heap LFUDA
memory_replacement_policy lru

# cache_mem is max for total size of all objects in memory cache
# this is *NOT* the max RAM Squid will use.
cache_mem 256 MB

# Allow larger objects to conserve bandwidth.
maximum_object_size 32 MB

# Allow larger objects since we have more RAM.
maximum_object_size_in_memory 512 KB

# allows for more leinency in requests about to be aborted
quick_abort_min 16 KB
quick_abort_max 1 MB
quick_abort_pct 90

# if client requests to skip less than this amount of data,
# we just retrieve the whole thing
range_offset_limit 64 KB

##############################################################################
# Authentication
##############################################################################

auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth -k /etc/squid/HTTP.keytab -s HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
auth_param negotiate children 10
auth_param negotiate keep_alive on
acl kerb-auth proxy_auth REQUIRED

##############################################################################
# Access control - shared/common ACL definitions
##############################################################################

# ----------------------------------------------------------------------------
# networks and hosts (by name or IP address)

# acl all src all

acl src_self src 127.0.0.0/8
acl src_self src 10.46.11.69

acl dst_self dst 127.0.0.0/8
acl dst_self dst 10.46.11.69

acl from_arc src 10.46.0.0/15

acl local_dst_addr dst 10.0.0.0/8
acl local_dst_addr dst 172.0.0.0/8

# ----------------------------------------------------------------------------
# protocols (URL schemes)

acl proto_FTP proto FTP
acl proto_HTTP proto HTTP

# ----------------------------------------------------------------------------
# TCP port numbers

# TCP ports for ordinary HTTP
acl http_ports port 80		# standard HTTP
acl http_ports port 81		# common alternative
acl http_ports port 8001	# epson.com support sub-site
acl http_ports port 8080	# common alternative

# TCP ports for HTTP-over-SSL
acl Ssl_ports port 443
acl Ssl_ports port 9571	        # lexmark.com

# TCP ports for plain FTP command channel
acl ftp_ports port 21

# TCP ports for SSH/SFTP (secure shell)
acl ssh_ports port 22

# ----------------------------------------------------------------------------
# HTTP methods (and pseudo-methods) 

acl method_CONNECT method CONNECT

# list of standard HTTP methods
acl methods_std method GET HEAD POST PUT DELETE
acl methods_std method TRACE OPTIONS

#############################################################################
# Access control - general proxy
##############################################################################

# This major section is about which HTTP proxy clients can use Squid
# as an HTTP proxy server.  As opposed to the maintenance/admin-type
# stuff in the previous section.

# ----------------------------------------------------------------------------
# basic deny rules
# these block stuff that's never good
# we put most denies after user-auth so we know *who* is trying

# block attempts to connect to proxy server via proxy
http_access deny dst_self

# block clients which are the proxy server machine itself
http_access deny src_self

# deny anything not from the LAN
http_access deny !from_arc

# ----------------------------------------------------------------------------
# allow without authentication
# these rules allow certain connects without user authentication
# these allow any protocol/method/etc

#                 ***** IMPORTANT *****
# Adding to these lists also exempts from all content filtering.
# In particular, executables will be allowed to download!
#                 ***** IMPORTANT *****

# allow connects to local destinations without authentication
# by domain name from URL
# acl local_dst_dom dstdomain ad.arc-tech.com
# http_access       allow local_dst_dom
# http_reply_access allow local_dst_dom

# by IP address name resolves to
http_access       allow local_dst_addr
# http_reply_access allow local_dst_addr

# allow trusted hosts without authentication
# these are just ip's on the 10.46.11.x network
acl authless_src src "/etc/squid/authless_src"
http_access       allow authless_src
# http_reply_access allow authless_src

# allow the following destinations without authentication
# list of random approved websites
# whats the advantage of not authenticating? 
acl authless_dst dstdomain "/etc/squid/authless_dst"
http_access       allow authless_dst
# http_reply_access allow authless_dst

# ----------------------------------------------------------------------------
# block before authentication
# these rules block certain connects without user authentication
# done for software which handles proxy auth requests badly
# for example, popping up many auth prompts
# this does mean we cannot whitelist for users

# blocked destinations, by host or domain, before authentication
# websites that are auto-deny
acl bad_domains_preauth dstdomain "/etc/squid/bad_domains_preauth"
http_access deny bad_domains_preauth

# ----------------------------------------------------------------------------
# require proxy authentication

# ********************************************************************
# * anything past this point requires users to authenticate to proxy *
# ********************************************************************

# Uncomment these lines to disable authentication requirement for all
# but a few test boxes.  Useful if NTLM gets broken.
# acl from_test_boxes src 10.2.1.5
# http_access allow !from_test_boxes from_arc

# block clients which are not authenticated
# http_access deny !authenticated

# block certain user IDs from using proxy server
# list of ad users and service accounts to automatically deny proxy  
acl block_user proxy_auth_regex -i "/etc/squid/block_user"
http_access deny block_user

# ----------------------------------------------------------------------------
# general whitelist

# whitelist for locations/sites (override blocking)
# allows complex URLs
# some bad_urls patterns are generic
# they block suspicous URLs or generally unwanted sites
# this whitelist can make specific exceptions within those
acl bad_exception_urls url_regex -i "/etc/squid/bad_exception_urls"

# ----------------------------------------------------------------------------
# executable blocking

# we do this separately from other content blocking
# in order to allow ITLIB to still download
# doing it with other blocking causes a flood of browser auth req's
# for users visting sites with video

# file extensions to block
# don't try to block .COM files here
# it will get confused with .com domain and block too many things
acl exec_files url_regex -i "/etc/squid/exec_files"

# usernames not to block
acl exec_users proxy_auth_regex -i "/etc/squid/exec_users"

# activate
http_access deny !bad_exception_urls !exec_users exec_files
deny_info ERR_BLOCK_TYPE exec_files

# ----------------------------------------------------------------------------
# selective whitelists

# these override the general blacklists by explictly allowing things
# some multimedia services (I.E. YouTube) are permitted for certain users
# exempts them from content blocking in this section

# list of users for this
acl mmedia_users proxy_auth_regex -i "/etc/squid/mmedia_users"

# list of sites for this
acl mmedia_sites dstdomain "/etc/squid/mmedia_sites"

# if a mmedia user attempts to access a mmedia site via appropriate protocols, allow it
# done for both HTTP/TCP/80 and HTTP/SSL/443
# done for both HTTP request as well as HTTP reply/response
# otherwise the later bad_types Content-Type multimedia blocking rule kicks in

http_access       allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
# tp_reply_access allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users

http_access       allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users
# http_reply_access allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users

# ----------------------------------------------------------------------------
# general blacklists
# porn, wastes of bandwidth, etc.


# blocked destinations, by host or domain
# sites we don't want people using
acl bad_domains dstdomain "/etc/squid/bad_domains"
http_access deny !bad_exception_urls bad_domains
deny_info ERR_BLOCK_DST	bad_domains

# blocked destinations, by host or domain, regex pattern
acl bad_domains_regex dstdom_regex -i "/etc/squid/bad_domains_regex"
http_access deny !bad_exception_urls bad_domains_regex
deny_info ERR_BLOCK_DST	bad_domains_regex

# blocked destinations, by complex URL
# typical use: block just part of a site, by URL path
# example use: block just the advertsing section of a site
acl bad_urls url_regex -i "/etc/squid/bad_urls"
http_access deny !bad_exception_urls bad_urls
deny_info ERR_BLOCK_DST	bad_urls

# blocked content types, by apparent file name
acl bad_files urlpath_regex -i "/etc/squid/bad_files"
http_access deny !bad_exception_urls bad_files 
deny_info ERR_BLOCK_TYPE bad_files

# blocked content types, by MIME content type, in response
acl bad_types rep_mime_type -i "/etc/squid/bad_types"
# http_reply_access deny bad_types !bad_exception_urls
deny_info ERR_BLOCK_TYPE bad_types

# ----------------------------------------------------------------------------
# standard web (HTTP PUT/GET/etc) access

# We basically allow any auth'ed user to connect via HTTP to anywhere,
# so long as it uses a standard port, and is not a direct CONNECT
# attempt, or blocked, or any of the other stuff above.

http_access allow http_ports proto_HTTP methods_std

# ----------------------------------------------------------------------------
# direct CONNECT for HTTP-over-SSL (HTTPS)

http_access allow method_CONNECT ssl_ports

# ----------------------------------------------------------------------------
# deny any other CONNECT attempts

http_access deny method_CONNECT

# ----------------------------------------------------------------------------
# FTP via HTTP proxy

http_access allow ftp_ports proto_FTP

# ----------------------------------------------------------------------------
# catch-all defaults
http_access allow kerb-auth

# deny any request we missed in the above
http_access deny all

# If we allowed the request, allow the reply (HTTP response) as well.
# Rules above many allow or deny specific reply before now.
# If nothing more specific matched, we allow.
# This should be OK since we filter mainly on requests.
# http_reply_access allow all

##############################################################################
# END OF FILE
##############################################################################
 
-----Original Message-----
From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of Amos Jeffries
Sent: Wednesday, September 4, 2024 9:23 PM
To: squid-users at lists.squid-cache.org
Subject: Re: [squid-users] Unable to access internal resources via hostname

Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.


Hi Josh,


There are two things I can see in the original message:

1) trusted *clients* (acl authless_src src ...) are documented as being limited to the 10.46.11.0/24 range.
  The client testing is outside, in the 10.46.49.190 IP address.

  ==> Please check your authless_src list is correct.


2) The CONNECT request has zero dots in the "domain" name. Which means the /etc/resolv.conf settings other than nameserver apply to the hostname during lookup.

  ==> Please supply your /etc/resolv.conf contents.


HTH
Amos

_______________________________________________
squid-users mailing list
squid-users at lists.squid-cache.org
https://lists.squid-cache.org/listinfo/squid-users


From Josh.Piana at hexcel.com  Thu Sep  5 16:22:21 2024
From: Josh.Piana at hexcel.com (Piana, Josh)
Date: Thu, 5 Sep 2024 16:22:21 +0000
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <7de91a21-c43c-4b1a-8adf-3e50c0f20017@measurement-factory.com>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <Zs84drvoIpZ1f6DR@fantomas.sk> <58bdfaada3fa46d0938b7346ec04c336@hexcel.com>
 <947309fa-d1fc-4a75-ac49-ea7bc5c5ff12@measurement-factory.com>
 <faffca37-fa59-46ff-80e4-245c37fa90b9@measurement-factory.com>
 <c00942c1c8ab46b5b393d70f32346798@hexcel.com>
 <59274673-47e9-431d-ad45-7fa3a5a8ebca@measurement-factory.com>
 <d063bef52efd4e32a9f9bb27f934e673@hexcel.com>
 <e35fb7b1-12ce-41b8-83c1-51a208739127@measurement-factory.com>
 <538ebdbdf0074bc4bcc04e0c923983a8@hexcel.com>
 <7de91a21-c43c-4b1a-8adf-3e50c0f20017@measurement-factory.com>
Message-ID: <49514d71541640c5965cfa9991e66074@hexcel.com>

Hello Alex, 

Thank you for clarifying, that makes a lot more sense when you put it like that. So the request to go to that internal website is not being authenticated when browsing to it via hostname. But it *does* authenticate when browsing to it manually via IP. So one of the ACL's we have in place is probably trying to pass this traffic as unauthenticated, and this is causing the request to fail. Prior to the Squid upgrade, when users browed to these sites, they needed to enter their AD credentials because the proxy didn't automatically let them in. We're still trying to figure out which one did that. 

The goal: Browse internal destinations on other subnets by hostname without being blocked. 

FWIW, the error to each internal site is a little bit different.

Hexcelssp, 10.96.15.174. gives me a "We're having trouble finding that site".
Hexnt2067,  10.96.102.67, gives me a proper proxy blocking error. "The requested URL could not be retrieved".

-----Original Message-----
From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of Alex Rousskov
Sent: Wednesday, September 4, 2024 3:16 PM
To: squid-users at lists.squid-cache.org
Subject: Re: [squid-users] Unable to access internal resources via hostname

Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.


On 2024-09-04 12:25, Piana, Josh wrote:

> That's REALLY strange that its getting blocked by "http_access deny 
> block_user". That's an ACL that is supposed to just deny "known good"
> users that we don't want to have access to the user proxy. This ACL 
> references the "block_user" list which includes guest accounts, vender 
> accounts, and a few users. The account I'm testing with, "jpiana" is 
> not on that list. I wonder why I'm getting filtered here and not the 
> very bottom of the squid.conf where we have the "http_access deny all" 
> ACL.

I know a lot of things have changed since you wrote the above, but I wanted to answer that still-relevant question: The test transaction gets an HTTP 407 response not because its client name matches a block_user ACL entry. The test transaction gets an HTTP 407 response because the user has not authenticated itself -- Squid sends HTTP 407 response to request authentication.

If you are still having problems after changing the test proxy and its configuration (as you discussed in your recent posts), please restate the primary problem and share debugging log of a test transaction again.


Cheers,

Alex.



> Maybe the order of my ACL's is wrong?
>
> In regards to the "local_dst_dom", I've setup a a list here under this path:  "/etc/squid/local_dst_dom", to immitate the other ACL rules. When I added the ".hexcelssp.com" address to this list, it failed to work. Most likely because this isn't a domain.
>
> FWIW, I just want ad.arc-tech.com devices to be allowed to reach all other ad.arc-tech.com devices via hostname. I'm willing to remove any other ACL that's getting in the way of that in order to make this work. This whole config that we have has been pieced together and I'd like to get it to the way it's supposed to be.
>
> What do you recommend? I can send the whole config again, exactly as we have it now, and see what we can fix/remove/replace.
>
> Appreicate you helping,
> Josh
>
> -----Original Message-----
> From: squid-users <squid-users-bounces at lists.squid-cache.org> On 
> Behalf Of Alex Rousskov
> Sent: Tuesday, September 3, 2024 4:43 PM
> To: squid-users at lists.squid-cache.org
> Subject: Re: [squid-users] Unable to access internal resources via 
> hostname
>
> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>
>
> Hi Josh,
>
>       Thank you for sharing debugging logs. "CONNECT hexcelssp"
> transaction is being denied by the following rule:
>
>       http_access deny block_user
>
> None of the ~10 http_access rules above the quoted one matched. Which of those rules do you expect to match that "CONNECT hexcelssp" request (_before_ the rule quoted above denies the request and asks the client to authenticate)? I suspect it is the local_dst_dom rule.
>
> local_dst_dom ACL will not match this transaction. You have changed the definition of that ACL from a hard-coded (in squid.conf) "arcgate" name to an unknown to me set of names inside "etc/squid/local_dst_dom" file.
> I wonder whether that file path is correct: Did you mean that path to be relative (i.e. "etc...") rather than absolute (i.e. "/etc...")? Try using an absolute path and double check that the file contains "hexcelssp" name.
>
>
> HTH,
>
> Alex.
>
>
> 2024/09/03 13:14:11.467 kid1| 85,2| client_side_request.cc(758)
> clientAccessCheckDone: The request CONNECT hexcelssp:443 is 
> AUTH_REQUIRED; last ACL checked: block_user
>
>
>
>
> On 2024-08-29 10:34, Piana, Josh wrote:
>> Good morning Alex,
>>
>> I've added the following to my squid.conf file # logformat custom 
>> %err_code/%err_detail # access_log daemon:/var/log/squid/access,log 
>> custom
>>
>> I've also enabled debugging options:
>> # debug_options ALL,9
>>
>> I've also cleaned up our ACL's to better reflect what is going on:
>> # acl src_self src 127.0.0.0/8
>> # acl src_self src 10.46.11.69
>> # acl dst_self dst 127.0.0.0/8
>> # acl dst_self dst 10.46.11.69
>>
>> # acl from_arc src 10.46.0.0/15
>>
>> # acl local_dst_addr dst 10.0.0.0/8
>> # acl local_dst_addr dst 172.0.0.0/8
>>
>> When accessing internal devices via IP, it works.
>> I think this is because of this ACL:
>> # http_access           allow local_dst_addr
>> # http_reply_access     allow local_dst_addr
>>
>> But when I access those same internal devices via hostname, it fails.
>> I'm using this ACL, which I just created a separate file for:
>> acl local_dst_dom dstdomain "etc/squid/local_dst_dom"
>> http_access       allow local_dst_dom
>> http_reply_access allow local_dst_dom
>>
>> I added an ACL file because I figure it will be more extensive than the more simple IP range ACL's.
>> I've added a few local websites to the "local_dst_dom" list, but I'm unable to get this to resolve without using IP.
>>
>> For instance: "https://hexcelssp/" is the name of one of our internal websites for our company.
>> This doesn't load under our current config but "https://10.96.14.174/" DOES load.
>>
>> I've added "hexnt2067" as well, which you can see me testing in the below logs.
>> Again, this DOES work with its IP, 10.96.102.67.
>>
>> I'm not getting a proxy error message when I try to browse to that URL though, we just can't reach it.
>>
>> Here's the log results after enabling debugging and better log features:
>>
>> 29/Aug/2024:10:25:33 -0400.380 10.46.49.190 TCP_DENIED/407 4132 
>> CONNECT hexcelssp:443 - HIER_NONE/- text/html
>> 29/Aug/2024:10:25:33 -0400.515 10.46.49.190 NONE_NONE/500 0 CONNECT
>> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
>> 29/Aug/2024:10:25:39 -0400.799 10.46.49.190 TCP_TUNNEL/200 11716 
>> CONNECT contile.services.mozilla.com:443 JPIANA at AD.<DOMAIN>.COM
>> HIER_DIRECT/34.117.188.166 -
>> 29/Aug/2024:10:26:05 -0400.507 10.46.49.190 TCP_DENIED/407 4474 GET 
>> http://hexnt2067/sites/it/help/SitePages/Home.aspx - HIER_NONE/- 
>> text/html
>> 29/Aug/2024:10:26:05 -0400.646 10.46.49.190 TCP_MISS/500 8320 GET 
>> http://hexnt2067/sites/it/help/SitePages/Home.aspx
>> JPIANA at AD.<DOMAIN>.COM HIER_NONE/- text/html
>> 29/Aug/2024:10:26:05 -0400.735 10.46.49.190 TCP_DENIED/403 4440 GET 
>> http://arcga/
>> te2.ad%2F&data=05%7C02%7Cjosh.piana%40hexcel.com%7C09078e3264324c317c
>> 6
>> e08dccc58fcfe%7C4248050df19546d5ac9c0c7c52b04cae%7C0%7C0%7C6386099298
>> 1 
>> 3620083%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiL
>> C 
>> JBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=ApuKveTxEh4lWJiyQw3D5
>> A 
>> Uh9PWut1%2FyxniOr6l1RL4%3D&reserved=0.<domain>.com:8080/squid-interna
>> l -static/icons/SN.png - HIER_NONE/- text/html
>> 29/Aug/2024:10:26:05 -0400.779 10.46.49.190 TCP_MISS_ABORTED/500 0 
>> GET http://hexnt2067/favicon.ico JPIANA at AD.<DOMAIN>.COM HIER_NONE/- 
>> text/html
>> 29/Aug/2024:10:27:13 -0400.036 10.46.49.190 TCP_DENIED/407 4474 GET 
>> http://hexnt2067/sites/it/help/SitePages/Home.aspx - HIER_NONE/- 
>> text/html
>> 29/Aug/2024:10:27:13 -0400.227 10.46.49.190 TCP_MISS/500 8334 GET 
>> http://hexnt2067/sites/it/help/SitePages/Home.aspx
>> JPIANA at AD.<DOMAIN>.COM HIER_NONE/- text/html
>> 29/Aug/2024:10:27:13 -0400.302 10.46.49.190 TCP_DENIED/403 4440 GET 
>> http://arcga/
>> te2.ad%2F&data=05%7C02%7Cjosh.piana%40hexcel.com%7C09078e3264324c317c
>> 6
>> e08dccc58fcfe%7C4248050df19546d5ac9c0c7c52b04cae%7C0%7C0%7C6386099298
>> 1 
>> 3620083%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiL
>> C 
>> JBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=ApuKveTxEh4lWJiyQw3D5
>> A 
>> Uh9PWut1%2FyxniOr6l1RL4%3D&reserved=0.<domain>.com:8080/squid-interna
>> l -static/icons/SN.png - HIER_NONE/- text/html
>> 29/Aug/2024:10:27:17 -0400.376 10.46.49.190 TCP_DENIED/407 4132 
>> CONNECT hexcelssp:443 - HIER_NONE/- text/html
>> 29/Aug/2024:10:27:17 -0400.514 10.46.49.190 NONE_NONE/500 0 CONNECT
>> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
>>
>> I'm not sure the debugging and extra log details were added correctly, because these look the same.
>>
>> Thanks,
>> Josh
>>
>>
>> -----Original Message-----
>> From: squid-users <squid-users-bounces at lists.squid-cache.org> On 
>> Behalf Of Alex Rousskov
>> Sent: Wednesday, August 28, 2024 4:01 PM
>> To: squid-users at lists.squid-cache.org
>> Subject: Re: [squid-users] Unable to access internal resources via 
>> hostname
>>
>> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>>
>>
>> On 2024-08-28 15:25, Piana, Josh wrote:
>>
>>> I now understand that Squid 5.5 ... is actually out of date as well.
>>> I regret installing and working off of this because I jused assumed 
>>> the "yum" install command for the Squid distro would give me the 
>>> most recent, known-good, software. That's completely on me.
>>
>> Whether yum install installs something production-worthy today is between you and your Linux distro. Squid Project volunteers, including me, do no control what distribution you pick and what that distribution ships. The reason I mentioned v5 support status is to avoid creating a false impression that there are no _other_ (i.e. unreported by you on this thread) problems you may want to know about and to lower your expectations from the level of support you may get from Squid Project volunteers like me.
>>
>> Said that, I doubt the problem you are trying to solve is v5-specific.
>> You may get better diagnostics if you run v6+, and you may receive fewer unusable (with v5) instructions if you run v6+, but the problem is likely to be present in a v6-based setup as well.
>>
>>
>>>   From how I understand it, his intentions for internal users 
>>> accessing internal resources, would skip authentication altogether.
>>
>> I assume that the problematic test that you want to fix is done using 
>> "internal users". You have already stated that the test is accessing 
>> "internal resources". Yet, we see that Squid asks the test client to 
>> authenticate (TCP_DENIED/407). Thus,
>>
>> * either local_dst_dom, local_dst_addr, and authless_src ACLs do not 
>> match test client transactions
>>
>> * or there is an authentication-triggering directive (e.g., "http_access deny block_user") located above a matching "http_access allow" rule that uses one of those ACLs three.
>>
>> Ideally, we should figure out which http_access rule matches the problematic transaction and triage from there. Unfortunately, Squid does not make that basic task easy. The best option I can think of is for you to share (privately if needed to avoid publishing sensitive info) a pointer to compressed cache.log file collected while reproducing the problem using a single test transaction after setting debug_options to ALL,9. Squid FAQ has a few hints about collecting relevant info:
>> https://wiki/
>> .squid-cache.org%2FSquidFaq%2FBugReporting%23debugging-a-single-trans
>> a 
>> ction&data=05%7C02%7Cjosh.piana%40hexcel.com%7C09078e3264324c317c6e08
>> d
>> ccc58fcfe%7C4248050df19546d5ac9c0c7c52b04cae%7C0%7C0%7C63860992981377
>> 6 
>> 344%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBT
>> i 
>> I6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=D%2BSI8apBgbZJnJfqr0J5WMi
>> P
>> GtnmIVdrFDPfD1vL6mM%3D&reserved=0
>>
>> This "unexpected authentication" mystery may not be directly related to the "HTTP 500 error responses" mystery we discussed earlier, but it may help to fix authentication first.
>>
>>
>> HTH,
>>
>> Alex.
>>
>>
>>> Here's a small piece, with his notes included, of why I think that.
>>>
>>> --------------------------------------------------------------------
>>> -
>>> -
>>> --------------------------------------------------
>>> #
>>> --------------------------------------------------------------------
>>> -
>>> -
>>> ------
>>> # allow without authentication
>>> # these rules allow certain connects without user authentication # 
>>> these allow any protocol/method/etc
>>>
>>> #                 ***** IMPORTANT *****
>>> # Adding to these lists also exempts from all content filtering.
>>> # In particular, executables will be allowed to download!
>>> #                 ***** IMPORTANT *****
>>>
>>> # allow connects to local destinations without authentication # by 
>>> domain name from URL
>>> http_access       allow local_dst_dom
>>> http_reply_access allow local_dst_dom
>>>
>>> # by IP address name resolves to
>>> http_access       allow local_dst_addr
>>> http_reply_access allow local_dst_addr
>>> --------------------------------------------------------------------
>>> -
>>> -
>>> --------------------------------------------------
>>>
>>> The "http_access allow local_dst_dom" and the following reply statement seems to point toward his intentions when writing this.
>>>
>>> The only thing in the old config this was referencing was this, and to me, it doesn't make sense:
>>> # acl local_dst_dom dstdomain arcgate
>>>
>>> It's worth noting that despite how awkward this seems, it DOES work. On the old web proxy we're currently still running live.
>>>
>>> I've gone as far as swapping out just the authentication settings and keeping the entire old config, but it still doesn't work.
>>> I've setup a realmd/sssd/kerberos backend instead of Samba/Windbind that the old server uses.
>>>
>>> To state the issue we're having again - internal resources connecting to other internal resources fails via hostname, but works when using IP. I was able to troubleshoot and conclude DNS was not the issue, as all other aspects are working as intended and they certainly do use DNS. Also pings resolve using hostname from the new squidbox so that implies that DNS is working as expected.
>>>
>>> Ultimately, here's what I think we want, please feel free to poke holes in it:
>>> Allow clients who are accessing other internal rersources to be able to browse to it using its hostname, without needing authentication first.
>>>
>>>
>>> I do intend on adding those parameters you mentioned to the logs so I can get better details within. I also need to look into how to use the debugging features, I'm not familiar with it at all.
>>>
>>> I apologize for the wall of text, looking forward to what you guys have to say about this.
>>>
>>> Thanks,
>>> Josh
>>>
>>> -----Original Message-----
>>> From: squid-users <squid-users-bounces at lists.squid-cache.org> On 
>>> Behalf Of Alex Rousskov
>>> Sent: Wednesday, August 28, 2024 2:31 PM
>>> To: squid-users at lists.squid-cache.org
>>> Subject: Re: [squid-users] Unable to access internal resources via 
>>> hostname
>>>
>>> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>>>
>>>
>>> On 2024-08-28 14:18, Alex Rousskov wrote:
>>>> On 2024-08-28 11:24, Piana, Josh wrote:
>>>>
>>>>> Here's the log and (I think) relevant ACL's?
>>>>
>>>> According to your access.log, Squid denies problematic CONNECT 
>>>> requests with HTTP 407 errors responses. Usually, that means those 
>>>> requests match an "http_access deny" rule. Clearly, you expect an 
>>>> "allow" outcome instead, but it is difficult (for me) to figure out 
>>>> where your expectations mismatch reality; there are no rules that 
>>>> explicitly mention hexcelssp domain, for example: Which 
>>>> "http_access allow" rule do you expect those denied requests to match?
>>>
>>> Sorry, I probably misinterpreted those access.log records: It looks like the denied (TCP_DENIED/407) access is something you actually expect because you want that test request to be authenticated. The client supplies the necessary credentials in the second request, and then that second request fails with a (rather generic) HTTP 500 error code, without contacting the origin server.
>>>
>>> I am guessing that you are concerned about that second request/transaction rather than the first one.
>>>
>>> Squid generates HTTP 500 errors for a variety of different reasons. Are there any messages in cache.log (at default debugging level) that correspond to these failing test transactions? If there are none, please add %err_code/%err_detail to your access_log logformat so that Squid logs more information about the problem to access.log (see logformat and access_log directives in squid.conf.documented for details).
>>>
>>>
>>> Thank you,
>>>
>>> Alex.
>>>
>>>
>>>
>>>> Also, does mgr:ipcache cache manager query confirm that Squid has 
>>>> read your /etc/hosts file and cached the record you expect it to use?
>>>>
>>>> Alex.
>>>>
>>>>
>>>>> ------------------------------------------------------------------
>>>>> -
>>>>> -
>>>>> -
>>>>> --------------------------------------
>>>>> # /var/log/squid/access.log results for internal conflicts
>>>>>
>>>>> 28/Aug/2024:10:57:17 -0400.234 10.46.49.190 TCP_DENIED/407 4132 
>>>>> CONNECT hexcelssp:443 - HIER_NONE/- text/html
>>>>> 28/Aug/2024:10:57:17 -0400.253 10.46.49.190 NONE_NONE/500 0 
>>>>> CONNECT
>>>>> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
>>>>> 28/Aug/2024:10:57:17 -0400.380 10.46.49.190 TCP_DENIED/407 4132 
>>>>> CONNECT hexcelssp:443 - HIER_NONE/- text/html
>>>>> 28/Aug/2024:10:57:17 -0400.399 10.46.49.190 NONE_NONE/500 0 
>>>>> CONNECT
>>>>> hexcelssp:443 JPIANA at AD.<DOMAIN>.COM HIER_NONE/- -
>>>>> ------------------------------------------------------------------
>>>>> -
>>>>> -
>>>>> -
>>>>> --------------------------------------
>>>>>
>>>>> # acl all src all
>>>>>
>>>>> acl src_self src 127.0.0.0/8
>>>>> acl src_self src 10.46.11.69
>>>>>
>>>>> acl dst_self dst 127.0.0.0/8
>>>>> acl dst_self dst 10.46.11.69
>>>>>
>>>>> acl from_arc src 10.46.0.0/15
>>>>>
>>>>> acl local_dst_addr dst 10.0.0.0/8
>>>>> acl local_dst_addr dst 172.0.0.0/8 acl local_dst_addr dst 
>>>>> bldg3.<domain>.com acl local_dst_addr dst bldg5.<domain>.com
>>>>>
>>>>> # these keep URLs of popular local servers from being forwarded 
>>>>> acl local_dst_dom dstdomain arcgate
>>>>>
>>>>> # allow connects to local destinations without authentication # by 
>>>>> domain name from URL
>>>>> http_access       allow local_dst_dom
>>>>> http_reply_access allow local_dst_dom
>>>>>
>>>>> # by IP address name resolves to
>>>>> http_access       allow local_dst_addr
>>>>> http_reply_access allow local_dst_addr
>>>>>
>>>>> # allow trusted hosts without authentication # these are just ip's 
>>>>> on the 10.46.11.x network acl authless_src src "/etc/squid/authless_src"
>>>>> http_access       allow authless_src
>>>>> http_reply_access allow authless_src
>>>>> ------------------------------------------------------------------
>>>>> -
>>>>> -
>>>>> -
>>>>> --------------------------------------
>>>>>
>>>>> -----Original Message-----
>>>>> From: squid-users <squid-users-bounces at lists.squid-cache.org> On 
>>>>> Behalf Of Matus UHLAR - fantomas
>>>>> Sent: Wednesday, August 28, 2024 10:47 AM
>>>>> To: squid-users at lists.squid-cache.org
>>>>> Subject: Re: [squid-users] Unable to access internal resources via 
>>>>> hostname
>>>>>
>>>>> Caution: This email originated from outside of Hexcel. Do not 
>>>>> click links or open attachments unless you recognize the sender 
>>>>> and know the content is safe.
>>>>>
>>>>>
>>>>> On 28.08.24 14:20, Piana, Josh wrote:
>>>>>> Hello Squid Support,
>>>>>
>>>>> This squid user forum FYI
>>>>>
>>>>>> We are unable to get to internal resources via hostname but using 
>>>>>> the IP address works fine.  Immediately, I thought this was DNS 
>>>>>> but when I checked the /etc/resolv.conf/ file it was pointing 
>>>>>> correctly to our Windows DNS server and we can ping all devices 
>>>>>> using their hostname, just not when browsing to it.  This leads 
>>>>>> me to believe something may be wrong with our squid config.
>>>>>
>>>>> hard to guess without seeing logs or ACL's.
>>>>>
>>>>>
>>>>> --
>>>>> Matus UHLAR - fantomas, uhlar at fantomas.sk
_______________________________________________
squid-users mailing list
squid-users at lists.squid-cache.org
https://lists.squid-cache.org/listinfo/squid-users


From squid3 at treenet.co.nz  Sat Sep  7 14:50:42 2024
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Sun, 8 Sep 2024 02:50:42 +1200
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <d3ef9e5efbad41c39c74dcdb10f8f91a@hexcel.com>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <Zs84drvoIpZ1f6DR@fantomas.sk> <58bdfaada3fa46d0938b7346ec04c336@hexcel.com>
 <947309fa-d1fc-4a75-ac49-ea7bc5c5ff12@measurement-factory.com>
 <faffca37-fa59-46ff-80e4-245c37fa90b9@measurement-factory.com>
 <c00942c1c8ab46b5b393d70f32346798@hexcel.com>
 <59274673-47e9-431d-ad45-7fa3a5a8ebca@measurement-factory.com>
 <d063bef52efd4e32a9f9bb27f934e673@hexcel.com>
 <e35fb7b1-12ce-41b8-83c1-51a208739127@measurement-factory.com>
 <f7ca72b579474cc184e22dfd6ef55683@hexcel.com>
 <4537b23c7a534cd3a716ffd4f8471f5e@hexcel.com>
 <c4ae0610-b8b2-4a26-bed9-8cd1bf2b6901@treenet.co.nz>
 <d3ef9e5efbad41c39c74dcdb10f8f91a@hexcel.com>
Message-ID: <20d65da8-8e6e-47f6-9250-04ad8f26ff5a@treenet.co.nz>

On 6/09/24 03:56, Piana, Josh wrote:
> Hello Amos,
> 
> While the comments did say that it was just the 10.46.11.0 range, I don't think there's any other ACL forcing that. I tried adding the the two internal sites that are being blocked by their IP, restarted Squid, and tested. Still being blocked. You are right though, both of those web addresses are on a different IP scheme. Ideally we want anything on 172.0.0.0 to be allowed, and 10.96.0.0. The other question I have is, even if we specify those sites IP as "allowed", shouldn't we be able to brwose to them by their hostname as well?


That depends no your configuration policy. The default squid.conf only 
checks that clients are from the LAN and not doing any nasty protocol 
trick attacks.


> 
> Currently, those internal sites ARE reachable. But only if we use IP. While this doesn't bother me, personally, the rest of our users would like to keep browsing via hostname as that's what they're used to and what many have shortcuts for.
> 

Currently I see the ACL "local_dst_dom" is commented out (disabled).

I guess you also have not listed the hostname or domain in the file 
loaded by "authless_dst" ACL.




> In regards to the results of /etc/resolv.conf, see below:
> search ad.arc-tech.com
> nameserver 10.46.11.67
> 

Okay. Then the "NDOT" default of 1 will be applied. So for these HTTP 
messages:

   CONNECT hexp:443 HTTP/1.1
   Host: hexp
   ...


Will be interpreted by Squid as URL:

  https://hexp/


The "dstdomain" ACL will try to match "hexp" exactly.

The "dst" ACL will try to match IPs of "hexp.ad.arc-tech.com"



> There must be a better way to just allow internal to internal traffic without needing to authenticate through the web proxy. The old config had it, but that was part of the issue. We have no idea how that was working, it didn't make sense at all and it was a bit outdated, Version 2.5 as opposed to our current 5.5.
> 
> I'm happy to post out config again here, as it's changed a bit and I have cleaned it up.
> 
> # squid.conf - Squid web cache configuration
> 
> ##############################################################################
> # General
> ##############################################################################
> 
> # 2020MAR23 running out with just 1024 as we switch to Hexcel.com OMA
> max_filedesc 4096
> 

Unrelated to your problem, but FYI this should probably be much larger 
(ie 64K minimum, up to 100x expected user count) for a production proxy.


> 
> ##############################################################################
> # Logging
> ##############################################################################
> 
> # this makes the logs readable to humans
> logformat custom %tl.%03tu %>a %Ss/%03>Hs %<st %rm %ru %[un %Sh/%<a %mt
> access_log daemon:/var/log/squid/access.log custom
> 
> # this gives better error reporting
> logformat custom %err_code/%err_detail
> access_log daemon:/var/log/squid/access.log custom
> 

This repeat of "custom" will cause issues.

IIRC this was added misunderstanding of Alex instructions.
What he meant was to **add** "%err_code/%err_detail" to your existing 
"custom" format.

Like this:

logformat custom %tl.%03tu %>a %Ss/%03>Hs %<st %rm %ru %[un \
     %Sh/%<a %mt %err_code/%err_detail


> # Red Hat-ish log names
> cache_log /var/log/squid/cache.log
> cache_access_log /var/log/squid/access.log

This setting opens a third logger writing to access.log, causing more 
issues.

Remove this "cache_access_log" line.


> 
> # store_log is only useful for debugging
> cache_store_log none


FYI, off by default on current Squid. You can probably erase this 
setting entirely now.


> ##############################################################################
> # Network - General/misc
> ##############################################################################
> 
> # our HTTP proxy port
> http_port 10.46.11.69:8080
> # loopback management
> http_port 127.0.0.1:3128


FWIW, you have denied access to "dst 127.0.0.0/8". So traffic to this 
port will be rejected.


> 
> # disable ICP, port is typically 3130
> icp_port 0

FYI; disabled by default in modern Squid. You can remove "icp_port".

> 
> # if set to "on", Squid will append your client's IP address in the HTTP requests it forwards
> forwarded_for off

"off" will send the text "unknown".

It is better to use "transparent" (pass-thru unchanged) or "delete" 
(erase if existing).


> ##############################################################################
> # Authentication
> ##############################################################################
> 
> auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth -k /etc/squid/HTTP.keytab -s HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
> auth_param negotiate children 10
> auth_param negotiate keep_alive on
> acl kerb-auth proxy_auth REQUIRED
> 
> ##############################################################################
> # Access control - shared/common ACL definitions
> ##############################################################################
> 
> # ----------------------------------------------------------------------------
> # networks and hosts (by name or IP address)
> 
> # acl all src all
> 
> acl src_self src 127.0.0.0/8
> acl src_self src 10.46.11.69
> 
> acl dst_self dst 127.0.0.0/8
> acl dst_self dst 10.46.11.69


FYI, there are more IPs than just 127.0.0.0/8 which can be problematic 
as loopback sources.

Replace "dst_self" with:

  acl to_localhost dst 10.46.11.69


> 
> acl from_arc src 10.46.0.0/15
> 
> acl local_dst_addr dst 10.0.0.0/8
> acl local_dst_addr dst 172.0.0.0/8
> 
> # ----------------------------------------------------------------------------
> # protocols (URL schemes)
> 
> acl proto_FTP proto FTP
> acl proto_HTTP proto HTTP
> 
> # ----------------------------------------------------------------------------
> # TCP port numbers
> 
> # TCP ports for ordinary HTTP
> acl http_ports port 80		# standard HTTP
> acl http_ports port 81		# common alternative
> acl http_ports port 8001	# epson.com support sub-site
> acl http_ports port 8080	# common alternative


Other ports that are common:

  acl http_ports port 88 8000 8888 # ad-hoc services
  acl http_ports port 1080  # SOCK frontend to HTTP service
  acl http_ports port 21-22 # http:// frontend to FTP service
  acl http_ports port 443   # https:// URLs


Or really, **any** port can be valid now that Alt-Svc is widely used.

> 
> # TCP ports for HTTP-over-SSL
> acl Ssl_ports port 443
> acl Ssl_ports port 9571	        # lexmark.com
> 
> # TCP ports for plain FTP command channel
> acl ftp_ports port 21
> 
> # TCP ports for SSH/SFTP (secure shell)
> acl ssh_ports port 22

FTR, "ssh_ports" is unused. SSH and SFTP can only use Squid via CONNECT 
tunnel anyway. So you should list this port as part of "Ssl_ports".

> 
> # ----------------------------------------------------------------------------
> # HTTP methods (and pseudo-methods)
> 
> acl method_CONNECT method CONNECT

FYI: we have a built-in for modern Squid:

   acl CONNECT method CONNECT

You can replace all "method_CONNECT" with just "CONNECT".


> 
> # list of standard HTTP methods
> acl methods_std method GET HEAD POST PUT DELETE
> acl methods_std method TRACE OPTIONS
> 

Consider removing these ACLs and the extra complexity they create.
Modern HTTP considers many other method names "standard" and current 
Squid follows the standard-required handling for all of them, and 
special ones.


> #############################################################################
> # Access control - general proxy
> ##############################################################################
> 
> # This major section is about which HTTP proxy clients can use Squid
> # as an HTTP proxy server.  As opposed to the maintenance/admin-type
> # stuff in the previous section.
> 
> # ----------------------------------------------------------------------------
> # basic deny rules
> # these block stuff that's never good
> # we put most denies after user-auth so we know *who* is trying
> 

Missing basic security to prevent DoS and protocol hijacking attacks:


  http_access deny !Safe_ports
  http_access deny CONNECT !Ssl_ports


You can define Safe_ports like this:

   acl Safe_Ports any-of http_ports Ssl_ports ftp_ports



> # block attempts to connect to proxy server via proxy
> http_access deny dst_self
> 

Use:
   http_access deny to_localhost



> # block clients which are the proxy server machine itself
> http_access deny src_self
> 

FYI, there should be nothing wrong with other software running on the 
proxy machine (eg software updaters) using Squid. They have to obey the 
same rules an any other client.


> # deny anything not from the LAN
> http_access deny !from_arc

FYI, we use "localnet" ACL to define the LAN. Makes it a bit easier for 
others to assist if you use the same. Up to you though.


> 
> # ----------------------------------------------------------------------------
> # allow without authentication
> # these rules allow certain connects without user authentication
> # these allow any protocol/method/etc
> 
> #                 ***** IMPORTANT *****
> # Adding to these lists also exempts from all content filtering.
> # In particular, executables will be allowed to download!
> #                 ***** IMPORTANT *****
> 
> # allow connects to local destinations without authentication
> # by domain name from URL
> # acl local_dst_dom dstdomain ad.arc-tech.com
> # http_access       allow local_dst_dom
> # http_reply_access allow local_dst_dom


You have a domain name whitelist ACL two sections below.
You can remove the above, and list and use the later one for both 
"local" and other domains.


> 
> # by IP address name resolves to
> http_access       allow local_dst_addr
> # http_reply_access allow local_dst_addr
> 

Maybe rename "local_dst_addr" to "whitelist_dst_ips" for clarity on what 
it is doing.


Which brings up a security issue: When you list the entire LAN range in 
this ACL, anyone accessing the proxy is allowed to do whatever they want 
to your LAN machines. That includes all LAN **and** WAN connections.

Additionally, the bypass of authentication leaves you no trace that this 
was actually a user, and not some infected LAN machine spreading malware 
across your LAN. Which is rather risky.


Prefer to keep by-IP whitelist's empty or minimal content.



> # allow trusted hosts without authentication
> # these are just ip's on the 10.46.11.x network
> acl authless_src src "/etc/squid/authless_src"
> http_access       allow authless_src
> # http_reply_access allow authless_src
> 
> # allow the following destinations without authentication
> # list of random approved websites
> # whats the advantage of not authenticating?
> acl authless_dst dstdomain "/etc/squid/authless_dst"
> http_access       allow authless_dst
> # http_reply_access allow authless_dst
> 

This should be combined with "local_dst_dom". Just use different lines 
like so:

  acl authless_dst dstdomain "/etc/squid/authless_dst"
  acl authless_dst dstdomain .ad.arc-tech.com
  acl authless_dst dstdomain .hexcelssp.com hexcelssp

  http_access allow whitelist


> # ----------------------------------------------------------------------------
> # block before authentication
> # these rules block certain connects without user authentication
> # done for software which handles proxy auth requests badly
> # for example, popping up many auth prompts
> # this does mean we cannot whitelist for users
> 
> # blocked destinations, by host or domain, before authentication
> # websites that are auto-deny
> acl bad_domains_preauth dstdomain "/etc/squid/bad_domains_preauth"
> http_access deny bad_domains_preauth
> 
> # ----------------------------------------------------------------------------
> # require proxy authentication
> 
> # ********************************************************************
> # * anything past this point requires users to authenticate to proxy *
> # ********************************************************************
> 
> # Uncomment these lines to disable authentication requirement for all
> # but a few test boxes.  Useful if NTLM gets broken.
> # acl from_test_boxes src 10.2.1.5
> # http_access allow !from_test_boxes from_arc
> 

FYI, you have "deny !from_arc" earlier above.

This is simpler and does the same thing as the above line:

   # http_access allow !from_test_boxes


> # block clients which are not authenticated
> # http_access deny !authenticated
> 

You named the ACL "kerb-auth", not "authenticated".


> # block certain user IDs from using proxy server
> # list of ad users and service accounts to automatically deny proxy
> acl block_user proxy_auth_regex -i "/etc/squid/block_user"
> http_access deny block_user


I suggest this to prevent re-login loop for these forbidden services:

  http_access deny !kerb-auth
  http_access deny block_user all


> 
> # ----------------------------------------------------------------------------
> # general whitelist
> 
> # whitelist for locations/sites (override blocking)
> # allows complex URLs
> # some bad_urls patterns are generic
> # they block suspicous URLs or generally unwanted sites
> # this whitelist can make specific exceptions within those
> acl bad_exception_urls url_regex -i "/etc/squid/bad_exception_urls"
> 
> # ----------------------------------------------------------------------------
> # executable blocking
> 
> # we do this separately from other content blocking
> # in order to allow ITLIB to still download
> # doing it with other blocking causes a flood of browser auth req's
> # for users visting sites with video
> 
> # file extensions to block
> # don't try to block .COM files here
> # it will get confused with .com domain and block too many things
> acl exec_files url_regex -i "/etc/squid/exec_files"

Consider using the "urlpath_regex" ACL type instead. It does not match 
against the scheme://domain:port part of URLs.


> 
> # usernames not to block
> acl exec_users proxy_auth_regex -i "/etc/squid/exec_users"
> 
> # activate
> http_access deny !bad_exception_urls !exec_users exec_files
> deny_info ERR_BLOCK_TYPE exec_files
> 
> # ----------------------------------------------------------------------------
> # selective whitelists
> 
> # these override the general blacklists by explictly allowing things
> # some multimedia services (I.E. YouTube) are permitted for certain users
> # exempts them from content blocking in this section
> 
> # list of users for this
> acl mmedia_users proxy_auth_regex -i "/etc/squid/mmedia_users"
> 
> # list of sites for this
> acl mmedia_sites dstdomain "/etc/squid/mmedia_sites"
> 
> # if a mmedia user attempts to access a mmedia site via appropriate protocols, allow it
> # done for both HTTP/TCP/80 and HTTP/SSL/443
> # done for both HTTP request as well as HTTP reply/response
> # otherwise the later bad_types Content-Type multimedia blocking rule kicks in
> 
> http_access       allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
> # tp_reply_access allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
> 
> http_access       allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users
> # http_reply_access allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users


FYI, Websites like YouTube can dynamically negotiate the media source 
ports to be non-standard values using Alt-Svc headers.

If you had the default security settings at the top of your http_access 
rules:

  http_access deny !Safe_ports
  http_access deny CONNECT !SSL_Ports

... you would not need to make (bad) assumptions about the protocols and 
ports used by media sites here.

Also, "mmedia_users" being last on the line risks a 407 re-auth 
challenge occuring. Best place it earlier.


Leaving these rules as:

    http_access allow mmedia_users mmedia_sites


> 
> # ----------------------------------------------------------------------------
> # general blacklists
> # porn, wastes of bandwidth, etc.
> 
> 
> # blocked destinations, by host or domain
> # sites we don't want people using
> acl bad_domains dstdomain "/etc/squid/bad_domains"
> http_access deny !bad_exception_urls bad_domains
> deny_info ERR_BLOCK_DST	bad_domains
> 
> # blocked destinations, by host or domain, regex pattern
> acl bad_domains_regex dstdom_regex -i "/etc/squid/bad_domains_regex"
> http_access deny !bad_exception_urls bad_domains_regex
> deny_info ERR_BLOCK_DST	bad_domains_regex
> 
> # blocked destinations, by complex URL
> # typical use: block just part of a site, by URL path
> # example use: block just the advertsing section of a site
> acl bad_urls url_regex -i "/etc/squid/bad_urls"
> http_access deny !bad_exception_urls bad_urls
> deny_info ERR_BLOCK_DST	bad_urls
> 
> # blocked content types, by apparent file name
> acl bad_files urlpath_regex -i "/etc/squid/bad_files"
> http_access deny !bad_exception_urls bad_files
> deny_info ERR_BLOCK_TYPE bad_files
> 
> # blocked content types, by MIME content type, in response
> acl bad_types rep_mime_type -i "/etc/squid/bad_types"
> # http_reply_access deny bad_types !bad_exception_urls
> deny_info ERR_BLOCK_TYPE bad_types


FYI, in order for the deny_info action to be taken the ACL it is 
attached to must be the final one on a line.

Previous config was fine, but this "bad_types" use will not work. You 
need to re-order the access checks like this:


  # http_reply_access deny !bad_exception_urls bad_types


> 

This part from here ...

> # ----------------------------------------------------------------------------
> # standard web (HTTP PUT/GET/etc) access
> 
> # We basically allow any auth'ed user to connect via HTTP to anywhere,
> # so long as it uses a standard port, and is not a direct CONNECT
> # attempt, or blocked, or any of the other stuff above.
> 
> http_access allow http_ports proto_HTTP methods_std
> 
> # ----------------------------------------------------------------------------
> # direct CONNECT for HTTP-over-SSL (HTTPS)
> 
> http_access allow method_CONNECT ssl_ports
> 
> # ----------------------------------------------------------------------------
> # deny any other CONNECT attempts
> 
> http_access deny method_CONNECT
> 
> # ----------------------------------------------------------------------------
> # FTP via HTTP proxy
> 
> http_access allow ftp_ports proto_FTP
> 

... to here.

Is better handled by the default squid.conf:

  http_access deny !Safe_ports
  http_access deny CONNECT !Ssl_ports

Placed at the top of your http_access lines.


> # ----------------------------------------------------------------------------
> # catch-all defaults
> http_access allow kerb-auth
> 
> # deny any request we missed in the above
> http_access deny all
> 
> # If we allowed the request, allow the reply (HTTP response) as well.
> # Rules above many allow or deny specific reply before now.
> # If nothing more specific matched, we allow.
> # This should be OK since we filter mainly on requests.
> # http_reply_access allow all
> 

FWIW, it is hard to tell what the exact last reply action could have 
been. So I would un-comment this allow line to be certain it is what 
happens.


> ##############################################################################
> # END OF FILE
> ##############################################################################
>   

HTH
Amos



From squid3 at treenet.co.nz  Sat Sep  7 15:43:02 2024
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Sun, 8 Sep 2024 03:43:02 +1200
Subject: [squid-users] RFC: Removal of ESI Support from Squid
Message-ID: <6d98aeb1-22b6-44bd-9545-2dc9078bfde7@treenet.co.nz>

Hi all,

The ESI (Edge Side Includes) feature of Squid has a growing number of 
unfixed bugs, more than a few are turning into security issues.

Also, the current Squid developers do not have spare brain cycles to 
maintain everything and v7 is seeing a lot more effort to prune away old 
and unused mechanisms in Squid.


As such this is a callout to see how much use there is for this feature.


       DO you need ESI in Squid?  Yes or No.

    Speak Now, or face regrets at upgrade time.



Thank You
Amos



From jonathanlee571 at gmail.com  Sat Sep  7 16:29:58 2024
From: jonathanlee571 at gmail.com (Jonathan Lee)
Date: Sat, 7 Sep 2024 09:29:58 -0700
Subject: [squid-users] RFC: Removal of ESI Support from Squid
In-Reply-To: <6d98aeb1-22b6-44bd-9545-2dc9078bfde7@treenet.co.nz>
References: <6d98aeb1-22b6-44bd-9545-2dc9078bfde7@treenet.co.nz>
Message-ID: <B60BA550-4BA2-4BCF-8FAE-19560B65CAB2@gmail.com>

I use bump splice, with split acls and access lists that match MAC addresses, plus cachemgr, I hate to admit I am using 5.8 because 6.6 has issues with so many errors showing and is so much slower. I do not want to reissue all my certificates, it works perfect for what I need in my mini firewall. 

It took many many hours of config and years of testing and changes to get it to this level of performance. I was very happy that 6.6 was released but it broke a lot of the php gui tools. Again it is like 5.8 is an everything bagel, it?s protected behind a firewall so I am less concerned as well. I am not protecting a massive corporate environment, it is just home issue
Sent from my iPhone

> On Sep 7, 2024, at 08:52, Amos Jeffries <squid3 at treenet.co.nz> wrote:
> 
> ?Hi all,
> 
> The ESI (Edge Side Includes) feature of Squid has a growing number of unfixed bugs, more than a few are turning into security issues.
> 
> Also, the current Squid developers do not have spare brain cycles to maintain everything and v7 is seeing a lot more effort to prune away old and unused mechanisms in Squid.
> 
> 
> As such this is a callout to see how much use there is for this feature.
> 
> 
>      DO you need ESI in Squid?  Yes or No.
> 
>   Speak Now, or face regrets at upgrade time.
> 
> 
> 
> Thank You
> Amos
> 
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users


From ml at netfence.it  Sun Sep  8 16:24:53 2024
From: ml at netfence.it (Andrea Venturoli)
Date: Sun, 8 Sep 2024 18:24:53 +0200
Subject: [squid-users] RFC: Removal of ESI Support from Squid
In-Reply-To: <6d98aeb1-22b6-44bd-9545-2dc9078bfde7@treenet.co.nz>
References: <6d98aeb1-22b6-44bd-9545-2dc9078bfde7@treenet.co.nz>
Message-ID: <1099d15f-ed1d-4072-aac2-1e4f5cec70ff@netfence.it>

On 9/7/24 17:43, Amos Jeffries wrote:
> Hi all,

Hello.




>  ????? DO you need ESI in Squid?? Yes or No.
> 
>  ?? Speak Now, or face regrets at upgrade time.

I'd gladly answer, but my ignorance forbids me.

Supposing I don't use ESI myself, would that me "No".
Or can my users access (via Squid) a public site which uses ESI and it 
would stop working?

Sorry again for my lack of understanding.

  bye & Thanks
	av.


From gkinkie at gmail.com  Sun Sep  8 16:49:09 2024
From: gkinkie at gmail.com (Francesco Chemolli)
Date: Sun, 8 Sep 2024 18:49:09 +0200
Subject: [squid-users] RFC: Removal of ESI Support from Squid
In-Reply-To: <1099d15f-ed1d-4072-aac2-1e4f5cec70ff@netfence.it>
References: <6d98aeb1-22b6-44bd-9545-2dc9078bfde7@treenet.co.nz>
 <1099d15f-ed1d-4072-aac2-1e4f5cec70ff@netfence.it>
Message-ID: <CA+Y8hcMrrxO-UDtEBCMvPA1KFwz-Ozfqne-VvGNYk3x=ag6zhQ@mail.gmail.com>

Hi,
  ESI websites are not public; they are meant to be used in a reverse proxy
environment. The ESI directives are interpreted by the reverse proxy and
replaced with other content

Francesco


On Sun, 8 Sep 2024 at 6:32?PM, Andrea Venturoli <ml at netfence.it> wrote:

> On 9/7/24 17:43, Amos Jeffries wrote:
> > Hi all,
>
> Hello.
>
>
>
>
> >        DO you need ESI in Squid?  Yes or No.
> >
> >     Speak Now, or face regrets at upgrade time.
>
> I'd gladly answer, but my ignorance forbids me.
>
> Supposing I don't use ESI myself, would that me "No".
> Or can my users access (via Squid) a public site which uses ESI and it
> would stop working?
>
> Sorry again for my lack of understanding.
>
>   bye & Thanks
>         av.
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240908/95e5b61f/attachment.htm>

From ml at netfence.it  Sun Sep  8 17:12:19 2024
From: ml at netfence.it (Andrea Venturoli)
Date: Sun, 8 Sep 2024 19:12:19 +0200
Subject: [squid-users] RFC: Removal of ESI Support from Squid
In-Reply-To: <CA+Y8hcMrrxO-UDtEBCMvPA1KFwz-Ozfqne-VvGNYk3x=ag6zhQ@mail.gmail.com>
References: <6d98aeb1-22b6-44bd-9545-2dc9078bfde7@treenet.co.nz>
 <1099d15f-ed1d-4072-aac2-1e4f5cec70ff@netfence.it>
 <CA+Y8hcMrrxO-UDtEBCMvPA1KFwz-Ozfqne-VvGNYk3x=ag6zhQ@mail.gmail.com>
Message-ID: <f3557d61-25f3-47be-8bfa-c8327299925a@netfence.it>

On 9/8/24 18:49, Francesco Chemolli wrote:
> Hi,
>  ? ESI websites are not public; they are meant to be used in a reverse 
> proxy environment. The ESI directives are interpreted by the reverse 
> proxy and replaced with other content

Thanks a lot.
So I guess the answer if "NO: I don't need ESI in Squid" :)

  bye
	av.



From ngtech1ltd at gmail.com  Sun Sep  8 22:39:08 2024
From: ngtech1ltd at gmail.com (ngtech1ltd at gmail.com)
Date: Mon, 9 Sep 2024 01:39:08 +0300
Subject: [squid-users] RFC: Removal of ESI Support from Squid
In-Reply-To: <B60BA550-4BA2-4BCF-8FAE-19560B65CAB2@gmail.com>
References: <6d98aeb1-22b6-44bd-9545-2dc9078bfde7@treenet.co.nz>
 <B60BA550-4BA2-4BCF-8FAE-19560B65CAB2@gmail.com>
Message-ID: <029001db023f$ee322320$ca966960$@gmail.com>

Hey Jonathan,

The issues and comparison between 5.x to 6.x can be tested and verified.
The ESI related code can be disabled in these tests and I think that the subject you are talking about is different then the subject of the thread.
I will be happy to try and assist with testing these performance issues since I currently am using in production 6.10.

Eliezer


-----Original Message-----
From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of Jonathan Lee
Sent: Saturday, September 7, 2024 7:30 PM
To: Amos Jeffries <squid3 at treenet.co.nz>
Cc: Squid Developers <squid-dev at lists.squid-cache.org>; squid-users at lists.squid-cache.org
Subject: Re: [squid-users] RFC: Removal of ESI Support from Squid

I use bump splice, with split acls and access lists that match MAC addresses, plus cachemgr, I hate to admit I am using 5.8 because 6.6 has issues with so many errors showing and is so much slower. I do not want to reissue all my certificates, it works perfect for what I need in my mini firewall. 

It took many many hours of config and years of testing and changes to get it to this level of performance. I was very happy that 6.6 was released but it broke a lot of the php gui tools. Again it is like 5.8 is an everything bagel, it?s protected behind a firewall so I am less concerned as well. I am not protecting a massive corporate environment, it is just home issue Sent from my iPhone

> On Sep 7, 2024, at 08:52, Amos Jeffries <squid3 at treenet.co.nz> wrote:
> 
> ?Hi all,
> 
> The ESI (Edge Side Includes) feature of Squid has a growing number of unfixed bugs, more than a few are turning into security issues.
> 
> Also, the current Squid developers do not have spare brain cycles to maintain everything and v7 is seeing a lot more effort to prune away old and unused mechanisms in Squid.
> 
> 
> As such this is a callout to see how much use there is for this feature.
> 
> 
>      DO you need ESI in Squid?  Yes or No.
> 
>   Speak Now, or face regrets at upgrade time.
> 
> 
> 
> Thank You
> Amos
> 
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users
_______________________________________________
squid-users mailing list
squid-users at lists.squid-cache.org
https://lists.squid-cache.org/listinfo/squid-users



From rousskov at measurement-factory.com  Tue Sep 10 14:32:17 2024
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Tue, 10 Sep 2024 10:32:17 -0400
Subject: [squid-users] squid5.5 restart failure due to domain list
 duplication
In-Reply-To: <CAE6tmh8=+VUUUge_e-FFe3sLKhm-Q2eLK7KBSLsETBhYzzSRNw@mail.gmail.com>
References: <CAE6tmh8=+VUUUge_e-FFe3sLKhm-Q2eLK7KBSLsETBhYzzSRNw@mail.gmail.com>
Message-ID: <fdbd0d20-9bca-4dea-a8ba-426dffc7d61f@measurement-factory.com>

On 2024-09-05 01:52, YAMAGUCHI NOZOMI (JIT ICC) wrote:

> If there were duplicate domains in the list of domains used, restarting 
> the squid would cause the process to stop.
> Below is the error statement.
> ERROR: 'a.example.com' is a subdomain of 'example.com
> FATAL: /etc/squid/squid.conf


Hi Nichole,

     FWIW, this and several related problems were fixed in master/v7 
commit 0898d0f4: https://github.com/squid-cache/squid/commit/0898d0f4


> I don't think the same thing happened with my previous squid3.5.

AFAICT, the relevant code is the same in v3.5 and v5.5, but I did not 
check carefully because both versions are not supported by the Squid 
Project. Squid v6.10 does suffer from the same problem as well.


> ?Is it possible to configure the process not to stop even if there are 
> duplicates in the domain list?

Short answer: No. The problematic behavior is hard-coded.

Needless to say, one can (and should) configure Squid using ACLs without 
duplicates.


> ?Are there any other user actions besides duplicate domains that would 
> trigger a process stop?

Yes, lots of configuration errors still result in Squid death. We are 
actively working on eliminating such cases during reconfiguration; if 
our changes are officially accepted, Squid v7 should be significantly 
better in this regard. Please see Matus's earlier response on this 
thread for ways to avoid such deaths.


HTH,

Alex.



From ngtech1ltd at gmail.com  Tue Sep 10 14:56:46 2024
From: ngtech1ltd at gmail.com (NgTech LTD)
Date: Tue, 10 Sep 2024 17:56:46 +0300
Subject: [squid-users] squid5.5 restart failure due to domain list
 duplication
In-Reply-To: <CAE6tmh8=+VUUUge_e-FFe3sLKhm-Q2eLK7KBSLsETBhYzzSRNw@mail.gmail.com>
References: <CAE6tmh8=+VUUUge_e-FFe3sLKhm-Q2eLK7KBSLsETBhYzzSRNw@mail.gmail.com>
Message-ID: <CABA8h=RT=Yy-wdMnK6RowsCFz5AaJnCNVprOPH7hvv_2SAiwiw@mail.gmail.com>

If yo need a helper that will resolve this issue ie cleanup it's pretty
simple to write one for you.

Eliezer

?????? ??? ??, 5 ????? 2024, 8:53, ??? YAMAGUCHI NOZOMI (JIT ICC) ?<
nozomi.yamaguchi.t2 at jalinfotec.co.jp>:

> To whom it may concern,
>
> If there were duplicate domains in the list of domains used, restarting
> the squid would cause the process to stop.
> Below is the error statement.
> ERROR: 'a.example.com' is a subdomain of 'example.com
> FATAL: /etc/squid/squid.conf
> I don't think the same thing happened with my previous squid3.5.
>
> I have a few questions.
> ?Is it possible to configure the process not to stop even if there are
> duplicates in the domain list?
> ?Are there any other user actions besides duplicate domains that would
> trigger a process stop?
>
> Any pointers would be really helpful.
>
> Thanks in advance.
>
> Regards,
> Nichole
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240910/18e103f0/attachment.htm>

From rousskov at measurement-factory.com  Tue Sep 10 15:13:06 2024
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Tue, 10 Sep 2024 11:13:06 -0400
Subject: [squid-users] Questions about Squid configuration
In-Reply-To: <CAK0+96dnXhvu6LyCrULcWfO0uxAiDDKaMm3Kj6a2BkS69yR5Hw@mail.gmail.com>
References: <CAK0+96e5Wpq3LpE4pf8k38nUpsmg+nyyocbOmnXS6=fqR+3C0g@mail.gmail.com>
 <add1024b-da05-46ba-9574-fd8048ec4fa1@measurement-factory.com>
 <CAK0+96eD+B2c_Fa3TpjE5E89WPsY-VaNadDSHK1ritgemkjrTw@mail.gmail.com>
 <c6889a69-d559-4180-ae27-5083e850329b@measurement-factory.com>
 <CAK0+96dnXhvu6LyCrULcWfO0uxAiDDKaMm3Kj6a2BkS69yR5Hw@mail.gmail.com>
Message-ID: <0be99458-53b3-4f37-a86f-48f20c1abe9d@measurement-factory.com>

On 2024-09-05 04:58, ?? wrote:

> I took the advice I received, reviewed the verification details, and
> verified again with the two recommended steps.
> The new verification includes the following four patterns:
> 1. successful communication of a valid request to an allowed site
> [command]
> curl https://pypi.org/ -v --cacert squid.crt -k
> 
> 2. communication of invalid requests to allowed sites is denied
> [command] ?Invalid header host
> curl https://pypi.org/ -H "Host: www.yahoo.co.jp" -v --cacert squid.crt -k
> 
> 3. communication of valid requests to prohibited sites is denied
> [command]
> curl https://www.yahoo.co.jp/ -v --cacert squid.crt -k
> 
> 4. communication of invalid requests to prohibited sites is denied
> [command]
> curl https://www.yahoo.co.jp/ -H "Host:" -v --cacert squid.crt -k


Thank you for following my recommendations, documenting your tests, and 
sharing configurations!

Do you run these "curl" commands on the same box that runs Squid?


> STEP?
> ?1. Remove all of your current http_access rules. Keep ACLs. Perform
> ?host_verify_strict and access tests to confirm that all valid requests
> ?are denied and all invalid requests are rejected. If necessary, ask
> ?questions, file bug reports, patch Squid, and/or adjust your
> ?configuration to pass this test.
> 
> ?Results for validation patterns
> ??403 Forbidden?X-Squid-Error: ERR_ACCESS_DENIED 0
> ??403 Forbidden?X-Squid-Error: ERR_ACCESS_DENIED 0
> ??403 Forbidden?X-Squid-Error: ERR_ACCESS_DENIED 0
> ??403 Forbidden?X-Squid-Error: ERR_ACCESS_DENIED 0

> I expected to get a different response for a valid request than for 
> an invalid request, is this result correct?

AFAICT, the above results are correct.

Your expectations are reasonable, but you are thinking in terms of plain 
HTTP while your Squid is configured to bump intercepted HTTPS 
connections. In your "STEP 1" configuration, Squid does not see the HTTP 
request at all! Squid generates a fake CONNECT request using 
TCP/IP-level information from the intercepted TCP connection (and denies 
that generated request because there are no http_access rules to allow it).

When I was formulating my expectations, I was thinking in terms of HTTP 
requests as well. That is why I expected invalid requests to be rejected 
(by host_verify_strict) rather than denied (by http_access). 
Interception with SslBump makes everything more complex by adding 
another layer of fake CONNECT requests...

Let's consider this step 1 validation successfully completed.


> STEP?
> ?2. Copy http_access rules, with comments, from generated
> ?squid.conf.default. Insert your own access rules in the location marked
> ?by "INSERT YOUR OWN RULE(S) HERE" comment. Perform host_verify_strict
> ?and access tests to confirm that all valid requests to banned sites are
> ?denied, all other valid requests are allowed, and all invalid requests
> ?are rejected. If necessary, ask questions, file bug reports, patch
> ?Squid, and/or adjust your configuration to pass this test.
> 
> ?Results for validation patterns
> ??200 OK
> ??409 Conflict?X-Squid-Error: ERR_CONFLICT_HOST 0
> ??409 Conflict?X-Squid-Error: ERR_CONFLICT_HOST 0
> ??200 OK


> ?4. still returns 200 OK. Is this due to an error in the existing
> configuration? Or do I need to add a new setting?

I believe Test 4 does not result in ERR_CONFLICT_HOST because Squid does 
not consider empty Host headers invalid from host header validation 
point of view: As we discussed earlier, "valueless or missing Host 
header disables all checks".

If you do consider requests with valueless or missing Host header 
invalid, then you need to add a custom "http_access deny" rule that 
would ban them. Look for "req_header" discussion in my earlier answer 
for (untested) hints about detecting requests with a valueless Host header.

However, you may want to double check whether rejecting requests with an 
empty Host header is actually necessary in your environment. Perhaps 
they can be considered valid (which is what Squid does by default)?


My primary concern here is that test 4 request was not blocked by an 
"http_access deny" rule. I suspect that happens because the following 
allow rule matched:

     acl https_port port 443
     http_access allow https_port

I recommend deleting the above http_access rule. AFAICT, you only want 
to allow valid requests targeting specific/allowed sites. You already 
have other rules for that. The above "all HTTPS" rule is too broad and 
is seemingly unnecessary.

I also recommend deleting a similar rule that allows all port-80 
requests, for similar reasons:

     acl http_port port 80
     http_access allow http_port


If you think you do need those two broad rules, please clarify what you 
think you need them for. In other words, what tests would break if you 
remove them?


HTH,

Alex.




> 2024?8?30?(?) 22:27 Alex Rousskov <rousskov at measurement-factory.com>:
>>
>> On 2024-08-29 22:28, ?? wrote:
>>
>>> With the newly reviewed configuration in the attachment
>>
>> OT: Please note that your configuration does not follow the recommended
>> http_access rules order template in squid.conf.default and might,
>> depending on your deployment environment, allow Squid to be used for
>> attacks on 3rd party resources (e.g., ssh services). This observation is
>> not related to your primary question and your "ban certain sites" goal.
>> Following suggestions at the end of this email should fix this problem.
>>
>>
>>> I found the following statement in the following official document
>>> https://www.squid-cache.org/Doc/config/host_verify_strict/
>>>
>>> ? * The host names (domain or IP) must be identical,
>>> ? but valueless or missing Host header disables all checks.
>>>
>>> So I ran an additional validation with an empty Host value, and the
>>> request succeeded for a domain that was not in the whitelist.
>>> The curl command for verification is below, and as before, only
>>> .pypi.org is allowed in the whitelist.
>>>
>>> date;curl https://www.yahoo.co.jp/ -H "Host:" -v --cacert squid.crt -k
>>>
>>> Is it possible for Squid to prevent such requests as well?
>>
>> Yes, a req_header ACL should be able to detect such requests (i.e.
>> requests without a Host header or with an empty Host header value).
>> However, I suspect that "missing Host" is _not_ the problem you should
>> be solving (as detailed below).
>>
>>
>>> I was able to confirm that any one of the SNI, IP, or Host in the
>>> request is incorrect (not whitelist allowed)
>>> and Squid will correctly check and return a 409 Conflict.
>>
>> IMHO, you should target/validate a different set of goals/conditions:
>>
>> * A valid request targeting a banned site should be denied (HTTP 403
>> response, %Ss=TCP_DENIED, %err_code=ERR_ACCESS_DENIED). This denial
>> should be triggered by an "http_access deny" rule, preferably an
>> explicit one. This denial will _not_ happen (and the request will
>> instead be forwarded to the banned site it targets) if you replace all
>> your http_access rules with a single "http_access allow all" line. This
>> denial does not depend on host_verify_strict and underlying code.
>>
>> * An invalid request should be rejected (HTTP 4xx response). This
>> includes, but is not limited to, host_verify_strict-driven rejections.
>> This rejection should happen even if you replace all your http_access
>> rules with a single "http_access allow all" line.
>>
>> AFAICT, your current configuration does not reach "deny valid requests
>> targeting banned sites" goal while your question implies that you are
>> incorrectly relying on host_verify_strict to perform that denial.
>>
>>
>> I recommend the following:
>>
>> 1. Remove all of your current http_access rules. Keep ACLs. Perform
>> host_verify_strict and access tests to confirm that all valid requests
>> are denied and all invalid requests are rejected. If necessary, ask
>> questions, file bug reports, patch Squid, and/or adjust your
>> configuration to pass this test.
>>
>> 2. Copy http_access rules, with comments, from generated
>> squid.conf.default. Insert your own access rules in the location marked
>> by "INSERT YOUR OWN RULE(S) HERE" comment. Perform host_verify_strict
>> and access tests to confirm that all valid requests to banned sites are
>> denied, all other valid requests are allowed, and all invalid requests
>> are rejected. If necessary, ask questions, file bug reports, patch
>> Squid, and/or adjust your configuration to pass this test.
>>
>>
>> HTH,
>>
>> Alex.
>>
>>
>>> 2024?8?8?(?) 21:33 Alex Rousskov <rousskov at measurement-factory.com>:
>>>>
>>>> On 2024-08-06 20:59, ?? wrote:
>>>>
>>>>> When using Squid transparently, is it possible to control the
>>>>> whitelist of the domain to connect to and inspect the Host field in
>>>>> the request header together?
>>>>
>>>> Short answer: Yes.
>>>>
>>>>
>>>>> According to the verification results, the Host field can be inspected
>>>>> by "host_verify_strict on" in squid-transparent.conf, but it seems
>>>>> that the whitelist is not controlled.
>>>>
>>>> AFAICT, the configuration you have shared allows all banned[1] traffic
>>>> to/through https_port. For the problematic test case #5:
>>>>
>>>> All these http_access rules do _not_ match:
>>>>
>>>>> http_access allow localnet whitelist
>>>>> http_access deny localnet whitelist_https !https_port
>>>>> http_access deny localnet whitelist_transparent_https !https_port
>>>>
>>>>
>>>> And then this next rule matches and allows traffic through:
>>>>
>>>>> http_access allow https_port
>>>>
>>>>
>>>> This last http_access rule is not reached:
>>>>
>>>>> http_access deny all
>>>>
>>>>
>>>> N.B. The above analysis assumes that your https_port ACL is explicitly
>>>> defined in your squid.conf to match all traffic received at https_port.
>>>> If you do not have such an ACL defined, then you need to fix that
>>>> problem as well. I recommend naming ACLs differently from directive
>>>> names (e.g., "toHttpsPort" rather than "https_port").
>>>>
>>>>
>>>> Please note that Squid v4 is not supported by the Squid Project and is
>>>> very buggy. I recommend using Squid v6 or later.
>>>>
>>>>
>>>> HTH,
>>>>
>>>> Alex.
>>>> [1] Here, "banned" means "_not_ matching whitelist ACL".
>>>>
>>>>
>>>>> ?Configuration Details
>>>>> ?squid-transparent.conf?Excerpts?
>>>>> #Whitelist
>>>>> acl whitelist dstdomain "/etc/squid/whitelist"
>>>>> acl whitelist dstdomain "/etc/squid/whitelist_transparent"
>>>>> acl whitelist_https dstdomain "/etc/squid/whitelist_https"
>>>>> acl whitelist_transparent_https dstdomain
>>>>> "/etc/squid/whitelist_transparent_https"
>>>>>
>>>>> proxy_protocol_access allow localnet
>>>>> proxy_protocol_access deny all
>>>>> http_access allow localnet whitelist
>>>>> http_access deny localnet whitelist_https !https_port
>>>>> http_access deny localnet whitelist_transparent_https !https_port
>>>>>
>>>>> # Handling HTTP requests
>>>>> http_port 3129 intercept
>>>>> # Handling HTTPS requests
>>>>> https_port 3130 intercept tcpkeepalive=60,30,3 ssl-bump
>>>>> generate-host-certificates=on dynamic_cert_mem_cache_size=20MB
>>>>> tls-cert=/etc/squid/ssl/squid.crt tls-key=/etc/squid/ssl/squid.key
>>>>> cipher=HIGH:MEDIUM:!LOW:!RC4:!SEED:!IDEA:!3DES:!MD5:!EXP:!PSK:!DSS
>>>>> options=NO_TLSv1,NO_SSLv3,SINGLE_DH_USE,SINGLE_ECDH_USE
>>>>> tls-dh=prime256v1:/etc/squid/ssl/bump_dhparam.pem
>>>>> # Start up for squid process
>>>>> http_port 3131
>>>>> http_access allow https_port
>>>>> acl allowed_https_sites ssl::server_name "/etc/squid/whitelist"
>>>>> acl allowed_https_sites ssl::server_name "/etc/squid/whitelist_transparent"
>>>>> acl allowed_https_sites ssl::server_name "/etc/squid/whitelist_https"
>>>>> acl allowed_https_sites ssl::server_name
>>>>> "/etc/squid/whitelist_transparent_https"
>>>>>
>>>>> http_access deny all
>>>>>
>>>>> # strict setting
>>>>> host_verify_strict on
>>>>>
>>>>> # SSL_BUMP
>>>>> sslcrtd_program /usr/lib64/squid/security_file_certgen -s
>>>>> /var/lib/squid/ssl_db -M 20MB
>>>>> acl step1 at_step SslBump1
>>>>> acl step2 at_step SslBump2
>>>>> acl step3 at_step SslBump3
>>>>>
>>>>> ssl_bump bump all
>>>>
>>>>
>>>>> ?Verification of Settings
>>>>> I ran the curl command from each of the client environments that use Squid.
>>>>> 1. if SNI, Destination IP, and HeaderHost are correct, the user should
>>>>> be able to connect to pypi.org
>>>>> Command:
>>>>> date;curl https://pypi.org/ -v --cacert squid_2.crt -k
>>>>> Result: OK
>>>>>
>>>>> 2. rejection of communication to pypi.org if SNI is correct but
>>>>> destination IP and HeaderHost are incorrect
>>>>> Command:
>>>>> date;curl https://pypi.org/ --resolve pypi.org:443:182.22.24.252 -H
>>>>> "Host: www.yahoo.co.jp"  -v --cacert squid_2.crt -k
>>>>> Result: OK (409 Conflict is returned)
>>>>>
>>>>> 3. rejection of communication to pypi.org if SNI and destination IP
>>>>> are correct and HeaderHost is incorrect
>>>>> Command:
>>>>> date;curl https://pypi.org/ -H "Host: www.yahoo.co.jp" -v --cacert
>>>>> squid_2.crt -k
>>>>> Result: OK (409 Confilic returned)
>>>>>
>>>>> 4. rejection of communication to pypi.org if SNI and HeaderHost are
>>>>> correct but destination IP is incorrect
>>>>> Command:
>>>>> date;curl https://pypi.org/ --resolve pypi.org:443:182.22.24.252 -v
>>>>> --cacert squid_2.crt -k
>>>>> Result: OK (409 Confilic returned)
>>>>>
>>>>> 5. if SNI, destination IP, and HeaderHost are all invalid (yahoo.co.jp
>>>>> not registered in whitelist), communication will be rejected
>>>>> Command:
>>>>> date;curl https://yahoo.co.jp/ -v --cacert squid_2.crt -k
>>>>> Result: NG (301 Moved Permanently is returned, but it appears that the
>>>>> communication is reaching yahoo.co.jp)
>>>>
>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> squid-users mailing list
>>>> squid-users at lists.squid-cache.org
>>>> https://lists.squid-cache.org/listinfo/squid-users
>>



From candrecn at gmail.com  Tue Sep 10 17:54:00 2024
From: candrecn at gmail.com (=?UTF-8?Q?Carlos_Andr=C3=A9?=)
Date: Tue, 10 Sep 2024 14:54:00 -0300
Subject: [squid-users] (no subject)
Message-ID: <CAFfC-ziat7gVmEzew7VUhU-0UQfps_D6PvCcJg35=WY+qs5PVg@mail.gmail.com>

Hi ppl!

I'm getting an annoying problem with Squid 5.5 (work ok on old Squid 2.6)

My "delay_class" simple DON'T with if I use a acl external (helper - LDAP
or winbind [ext_wbinfo_group_acl], same problem), delay_class work ok using
a acl proxy_auth or acl src.... but nothing with a external.

I need to use external bcoz I use groups to specify Internet speed/policy
per user.

All I get on cache.log it's this WARNING (Googled this one but don't find
nothing helpful):
================================================================
2024/09/10 14:30:28 kid1| WARNING: Group_Internet ACL is used in context
without an ALE state. Assuming mismatch.
    current master transaction: master62
================================================================

Anyone can give me a hand on this one??
Thanks a lot!!!
Carlos



Bellow there my sample squid.conf:
================================================================

acl SSL_ports port 443 6443 8443 8080 8008
acl Safe_ports port 80          # http
acl Safe_ports port 21          # ftp
acl Safe_ports port 443         # https
acl Safe_ports port 70          # gopher
acl Safe_ports port 210         # wais
acl Safe_ports port 1025-65535  # unregistered ports
acl Safe_ports port 280         # http-mgmt
acl Safe_ports port 488         # gss-http
acl Safe_ports port 591         # filemaker
acl Safe_ports port 777         # multiling http

http_access deny !Safe_ports
http_access deny CONNECT !SSL_ports
http_access allow localhost manager
http_access deny manager
http_access deny to_localhost

http_port 8080

cache_dir ufs /var/spool/squid 8192 32 128

coredump_dir /var/spool/squid

auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth -k
/etc/squid/HTTP.keytab -s HTTP/SERVER at REALM.LAN
auth_param negotiate children 20 startup=2 idle=2

external_acl_type AD ttl=360 children-startup=2 children-max=20
children-idle=2 %LOGIN /usr/lib64/squid/ext_ldap_group_acl -Z -K -R -d -h
192.168.0.10 -b "dc=realm,dc=lan" -D "cn=squid,cn=Users,dc=realm,dc=lan" -w
password1234 -f "(&(cn=%u)(memberof=cn=%g,cn=Users,dc=realm,dc=lan))"

acl kerb-auth proxy_auth REQUIRED

acl Group_Internet external AD Internet_Access
acl User proxy_auth carlos at REALM.LAN
acl src_carlos_ip src 192.168.0.100

http_access allow Group_Internet # work!
http_access deny all


delay_pools 2
delay_class 1 2
delay_class 2 2

delay_parameters 1   4096000/4096000  2048000/2048000
delay_parameters 2   2048000/2048000   512000/512000

delay_access 1 allow Group_Internet  # won't work (Squid ignore it and pass
to next delay_access)
#delay_access 1 allow User           # work!
#delay_access 1 allow src_carlos_ip  # work!
delay_access 1 deny all

delay_access 2 allow all
###############################################################

#
delay_access 1 allow Group_Internet  # won't work (Squid ignore it and pass
to next delay_access)
#delay_access 1 allow User           # work!
#delay_access 1 allow src_carlos_ip  # work!
delay_access 1 deny all

#
delay_access 2 allow all


================================================================
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240910/1028a9a7/attachment.htm>

From candrecn at gmail.com  Tue Sep 10 17:54:44 2024
From: candrecn at gmail.com (=?UTF-8?Q?Carlos_Andr=C3=A9?=)
Date: Tue, 10 Sep 2024 14:54:44 -0300
Subject: [squid-users] Problem with 'delay_access' using acl external
Message-ID: <CAFfC-zh97p=Ar6LOscGqX2Pz0z8z3O6FazQ8vdL70jaJyKc3Pg@mail.gmail.com>

Hi ppl!

I'm getting an annoying problem with Squid 5.5 (work ok on old Squid 2.6)

My "delay_class" simple DON'T with if I use a acl external (helper - LDAP
or winbind [ext_wbinfo_group_acl], same problem), delay_class work ok using
a acl proxy_auth or acl src.... but nothing with a external.

I need to use external bcoz I use groups to specify Internet speed/policy
per user.

All I get on cache.log it's this WARNING (Googled this one but don't find
nothing helpful):
================================================================
2024/09/10 14:30:28 kid1| WARNING: Group_Internet ACL is used in context
without an ALE state. Assuming mismatch.
    current master transaction: master62
================================================================

Anyone can give me a hand on this one??
Thanks a lot!!!
Carlos



Bellow there my sample squid.conf:
================================================================

acl SSL_ports port 443 6443 8443 8080 8008
acl Safe_ports port 80          # http
acl Safe_ports port 21          # ftp
acl Safe_ports port 443         # https
acl Safe_ports port 70          # gopher
acl Safe_ports port 210         # wais
acl Safe_ports port 1025-65535  # unregistered ports
acl Safe_ports port 280         # http-mgmt
acl Safe_ports port 488         # gss-http
acl Safe_ports port 591         # filemaker
acl Safe_ports port 777         # multiling http

http_access deny !Safe_ports
http_access deny CONNECT !SSL_ports
http_access allow localhost manager
http_access deny manager
http_access deny to_localhost

http_port 8080

cache_dir ufs /var/spool/squid 8192 32 128

coredump_dir /var/spool/squid

auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth -k
/etc/squid/HTTP.keytab -s HTTP/SERVER at REALM.LAN
auth_param negotiate children 20 startup=2 idle=2

external_acl_type AD ttl=360 children-startup=2 children-max=20
children-idle=2 %LOGIN /usr/lib64/squid/ext_ldap_group_acl -Z -K -R -d -h
192.168.0.10 -b "dc=realm,dc=lan" -D "cn=squid,cn=Users,dc=realm,dc=lan" -w
password1234 -f "(&(cn=%u)(memberof=cn=%g,cn=Users,dc=realm,dc=lan))"

acl kerb-auth proxy_auth REQUIRED

acl Group_Internet external AD Internet_Access
acl User proxy_auth carlos at REALM.LAN
acl src_carlos_ip src 192.168.0.100

http_access allow Group_Internet # work!
http_access deny all


delay_pools 2
delay_class 1 2
delay_class 2 2

delay_parameters 1   4096000/4096000  2048000/2048000
delay_parameters 2   2048000/2048000   512000/512000

delay_access 1 allow Group_Internet  # won't work (Squid ignore it and pass
to next delay_access)
#delay_access 1 allow User           # work!
#delay_access 1 allow src_carlos_ip  # work!
delay_access 1 deny all

delay_access 2 allow all
###############################################################

#
delay_access 1 allow Group_Internet  # won't work (Squid ignore it and pass
to next delay_access)
#delay_access 1 allow User           # work!
#delay_access 1 allow src_carlos_ip  # work!
delay_access 1 deny all

#
delay_access 2 allow all
================================================================
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240910/409615fd/attachment.htm>

From Josh.Piana at hexcel.com  Tue Sep 10 20:07:37 2024
From: Josh.Piana at hexcel.com (Piana, Josh)
Date: Tue, 10 Sep 2024 20:07:37 +0000
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <20d65da8-8e6e-47f6-9250-04ad8f26ff5a@treenet.co.nz>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <Zs84drvoIpZ1f6DR@fantomas.sk> <58bdfaada3fa46d0938b7346ec04c336@hexcel.com>
 <947309fa-d1fc-4a75-ac49-ea7bc5c5ff12@measurement-factory.com>
 <faffca37-fa59-46ff-80e4-245c37fa90b9@measurement-factory.com>
 <c00942c1c8ab46b5b393d70f32346798@hexcel.com>
 <59274673-47e9-431d-ad45-7fa3a5a8ebca@measurement-factory.com>
 <d063bef52efd4e32a9f9bb27f934e673@hexcel.com>
 <e35fb7b1-12ce-41b8-83c1-51a208739127@measurement-factory.com>
 <f7ca72b579474cc184e22dfd6ef55683@hexcel.com>
 <4537b23c7a534cd3a716ffd4f8471f5e@hexcel.com>
 <c4ae0610-b8b2-4a26-bed9-8cd1bf2b6901@treenet.co.nz>
 <d3ef9e5efbad41c39c74dcdb10f8f91a@hexcel.com>
 <20d65da8-8e6e-47f6-9250-04ad8f26ff5a@treenet.co.nz>
Message-ID: <06d0c1e384f046aba4d065c7618d9922@hexcel.com>

Amos, 

Thank you so much for going through literally our whole config and helping me patch it up. 

I've added, removed, and changed nearly everything you mentioned and the squid.conf starts with no issue. 

I do have a question in regards to these though:
> # blocked content types, by MIME content type, in response
> acl bad_types rep_mime_type -i "/etc/squid/bad_types"
> http_reply_access deny bad_types !bad_exception_urls
> deny_info ERR_BLOCK_TYPE bad_types

You mentioned that these ACL's under the general blacklists section need to be structured differently, what did you mean by that? 

After all the changes I still have the issue where I'm unable to get to local destinations via hostname, but now I'm unable to browse to them via IP as well. With that said, I'm not too concerned because I can provide you our Squid config with ALL of the changes you suggested, and we can see which ACL needs to be fixed in order for this to work. 

Also, I'm willing to generate new logs for you guys if you need it. I've edited the custom_logging to work as you pointed out, so it should be much more approachable. I've also included some of our config that is not related to the issue, just in case we have any glaring performance issues that we worked in or security concerns that need to be addressed. 

Please see config, below: 

##############################################################################
# General
##############################################################################

# email address of cache administrator
cache_mgr <redacted>

# Run as...
cache_effective_user squid
cache_effective_group squid

# squid shutdown time
shutdown_lifetime 5 seconds

##############################################################################
# Logging
##############################################################################

# this makes the logs readable to humans
# logformat custom %tl.%03tu %>a %Ss/%03>Hs %<st %rm %ru %[un %Sh/%<a %mt
logformat custom %tl.%03tu %>a %Ss/%03>Hs %<st %rm %ru %[un \ %Sh/%<a %mt %err_code/%err_detail
access_log daemon:/var/log/squid/access.log custom

# original arcgate had external logging, this setting was off
# this is now enabled
logfile_rotate 10

# debug_options ALL, 1-9, 1 being fatal errors only, 9 being EVERYTHING
debug_options ALL,1

# Buffer logs?  Yes means better performance, but crash debugging can be harder.
buffered_logs off

# Red Hat-ish log names
cache_log /var/log/squid/cache.log

# mime headers can record both the request and the response MIME headers for each HTTP transaction
log_mime_hdrs off

# turning this off allows logs to show full URL's
strip_query_terms off

##############################################################################
# Network - General/misc
##############################################################################

# our HTTP proxy port
http_port 10.46.11.69:8080
# loopback management
http_port 127.0.0.1:3128

# if set to "on", Squid will append your client's IP address in the HTTP requests it forwards
forwarded_for delete

##############################################################################
# Network timeout settings
##############################################################################

# if connect(2) does not succeed in 30 seconds, it is not going to
connect_timeout 30 seconds

# if we do not get any data at all for 2 minutes, we are not going to
read_timeout 2 minutes

# if we do not get an HTTP response in 2 minutes, we are not going to
request_timeout 2 minutes


##############################################################################
# Configuration of the local cache itself
##############################################################################

# default calue are 100 16 256
# first variable is disk space in MB
# 10000 MB = 10 GB
cache_dir ufs /var/spool/squid/ 16000 64 64

# coredump location
coredump_dir /var/spool/squid/

# Replacement policies determine which objects are removed to free space:
# - LRU = least recently used objects are removed first
# - heap GDSF = optimizes object hit at expense of byte hit rate
# - heap LFUDA = optimizes byte hit rate at expense of object hit rate
cache_replacement_policy heap LFUDA
memory_replacement_policy lru

# cache_mem is max for total size of all objects in memory cache
# this is *NOT* the max RAM Squid will use.
cache_mem 256 MB

# Allow larger objects to conserve bandwidth.
maximum_object_size 32 MB

# Allow larger objects since we have more RAM.
maximum_object_size_in_memory 512 KB

# allows for more leinency in requests about to be aborted
quick_abort_min 16 KB
quick_abort_max 1 MB
quick_abort_pct 90

# if client requests to skip less than this amount of data,
# we just retrieve the whole thing
range_offset_limit 64 KB

##############################################################################
# Authentication
##############################################################################

auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth -k /etc/squid/HTTP.keytab -s HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
auth_param negotiate children 10
auth_param negotiate keep_alive on
acl kerb-auth proxy_auth REQUIRED

##############################################################################
# Access control - shared/common ACL definitions
##############################################################################

# ----------------------------------------------------------------------------
# networks and hosts (by name or IP address)

# acl all src all

acl src_self src 127.0.0.0/8
acl src_self src 10.46.11.69

acl to_localhost dst 10.46.11.69

acl localnet src 10.0.0.0/8
acl local_dst_addr dst 10.0.0.0/8

# ----------------------------------------------------------------------------
# protocols (URL schemes)

acl proto_FTP proto FTP
acl proto_HTTP proto HTTP

# ----------------------------------------------------------------------------
# TCP port numbers

# TCP ports for ordinary HTTP
acl http_ports port 80           	   # standard HTTP
acl http_ports port 81         	   # common alternative
acl http_ports port 8001       	   # epson.com support sub-site
acl http_ports port 8080      	   # common alternative
acl http_ports port 88 8000 8888 # ad-hoc services
acl http_ports port 1080        	  # SOCK frontend to HTTP service
acl http_ports port 21-22      	  # http:// frontend to FTP service
acl http_ports port 443       	  # https:// URLs

# TCP ports for HTTP-over-SSL
acl Ssl_ports port 443          # standard HTTPS
acl Ssl_ports port 9571         # lexmark.com
acl Ssl_ports port 22           # SSH

# TCP ports for plain FTP command channel
acl ftp_ports port 21

# ----------------------------------------------------------------------------
# HTTP methods (and pseudo-methods)

acl CONNECT method CONNECT

##############################################################################
# Access control - general proxy
##############################################################################

# define and allow new ACL for "Safe_ports"
acl Safe_Ports any-of http_ports Ssl_ports ftp_ports

# ----------------------------------------------------------------------------
# basic deny rules

# deny anything not from the LAN
http_access deny !localnet

# deny unauthorized access and DoS attacks
http_access deny !Safe_ports
http_access deny CONNECT !Ssl_ports

# blocks self to self connections
http_access deny to_localhost

# ----------------------------------------------------------------------------
# allow without authentication

# allow trusted hosts without authentication
# these are just ip's on the 10.46.11.x network
acl authless_src src "/etc/squid/authless_src"
http_access allow authless_src

# allow the following destinations without authentication
# hostnames, websites, and domains go here
acl authless_dst dstdomain "/etc/squid/authless_dst"
acl authless_dst dstdomain .ad.arc-tech.com
acl authless_dst dstdomain .hexcelssp.com hexcelssp
http_access allow authless_dst

# need an ACL that uses "whitelist" first
# http_access allow whitelist

# ----------------------------------------------------------------------------
# block before authentication

# blocked destinations, by host or domain, before authentication
# websites that are auto-deny
acl bad_domains_preauth dstdomain "/etc/squid/bad_domains_preauth"
http_access deny bad_domains_preauth

# ----------------------------------------------------------------------------
# require proxy authentication

# ********************************************************************
# * anything past this point requires users to authenticate to proxy *
# ********************************************************************

# block basic unauthenticated users
http_access deny !kerb-auth

# block certain user IDs from using proxy server
# list of ad users and service accounts to automatically deny proxy
acl block_user proxy_auth_regex -i "/etc/squid/block_user"
http_access deny block_user all

# ----------------------------------------------------------------------------
# general whitelist

# whitelist for locations, overrides blocking
acl bad_exception_urls urlpath_regex -i "/etc/squid/bad_exception_urls"

# ----------------------------------------------------------------------------
# selective whitelists
# these override the general blacklists by explictly allowing things

# list of users for this
acl mmedia_users proxy_auth_regex -i "/etc/squid/mmedia_users"

# list of sites for this
acl mmedia_sites dstdomain "/etc/squid/mmedia_sites"

# access rule to allow the above
http_access allow mmedia_users mmedia_sites

# ----------------------------------------------------------------------------
# executable blocking

# file extensions that are blocked
# don't add .COM files here, causes issues
acl exec_files urlpath_regex -i "/etc/squid/exec_files"

# usernames not to block
acl exec_users proxy_auth_regex -i "/etc/squid/exec_users"

# activate
http_access deny !bad_exception_urls !exec_users exec_files
deny_info ERR_BLOCK_TYPE exec_files

# ----------------------------------------------------------------------------
# general blacklists
# porn, wastes of bandwidth, etc.

# blocked destinations, by host or domain
# sites we don't want people using
acl bad_domains dstdomain "/etc/squid/bad_domains"
http_access deny !bad_exception_urls bad_domains
deny_info ERR_BLOCK_DST bad_domains

# blocked destinations, by host or domain, regex pattern
acl bad_domains_regex dstdom_regex -i "/etc/squid/bad_domains_regex"
http_access deny !bad_exception_urls bad_domains_regex
deny_info ERR_BLOCK_DST bad_domains_regex

# blocked destinations, by complex URL
acl bad_urls urlpath_regex -i "/etc/squid/bad_urls"
http_access deny !bad_exception_urls bad_urls
deny_info ERR_BLOCK_DST bad_urls

# blocked content types, by apparent file name
acl bad_files urlpath_regex -i "/etc/squid/bad_files"
http_access deny !bad_exception_urls bad_files
deny_info ERR_BLOCK_TYPE bad_files

# blocked content types, by MIME content type, in response
acl bad_types rep_mime_type -i "/etc/squid/bad_types"
http_reply_access deny !bad_exception_urls bad_types
deny_info ERR_BLOCK_TYPE bad_types

# ----------------------------------------------------------------------------
# catch-all defaults

# allow authenticated clients after all other ACL's
http_access allow kerb-auth

# deny any request we missed in the above
http_access deny all

# if no other ACL applies, allow
http_reply_access allow all

##############################################################################
# END OF FILE
##############################################################################


As always, thank you for all of your help. 
Josh


-----Original Message-----
From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of Amos Jeffries
Sent: Saturday, September 7, 2024 10:51 AM
To: squid-users at lists.squid-cache.org
Subject: Re: [squid-users] Unable to access internal resources via hostname

Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.


On 6/09/24 03:56, Piana, Josh wrote:
> Hello Amos,
>
> While the comments did say that it was just the 10.46.11.0 range, I don't think there's any other ACL forcing that. I tried adding the the two internal sites that are being blocked by their IP, restarted Squid, and tested. Still being blocked. You are right though, both of those web addresses are on a different IP scheme. Ideally we want anything on 172.0.0.0 to be allowed, and 10.96.0.0. The other question I have is, even if we specify those sites IP as "allowed", shouldn't we be able to brwose to them by their hostname as well?


That depends no your configuration policy. The default squid.conf only checks that clients are from the LAN and not doing any nasty protocol trick attacks.


>
> Currently, those internal sites ARE reachable. But only if we use IP. While this doesn't bother me, personally, the rest of our users would like to keep browsing via hostname as that's what they're used to and what many have shortcuts for.
>

Currently I see the ACL "local_dst_dom" is commented out (disabled).

I guess you also have not listed the hostname or domain in the file loaded by "authless_dst" ACL.




> In regards to the results of /etc/resolv.conf, see below:
> search ad.arc-tech.com
> nameserver 10.46.11.67
>

Okay. Then the "NDOT" default of 1 will be applied. So for these HTTP
messages:

   CONNECT hexp:443 HTTP/1.1
   Host: hexp
   ...


Will be interpreted by Squid as URL:

  https://hexp/


The "dstdomain" ACL will try to match "hexp" exactly.

The "dst" ACL will try to match IPs of "hexp.ad.arc-tech.com"



> There must be a better way to just allow internal to internal traffic without needing to authenticate through the web proxy. The old config had it, but that was part of the issue. We have no idea how that was working, it didn't make sense at all and it was a bit outdated, Version 2.5 as opposed to our current 5.5.
>
> I'm happy to post out config again here, as it's changed a bit and I have cleaned it up.
>
> # squid.conf - Squid web cache configuration
>
> ######################################################################
> ########
> # General
> ######################################################################
> ########
>
> # 2020MAR23 running out with just 1024 as we switch to Hexcel.com OMA 
> max_filedesc 4096
>

Unrelated to your problem, but FYI this should probably be much larger (ie 64K minimum, up to 100x expected user count) for a production proxy.


>
> ######################################################################
> ########
> # Logging
> ######################################################################
> ########
>
> # this makes the logs readable to humans logformat custom %tl.%03tu 
> %>a %Ss/%03>Hs %<st %rm %ru %[un %Sh/%<a %mt access_log 
> daemon:/var/log/squid/access.log custom
>
> # this gives better error reporting
> logformat custom %err_code/%err_detail access_log 
> daemon:/var/log/squid/access.log custom
>

This repeat of "custom" will cause issues.

IIRC this was added misunderstanding of Alex instructions.
What he meant was to **add** "%err_code/%err_detail" to your existing "custom" format.

Like this:

logformat custom %tl.%03tu %>a %Ss/%03>Hs %<st %rm %ru %[un \
     %Sh/%<a %mt %err_code/%err_detail


> # Red Hat-ish log names
> cache_log /var/log/squid/cache.log
> cache_access_log /var/log/squid/access.log

This setting opens a third logger writing to access.log, causing more issues.

Remove this "cache_access_log" line.


>
> # store_log is only useful for debugging cache_store_log none


FYI, off by default on current Squid. You can probably erase this setting entirely now.


> ######################################################################
> ########
> # Network - General/misc
> ######################################################################
> ########
>
> # our HTTP proxy port
> http_port 10.46.11.69:8080
> # loopback management
> http_port 127.0.0.1:3128


FWIW, you have denied access to "dst 127.0.0.0/8". So traffic to this port will be rejected.


>
> # disable ICP, port is typically 3130
> icp_port 0

FYI; disabled by default in modern Squid. You can remove "icp_port".

>
> # if set to "on", Squid will append your client's IP address in the 
> HTTP requests it forwards forwarded_for off

"off" will send the text "unknown".

It is better to use "transparent" (pass-thru unchanged) or "delete"
(erase if existing).


> ######################################################################
> ########
> # Authentication
> ######################################################################
> ########
>
> auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth 
> -k /etc/squid/HTTP.keytab -s 
> HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
> auth_param negotiate children 10
> auth_param negotiate keep_alive on
> acl kerb-auth proxy_auth REQUIRED
>
> ######################################################################
> ######## # Access control - shared/common ACL definitions 
> ######################################################################
> ########
>
> # 
> ----------------------------------------------------------------------
> ------ # networks and hosts (by name or IP address)
>
> # acl all src all
>
> acl src_self src 127.0.0.0/8
> acl src_self src 10.46.11.69
>
> acl dst_self dst 127.0.0.0/8
> acl dst_self dst 10.46.11.69


FYI, there are more IPs than just 127.0.0.0/8 which can be problematic as loopback sources.

Replace "dst_self" with:

  acl to_localhost dst 10.46.11.69


>
> acl from_arc src 10.46.0.0/15
>
> acl local_dst_addr dst 10.0.0.0/8
> acl local_dst_addr dst 172.0.0.0/8
>
> # 
> ----------------------------------------------------------------------
> ------
> # protocols (URL schemes)
>
> acl proto_FTP proto FTP
> acl proto_HTTP proto HTTP
>
> # 
> ----------------------------------------------------------------------
> ------
> # TCP port numbers
>
> # TCP ports for ordinary HTTP
> acl http_ports port 80                # standard HTTP
> acl http_ports port 81                # common alternative
> acl http_ports port 8001      # epson.com support sub-site
> acl http_ports port 8080      # common alternative


Other ports that are common:

  acl http_ports port 88 8000 8888 # ad-hoc services
  acl http_ports port 1080  # SOCK frontend to HTTP service
  acl http_ports port 21-22 # http:// frontend to FTP service
  acl http_ports port 443   # https:// URLs


Or really, **any** port can be valid now that Alt-Svc is widely used.

>
> # TCP ports for HTTP-over-SSL
> acl Ssl_ports port 443
> acl Ssl_ports port 9571               # lexmark.com
>
> # TCP ports for plain FTP command channel acl ftp_ports port 21
>
> # TCP ports for SSH/SFTP (secure shell) acl ssh_ports port 22

FTR, "ssh_ports" is unused. SSH and SFTP can only use Squid via CONNECT tunnel anyway. So you should list this port as part of "Ssl_ports".

>
> # 
> ----------------------------------------------------------------------
> ------
> # HTTP methods (and pseudo-methods)
>
> acl method_CONNECT method CONNECT

FYI: we have a built-in for modern Squid:

   acl CONNECT method CONNECT

You can replace all "method_CONNECT" with just "CONNECT".


>
> # list of standard HTTP methods
> acl methods_std method GET HEAD POST PUT DELETE acl methods_std method 
> TRACE OPTIONS
>

Consider removing these ACLs and the extra complexity they create.
Modern HTTP considers many other method names "standard" and current Squid follows the standard-required handling for all of them, and special ones.


> ######################################################################
> #######
> # Access control - general proxy
> ######################################################################
> ########
>
> # This major section is about which HTTP proxy clients can use Squid # 
> as an HTTP proxy server.  As opposed to the maintenance/admin-type # 
> stuff in the previous section.
>
> # 
> ----------------------------------------------------------------------
> ------
> # basic deny rules
> # these block stuff that's never good
> # we put most denies after user-auth so we know *who* is trying
>

Missing basic security to prevent DoS and protocol hijacking attacks:


  http_access deny !Safe_ports
  http_access deny CONNECT !Ssl_ports


You can define Safe_ports like this:

   acl Safe_Ports any-of http_ports Ssl_ports ftp_ports



> # block attempts to connect to proxy server via proxy http_access deny 
> dst_self
>

Use:
   http_access deny to_localhost



> # block clients which are the proxy server machine itself http_access 
> deny src_self
>

FYI, there should be nothing wrong with other software running on the proxy machine (eg software updaters) using Squid. They have to obey the same rules an any other client.


> # deny anything not from the LAN
> http_access deny !from_arc

FYI, we use "localnet" ACL to define the LAN. Makes it a bit easier for others to assist if you use the same. Up to you though.


>
> # 
> ----------------------------------------------------------------------
> ------
> # allow without authentication
> # these rules allow certain connects without user authentication # 
> these allow any protocol/method/etc
>
> #                 ***** IMPORTANT *****
> # Adding to these lists also exempts from all content filtering.
> # In particular, executables will be allowed to download!
> #                 ***** IMPORTANT *****
>
> # allow connects to local destinations without authentication # by 
> domain name from URL # acl local_dst_dom dstdomain ad.arc-tech.com
> # http_access       allow local_dst_dom
> # http_reply_access allow local_dst_dom


You have a domain name whitelist ACL two sections below.
You can remove the above, and list and use the later one for both
"local" and other domains.


>
> # by IP address name resolves to
> http_access       allow local_dst_addr
> # http_reply_access allow local_dst_addr
>

Maybe rename "local_dst_addr" to "whitelist_dst_ips" for clarity on what
it is doing.


Which brings up a security issue: When you list the entire LAN range in
this ACL, anyone accessing the proxy is allowed to do whatever they want
to your LAN machines. That includes all LAN **and** WAN connections.

Additionally, the bypass of authentication leaves you no trace that this
was actually a user, and not some infected LAN machine spreading malware
across your LAN. Which is rather risky.


Prefer to keep by-IP whitelist's empty or minimal content.



> # allow trusted hosts without authentication
> # these are just ip's on the 10.46.11.x network
> acl authless_src src "/etc/squid/authless_src"
> http_access       allow authless_src
> # http_reply_access allow authless_src
>
> # allow the following destinations without authentication
> # list of random approved websites
> # whats the advantage of not authenticating?
> acl authless_dst dstdomain "/etc/squid/authless_dst"
> http_access       allow authless_dst
> # http_reply_access allow authless_dst
>

This should be combined with "local_dst_dom". Just use different lines
like so:

  acl authless_dst dstdomain "/etc/squid/authless_dst"
  acl authless_dst dstdomain .ad.arc-tech.com
  acl authless_dst dstdomain .hexcelssp.com hexcelssp

  http_access allow whitelist


> # ----------------------------------------------------------------------------
> # block before authentication
> # these rules block certain connects without user authentication
> # done for software which handles proxy auth requests badly
> # for example, popping up many auth prompts
> # this does mean we cannot whitelist for users
>
> # blocked destinations, by host or domain, before authentication
> # websites that are auto-deny
> acl bad_domains_preauth dstdomain "/etc/squid/bad_domains_preauth"
> http_access deny bad_domains_preauth
>
> # ----------------------------------------------------------------------------
> # require proxy authentication
>
> # ********************************************************************
> # * anything past this point requires users to authenticate to proxy *
> # ********************************************************************
>
> # Uncomment these lines to disable authentication requirement for all
> # but a few test boxes.  Useful if NTLM gets broken.
> # acl from_test_boxes src 10.2.1.5
> # http_access allow !from_test_boxes from_arc
>

FYI, you have "deny !from_arc" earlier above.

This is simpler and does the same thing as the above line:

   # http_access allow !from_test_boxes


> # block clients which are not authenticated
> # http_access deny !authenticated
>

You named the ACL "kerb-auth", not "authenticated".


> # block certain user IDs from using proxy server
> # list of ad users and service accounts to automatically deny proxy
> acl block_user proxy_auth_regex -i "/etc/squid/block_user"
> http_access deny block_user


I suggest this to prevent re-login loop for these forbidden services:

  http_access deny !kerb-auth
  http_access deny block_user all


>
> # ----------------------------------------------------------------------------
> # general whitelist
>
> # whitelist for locations/sites (override blocking)
> # allows complex URLs
> # some bad_urls patterns are generic
> # they block suspicous URLs or generally unwanted sites
> # this whitelist can make specific exceptions within those
> acl bad_exception_urls url_regex -i "/etc/squid/bad_exception_urls"
>
> # ----------------------------------------------------------------------------
> # executable blocking
>
> # we do this separately from other content blocking
> # in order to allow ITLIB to still download
> # doing it with other blocking causes a flood of browser auth req's
> # for users visting sites with video
>
> # file extensions to block
> # don't try to block .COM files here
> # it will get confused with .com domain and block too many things
> acl exec_files url_regex -i "/etc/squid/exec_files"

Consider using the "urlpath_regex" ACL type instead. It does not match
against the scheme://domain:port part of URLs.


>
> # usernames not to block
> acl exec_users proxy_auth_regex -i "/etc/squid/exec_users"
>
> # activate
> http_access deny !bad_exception_urls !exec_users exec_files
> deny_info ERR_BLOCK_TYPE exec_files
>
> # ----------------------------------------------------------------------------
> # selective whitelists
>
> # these override the general blacklists by explictly allowing things
> # some multimedia services (I.E. YouTube) are permitted for certain users
> # exempts them from content blocking in this section
>
> # list of users for this
> acl mmedia_users proxy_auth_regex -i "/etc/squid/mmedia_users"
>
> # list of sites for this
> acl mmedia_sites dstdomain "/etc/squid/mmedia_sites"
>
> # if a mmedia user attempts to access a mmedia site via appropriate protocols, allow it
> # done for both HTTP/TCP/80 and HTTP/SSL/443
> # done for both HTTP request as well as HTTP reply/response
> # otherwise the later bad_types Content-Type multimedia blocking rule kicks in
>
> http_access       allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
> # tp_reply_access allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
>
> http_access       allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users
> # http_reply_access allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users


FYI, Websites like YouTube can dynamically negotiate the media source
ports to be non-standard values using Alt-Svc headers.

If you had the default security settings at the top of your http_access
rules:

  http_access deny !Safe_ports
  http_access deny CONNECT !SSL_Ports

... you would not need to make (bad) assumptions about the protocols and
ports used by media sites here.

Also, "mmedia_users" being last on the line risks a 407 re-auth
challenge occuring. Best place it earlier.


Leaving these rules as:

    http_access allow mmedia_users mmedia_sites


>
> # ----------------------------------------------------------------------------
> # general blacklists
> # porn, wastes of bandwidth, etc.
>
>
> # blocked destinations, by host or domain
> # sites we don't want people using
> acl bad_domains dstdomain "/etc/squid/bad_domains"
> http_access deny !bad_exception_urls bad_domains
> deny_info ERR_BLOCK_DST       bad_domains
>
> # blocked destinations, by host or domain, regex pattern
> acl bad_domains_regex dstdom_regex -i "/etc/squid/bad_domains_regex"
> http_access deny !bad_exception_urls bad_domains_regex
> deny_info ERR_BLOCK_DST       bad_domains_regex
>
> # blocked destinations, by complex URL
> # typical use: block just part of a site, by URL path
> # example use: block just the advertsing section of a site
> acl bad_urls url_regex -i "/etc/squid/bad_urls"
> http_access deny !bad_exception_urls bad_urls
> deny_info ERR_BLOCK_DST       bad_urls
>
> # blocked content types, by apparent file name
> acl bad_files urlpath_regex -i "/etc/squid/bad_files"
> http_access deny !bad_exception_urls bad_files
> deny_info ERR_BLOCK_TYPE bad_files
>
> # blocked content types, by MIME content type, in response
> acl bad_types rep_mime_type -i "/etc/squid/bad_types"
> # http_reply_access deny bad_types !bad_exception_urls
> deny_info ERR_BLOCK_TYPE bad_types


FYI, in order for the deny_info action to be taken the ACL it is
attached to must be the final one on a line.

Previous config was fine, but this "bad_types" use will not work. You
need to re-order the access checks like this:


  # http_reply_access deny !bad_exception_urls bad_types


>

This part from here ...

> # ----------------------------------------------------------------------------
> # standard web (HTTP PUT/GET/etc) access
>
> # We basically allow any auth'ed user to connect via HTTP to anywhere,
> # so long as it uses a standard port, and is not a direct CONNECT
> # attempt, or blocked, or any of the other stuff above.
>
> http_access allow http_ports proto_HTTP methods_std
>
> # ----------------------------------------------------------------------------
> # direct CONNECT for HTTP-over-SSL (HTTPS)
>
> http_access allow method_CONNECT ssl_ports
>
> # ----------------------------------------------------------------------------
> # deny any other CONNECT attempts
>
> http_access deny method_CONNECT
>
> # ----------------------------------------------------------------------------
> # FTP via HTTP proxy
>
> http_access allow ftp_ports proto_FTP
>

... to here.

Is better handled by the default squid.conf:

  http_access deny !Safe_ports
  http_access deny CONNECT !Ssl_ports

Placed at the top of your http_access lines.


> # ----------------------------------------------------------------------------
> # catch-all defaults
> http_access allow kerb-auth
>
> # deny any request we missed in the above
> http_access deny all
>
> # If we allowed the request, allow the reply (HTTP response) as well.
> # Rules above many allow or deny specific reply before now.
> # If nothing more specific matched, we allow.
> # This should be OK since we filter mainly on requests.
> # http_reply_access allow all
>

FWIW, it is hard to tell what the exact last reply action could have
been. So I would un-comment this allow line to be certain it is what
happens.


> ##############################################################################
> # END OF FILE
> ##############################################################################
>

HTH
Amos

_______________________________________________
squid-users mailing list
squid-users at lists.squid-cache.org
https://lists.squid-cache.org/listinfo/squid-users


From rousskov at measurement-factory.com  Tue Sep 10 21:11:15 2024
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Tue, 10 Sep 2024 17:11:15 -0400
Subject: [squid-users] Problem with 'delay_access' using acl external
In-Reply-To: <CAFfC-zh97p=Ar6LOscGqX2Pz0z8z3O6FazQ8vdL70jaJyKc3Pg@mail.gmail.com>
References: <CAFfC-zh97p=Ar6LOscGqX2Pz0z8z3O6FazQ8vdL70jaJyKc3Pg@mail.gmail.com>
Message-ID: <e3e00d89-2c8f-44cd-a963-bec95c48c642@measurement-factory.com>

On 2024-09-10 13:54, Carlos Andr? wrote:

> My "delay_class" simple DON'T with if I use a acl external (helper - 
> LDAP or winbind [ext_wbinfo_group_acl], same problem), delay_class work 
> ok using a acl proxy_auth or acl src.... but nothing with a external.

I believe your configuration is suffering from two semi-independent 
problems:


Problem A:

External ACLs are so called "slow" or "asynchronous" ACLs. They should 
not be used together with directives that do not support "slow" ACLs. It 
is not explicitly documented, but delay_access directive does _not_ 
support slow ACLs AFAICT. It only supports "fast" ACLs.

N.B. Due to ACL caching side effects, using slow ACLs with directives 
that do not support them may appear to "work" in certain cases, but it 
is not supported and should not be relied upon.


> I need to use external bcoz I use groups to specify Internet 
> speed/policy per user.

I recommend checking your Group_Internet ACL at http_access time instead 
of delay_access time; http_access directive supports slow ACLs and 
should be evaluated before delay_access is.

Use annotate_transaction or annotate_client ACLs to remember whether 
Group_Internet ACL has matched at http_access evaluation time. Use a 
"note" ACL to check whether those annotations have been set. The "note" 
ACL is a "fast" ACL. annotate_transaction documentation in 
squid.conf.documented has a relevant example. There are also potentially 
relevant examples in bug #4993 report (among others):
https://bugs.squid-cache.org/show_bug.cgi?id=4993


Problem B:

> 2024/09/10 14:30:28 kid1| WARNING: Group_Internet?ACL is used in context 
> without an ALE state. Assuming mismatch.

I have not checked carefully, but this could be a bug fixed in v6. The 
corresponding commit says "delay_pool_access lacked ... details beyond 
src/dst addresses".

Upgrade to v6+. If you are still getting a similar runtime WARNING, then 
there is another Squid bug that needs to be fixed.


HTH,

Alex.


> Bellow there my sample squid.conf:
> ================================================================
> 
> acl SSL_ports port 443 6443 8443 8080 8008
> acl Safe_ports port 80 ? ? ? ? ?# http
> acl Safe_ports port 21 ? ? ? ? ?# ftp
> acl Safe_ports port 443 ? ? ? ? # https
> acl Safe_ports port 70 ? ? ? ? ?# gopher
> acl Safe_ports port 210 ? ? ? ? # wais
> acl Safe_ports port 1025-65535 ?# unregistered ports
> acl Safe_ports port 280 ? ? ? ? # http-mgmt
> acl Safe_ports port 488 ? ? ? ? # gss-http
> acl Safe_ports port 591 ? ? ? ? # filemaker
> acl Safe_ports port 777 ? ? ? ? # multiling http
> 
> http_access deny !Safe_ports
> http_access deny CONNECT !SSL_ports
> http_access allow localhost manager
> http_access deny manager
> http_access deny to_localhost
> 
> http_port 8080
> 
> cache_dir ufs /var/spool/squid 8192 32 128
> 
> coredump_dir /var/spool/squid
> 
> auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth -k 
> /etc/squid/HTTP.keytab -s HTTP/SERVER at REALM.LAN
> auth_param negotiate children 20 startup=2 idle=2
> 
> external_acl_type AD ttl=360 children-startup=2 children-max=20 
> children-idle=2 %LOGIN /usr/lib64/squid/ext_ldap_group_acl -Z -K -R -d 
> -h 192.168.0.10 -b "dc=realm,dc=lan" -D 
> "cn=squid,cn=Users,dc=realm,dc=lan" -w password1234 -f 
> "(&(cn=%u)(memberof=cn=%g,cn=Users,dc=realm,dc=lan))"
> 
> acl kerb-auth proxy_auth REQUIRED
> 
> acl Group_Internet external AD Internet_Access
> acl User proxy_auth carlos at REALM.LAN
> acl src_carlos_ip src 192.168.0.100
> 
> http_access allow Group_Internet # work!
> http_access deny all
> 
> 
> delay_pools 2
> delay_class 1 2
> delay_class 2 2
> 
> delay_parameters 1 ? 4096000/4096000 ?2048000/2048000
> delay_parameters 2 ? 2048000/2048000 ? 512000/512000
> 
> delay_access 1 allow Group_Internet ?# won't work (Squid ignore it and 
> pass to next delay_access)
> #delay_access 1 allow User ? ? ? ? ? # work!
> #delay_access 1 allow src_carlos_ip ?# work!
> delay_access 1 deny all
> 
> delay_access 2 allow all
> ###############################################################
> 
> #
> delay_access 1 allow Group_Internet ?# won't work (Squid ignore it and 
> pass to next delay_access)
> #delay_access 1 allow User ? ? ? ? ? # work!
> #delay_access 1 allow src_carlos_ip ?# work!
> delay_access 1 deny all
> 
> #
> delay_access 2 allow all
> ================================================================
> 
> 
> 
> 
> 
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users



From ankor2023 at gmail.com  Thu Sep 12 06:28:05 2024
From: ankor2023 at gmail.com (Andrey K)
Date: Thu, 12 Sep 2024 09:28:05 +0300
Subject: [squid-users] GET /squid-internal-dynamic/netdb requests to the
 parent proxy
Message-ID: <CADJd0Y3gTZ4zL6_79wmUcF25dR_c=40VteBa2h5zx72Ei_V+GA@mail.gmail.com>

Hello,

I found that my SQUID proxy periodically sends HTTP-GET requests to the
parent proxy for /squid-internal-dynamic/netdb endpoint:
7 25.167034632 myproxyIP ? parentproxyIP TCP 76 47420 ? 3128[SYN] Seq=0
8 25.268121443 parentproxyIP ? myproxyIP TCP 76 3128 ? 47420[SYN, ACK]
9 25.268197532 myproxyIP ? parentproxyIP TCP 68 47420 ? 3128[ACK] Seq=1
10 25.268379801 myproxyIP ? parentproxyIP HTTP 202 GET
/squid-internal-dynamic/netdb HTTP/1.1
11 25.367607619 parentproxyIP ? myproxyIP TCP 68 3128 ? 47420[ACK] Seq=1
12 25.368367754 parentproxyIP ? myproxyIP TCP 470 HTTP/1.1 407
ProxyAuthentication Required
13 25.368388337 myproxyIP ? parentproxyIP TCP 68 47420 ? 3128[ACK] Seq=135
14 25.368701804 myproxyIP ? parentproxyIP TCP 68 47420 ? 3128[FIN, ACK]

Could you advise me how to disable these requests?
My config of the cache peer looks like:
cache_peer parentproxy1 parent 3128 0 proxy-only no-query round-robin
cache_peer_access  parentproxy1 allow x-sites
cache_peer_access  parentproxy1 deny all

Kind regards,
       Ankor.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240912/b264071f/attachment.htm>

From uhlar at fantomas.sk  Thu Sep 12 08:17:37 2024
From: uhlar at fantomas.sk (Matus UHLAR - fantomas)
Date: Thu, 12 Sep 2024 10:17:37 +0200
Subject: [squid-users] GET /squid-internal-dynamic/netdb requests to the
 parent proxy
In-Reply-To: <CADJd0Y3gTZ4zL6_79wmUcF25dR_c=40VteBa2h5zx72Ei_V+GA@mail.gmail.com>
References: <CADJd0Y3gTZ4zL6_79wmUcF25dR_c=40VteBa2h5zx72Ei_V+GA@mail.gmail.com>
Message-ID: <ZuKjoeR3ZexFHV1c@fantomas.sk>

On 12.09.24 09:28, Andrey K wrote:
>I found that my SQUID proxy periodically sends HTTP-GET requests to the
>parent proxy for /squid-internal-dynamic/netdb endpoint:
>7 25.167034632 myproxyIP ? parentproxyIP TCP 76 47420 ? 3128[SYN] Seq=0
>8 25.268121443 parentproxyIP ? myproxyIP TCP 76 3128 ? 47420[SYN, ACK]
>9 25.268197532 myproxyIP ? parentproxyIP TCP 68 47420 ? 3128[ACK] Seq=1
>10 25.268379801 myproxyIP ? parentproxyIP HTTP 202 GET
>/squid-internal-dynamic/netdb HTTP/1.1
>11 25.367607619 parentproxyIP ? myproxyIP TCP 68 3128 ? 47420[ACK] Seq=1
>12 25.368367754 parentproxyIP ? myproxyIP TCP 470 HTTP/1.1 407
>ProxyAuthentication Required
>13 25.368388337 myproxyIP ? parentproxyIP TCP 68 47420 ? 3128[ACK] Seq=135
>14 25.368701804 myproxyIP ? parentproxyIP TCP 68 47420 ? 3128[FIN, ACK]
>
>Could you advise me how to disable these requests?
>My config of the cache peer looks like:
>cache_peer parentproxy1 parent 3128 0 proxy-only no-query round-robin
>cache_peer_access  parentproxy1 allow x-sites
>cache_peer_access  parentproxy1 deny all

use no-netdb-exchange in cache_peer directive
http://www.squid-cache.org/Doc/config/cache_peer/
-- 
Matus UHLAR - fantomas, uhlar at fantomas.sk ; http://www.fantomas.sk/
Warning: I wish NOT to receive e-mail advertising to this address.
Varovanie: na tuto adresu chcem NEDOSTAVAT akukolvek reklamnu postu.
He who laughs last thinks slowest.


From Josh.Piana at hexcel.com  Mon Sep 16 13:58:40 2024
From: Josh.Piana at hexcel.com (Piana, Josh)
Date: Mon, 16 Sep 2024 13:58:40 +0000
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <20d65da8-8e6e-47f6-9250-04ad8f26ff5a@treenet.co.nz>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <Zs84drvoIpZ1f6DR@fantomas.sk> <58bdfaada3fa46d0938b7346ec04c336@hexcel.com>
 <947309fa-d1fc-4a75-ac49-ea7bc5c5ff12@measurement-factory.com>
 <faffca37-fa59-46ff-80e4-245c37fa90b9@measurement-factory.com>
 <c00942c1c8ab46b5b393d70f32346798@hexcel.com>
 <59274673-47e9-431d-ad45-7fa3a5a8ebca@measurement-factory.com>
 <d063bef52efd4e32a9f9bb27f934e673@hexcel.com>
 <e35fb7b1-12ce-41b8-83c1-51a208739127@measurement-factory.com>
 <f7ca72b579474cc184e22dfd6ef55683@hexcel.com>
 <4537b23c7a534cd3a716ffd4f8471f5e@hexcel.com>
 <c4ae0610-b8b2-4a26-bed9-8cd1bf2b6901@treenet.co.nz>
 <d3ef9e5efbad41c39c74dcdb10f8f91a@hexcel.com>
 <20d65da8-8e6e-47f6-9250-04ad8f26ff5a@treenet.co.nz>
Message-ID: <8faab648625547fc88a069512da16c4f@hexcel.com>

Good morning, 

Tried a few other things today. 

I removed all of the special, custom ACL's and we still don't have internal to internal browsing via hostname. 

So there's something wrong with either the order of the squid.conf or I'm missing some "allow" variable. 

Please see below for my current config: 

##############################################################################
# Authentication
##############################################################################

auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth -k /etc/squid/HTTP.keytab -s HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
auth_param negotiate children 10
auth_param negotiate keep_alive on
acl kerb-auth proxy_auth REQUIRED

##############################################################################
# Access control - shared/common ACL definitions
##############################################################################
# ----------------------------------------------------------------------------
# networks and hosts (by name or IP address)

acl src_self src 127.0.0.0/8
acl src_self src 10.46.11.69

acl to_localhost dst 10.46.11.69

acl localnet src 10.0.0.0/8
acl localnet src 172.0.0.0/8

acl local_dst_addr dst 10.0.0.0/8
acl local_dst_addr dst 172.0.0.0/8

# ----------------------------------------------------------------------------
# protocols (URL schemes)

acl proto_FTP proto FTP
acl proto_HTTP proto HTTP

# ----------------------------------------------------------------------------
# TCP port numbers

# TCP ports for ordinary HTTP
acl http_ports port 80           	     # standard HTTP
acl http_ports port 81           	     # common alternative
acl http_ports port 8001         	     # epson.com support sub-site
acl http_ports port 8080         	     # common alternative
acl http_ports port 88 8000 8888   # ad-hoc services
acl http_ports port 1080         	     # SOCK frontend to HTTP service
acl http_ports port 21-22        	     # http:// frontend to FTP service
acl http_ports port 443          	     # https:// URLs

# TCP ports for HTTP-over-SSL
acl Ssl_ports port 443           # standard HTTPS
acl Ssl_ports port 9571         # lexmark.com
acl Ssl_ports port 22             # SSH

# TCP ports for plain FTP command channel
acl ftp_ports port 21

# ----------------------------------------------------------------------------
# HTTP methods (and pseudo-methods)

acl CONNECT method CONNECT

##############################################################################
# Access control - general proxy
##############################################################################

# define and allow new ACL for "Safe_ports"
acl Safe_Ports any-of http_ports Ssl_ports ftp_ports

# ----------------------------------------------------------------------------
# basic deny rules

# deny anything not from the LAN
http_access deny !localnet

# allow localnet users
http_access allow localnet

# blocks self to self connections
http_access deny to_localhost

# deny unauthorized access and DoS attacks
http_access deny !Safe_ports
http_access deny CONNECT !Ssl_ports

# allow authenticated clients after all other ACL's
http_access allow kerb-auth

# deny any request we missed in the above
http_access deny all

# if no other ACL applies, allow
http_reply_access allow all

This is it. I commented out all other ACL's for allow/deny we had in place for our custom rules. Still unable to browse local via hostname, IP works fine again. 

-----Original Message-----
From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of Amos Jeffries
Sent: Saturday, September 7, 2024 10:51 AM
To: squid-users at lists.squid-cache.org
Subject: Re: [squid-users] Unable to access internal resources via hostname

Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.


On 6/09/24 03:56, Piana, Josh wrote:
> Hello Amos,
>
> While the comments did say that it was just the 10.46.11.0 range, I don't think there's any other ACL forcing that. I tried adding the the two internal sites that are being blocked by their IP, restarted Squid, and tested. Still being blocked. You are right though, both of those web addresses are on a different IP scheme. Ideally we want anything on 172.0.0.0 to be allowed, and 10.96.0.0. The other question I have is, even if we specify those sites IP as "allowed", shouldn't we be able to brwose to them by their hostname as well?


That depends no your configuration policy. The default squid.conf only checks that clients are from the LAN and not doing any nasty protocol trick attacks.


>
> Currently, those internal sites ARE reachable. But only if we use IP. While this doesn't bother me, personally, the rest of our users would like to keep browsing via hostname as that's what they're used to and what many have shortcuts for.
>

Currently I see the ACL "local_dst_dom" is commented out (disabled).

I guess you also have not listed the hostname or domain in the file loaded by "authless_dst" ACL.




> In regards to the results of /etc/resolv.conf, see below:
> search ad.arc-tech.com
> nameserver 10.46.11.67
>

Okay. Then the "NDOT" default of 1 will be applied. So for these HTTP
messages:

   CONNECT hexp:443 HTTP/1.1
   Host: hexp
   ...


Will be interpreted by Squid as URL:

  https://hexp/


The "dstdomain" ACL will try to match "hexp" exactly.

The "dst" ACL will try to match IPs of "hexp.ad.arc-tech.com"



> There must be a better way to just allow internal to internal traffic without needing to authenticate through the web proxy. The old config had it, but that was part of the issue. We have no idea how that was working, it didn't make sense at all and it was a bit outdated, Version 2.5 as opposed to our current 5.5.
>
> I'm happy to post out config again here, as it's changed a bit and I have cleaned it up.
>
> # squid.conf - Squid web cache configuration
>
> ######################################################################
> ########
> # General
> ######################################################################
> ########
>
> # 2020MAR23 running out with just 1024 as we switch to Hexcel.com OMA 
> max_filedesc 4096
>

Unrelated to your problem, but FYI this should probably be much larger (ie 64K minimum, up to 100x expected user count) for a production proxy.


>
> ######################################################################
> ########
> # Logging
> ######################################################################
> ########
>
> # this makes the logs readable to humans logformat custom %tl.%03tu 
> %>a %Ss/%03>Hs %<st %rm %ru %[un %Sh/%<a %mt access_log 
> daemon:/var/log/squid/access.log custom
>
> # this gives better error reporting
> logformat custom %err_code/%err_detail access_log 
> daemon:/var/log/squid/access.log custom
>

This repeat of "custom" will cause issues.

IIRC this was added misunderstanding of Alex instructions.
What he meant was to **add** "%err_code/%err_detail" to your existing "custom" format.

Like this:

logformat custom %tl.%03tu %>a %Ss/%03>Hs %<st %rm %ru %[un \
     %Sh/%<a %mt %err_code/%err_detail


> # Red Hat-ish log names
> cache_log /var/log/squid/cache.log
> cache_access_log /var/log/squid/access.log

This setting opens a third logger writing to access.log, causing more issues.

Remove this "cache_access_log" line.


>
> # store_log is only useful for debugging cache_store_log none


FYI, off by default on current Squid. You can probably erase this setting entirely now.


> ######################################################################
> ########
> # Network - General/misc
> ######################################################################
> ########
>
> # our HTTP proxy port
> http_port 10.46.11.69:8080
> # loopback management
> http_port 127.0.0.1:3128


FWIW, you have denied access to "dst 127.0.0.0/8". So traffic to this port will be rejected.


>
> # disable ICP, port is typically 3130
> icp_port 0

FYI; disabled by default in modern Squid. You can remove "icp_port".

>
> # if set to "on", Squid will append your client's IP address in the 
> HTTP requests it forwards forwarded_for off

"off" will send the text "unknown".

It is better to use "transparent" (pass-thru unchanged) or "delete"
(erase if existing).


> ######################################################################
> ########
> # Authentication
> ######################################################################
> ########
>
> auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth 
> -k /etc/squid/HTTP.keytab -s 
> HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
> auth_param negotiate children 10
> auth_param negotiate keep_alive on
> acl kerb-auth proxy_auth REQUIRED
>
> ######################################################################
> ######## # Access control - shared/common ACL definitions 
> ######################################################################
> ########
>
> # 
> ----------------------------------------------------------------------
> ------ # networks and hosts (by name or IP address)
>
> # acl all src all
>
> acl src_self src 127.0.0.0/8
> acl src_self src 10.46.11.69
>
> acl dst_self dst 127.0.0.0/8
> acl dst_self dst 10.46.11.69


FYI, there are more IPs than just 127.0.0.0/8 which can be problematic as loopback sources.

Replace "dst_self" with:

  acl to_localhost dst 10.46.11.69


>
> acl from_arc src 10.46.0.0/15
>
> acl local_dst_addr dst 10.0.0.0/8
> acl local_dst_addr dst 172.0.0.0/8
>
> # 
> ----------------------------------------------------------------------
> ------
> # protocols (URL schemes)
>
> acl proto_FTP proto FTP
> acl proto_HTTP proto HTTP
>
> # 
> ----------------------------------------------------------------------
> ------
> # TCP port numbers
>
> # TCP ports for ordinary HTTP
> acl http_ports port 80                # standard HTTP
> acl http_ports port 81                # common alternative
> acl http_ports port 8001      # epson.com support sub-site
> acl http_ports port 8080      # common alternative


Other ports that are common:

  acl http_ports port 88 8000 8888 # ad-hoc services
  acl http_ports port 1080  # SOCK frontend to HTTP service
  acl http_ports port 21-22 # http:// frontend to FTP service
  acl http_ports port 443   # https:// URLs


Or really, **any** port can be valid now that Alt-Svc is widely used.

>
> # TCP ports for HTTP-over-SSL
> acl Ssl_ports port 443
> acl Ssl_ports port 9571               # lexmark.com
>
> # TCP ports for plain FTP command channel acl ftp_ports port 21
>
> # TCP ports for SSH/SFTP (secure shell) acl ssh_ports port 22

FTR, "ssh_ports" is unused. SSH and SFTP can only use Squid via CONNECT tunnel anyway. So you should list this port as part of "Ssl_ports".

>
> # 
> ----------------------------------------------------------------------
> ------
> # HTTP methods (and pseudo-methods)
>
> acl method_CONNECT method CONNECT

FYI: we have a built-in for modern Squid:

   acl CONNECT method CONNECT

You can replace all "method_CONNECT" with just "CONNECT".


>
> # list of standard HTTP methods
> acl methods_std method GET HEAD POST PUT DELETE acl methods_std method 
> TRACE OPTIONS
>

Consider removing these ACLs and the extra complexity they create.
Modern HTTP considers many other method names "standard" and current Squid follows the standard-required handling for all of them, and special ones.


> ######################################################################
> #######
> # Access control - general proxy
> ######################################################################
> ########
>
> # This major section is about which HTTP proxy clients can use Squid # 
> as an HTTP proxy server.  As opposed to the maintenance/admin-type # 
> stuff in the previous section.
>
> # 
> ----------------------------------------------------------------------
> ------
> # basic deny rules
> # these block stuff that's never good
> # we put most denies after user-auth so we know *who* is trying
>

Missing basic security to prevent DoS and protocol hijacking attacks:


  http_access deny !Safe_ports
  http_access deny CONNECT !Ssl_ports


You can define Safe_ports like this:

   acl Safe_Ports any-of http_ports Ssl_ports ftp_ports



> # block attempts to connect to proxy server via proxy http_access deny 
> dst_self
>

Use:
   http_access deny to_localhost



> # block clients which are the proxy server machine itself http_access 
> deny src_self
>

FYI, there should be nothing wrong with other software running on the proxy machine (eg software updaters) using Squid. They have to obey the same rules an any other client.


> # deny anything not from the LAN
> http_access deny !from_arc

FYI, we use "localnet" ACL to define the LAN. Makes it a bit easier for others to assist if you use the same. Up to you though.


>
> # 
> ----------------------------------------------------------------------
> ------
> # allow without authentication
> # these rules allow certain connects without user authentication # 
> these allow any protocol/method/etc
>
> #                 ***** IMPORTANT *****
> # Adding to these lists also exempts from all content filtering.
> # In particular, executables will be allowed to download!
> #                 ***** IMPORTANT *****
>
> # allow connects to local destinations without authentication # by 
> domain name from URL # acl local_dst_dom dstdomain ad.arc-tech.com
> # http_access       allow local_dst_dom
> # http_reply_access allow local_dst_dom


You have a domain name whitelist ACL two sections below.
You can remove the above, and list and use the later one for both
"local" and other domains.


>
> # by IP address name resolves to
> http_access       allow local_dst_addr
> # http_reply_access allow local_dst_addr
>

Maybe rename "local_dst_addr" to "whitelist_dst_ips" for clarity on what
it is doing.


Which brings up a security issue: When you list the entire LAN range in
this ACL, anyone accessing the proxy is allowed to do whatever they want
to your LAN machines. That includes all LAN **and** WAN connections.

Additionally, the bypass of authentication leaves you no trace that this
was actually a user, and not some infected LAN machine spreading malware
across your LAN. Which is rather risky.


Prefer to keep by-IP whitelist's empty or minimal content.



> # allow trusted hosts without authentication
> # these are just ip's on the 10.46.11.x network
> acl authless_src src "/etc/squid/authless_src"
> http_access       allow authless_src
> # http_reply_access allow authless_src
>
> # allow the following destinations without authentication
> # list of random approved websites
> # whats the advantage of not authenticating?
> acl authless_dst dstdomain "/etc/squid/authless_dst"
> http_access       allow authless_dst
> # http_reply_access allow authless_dst
>

This should be combined with "local_dst_dom". Just use different lines
like so:

  acl authless_dst dstdomain "/etc/squid/authless_dst"
  acl authless_dst dstdomain .ad.arc-tech.com
  acl authless_dst dstdomain .hexcelssp.com hexcelssp

  http_access allow whitelist


> # ----------------------------------------------------------------------------
> # block before authentication
> # these rules block certain connects without user authentication
> # done for software which handles proxy auth requests badly
> # for example, popping up many auth prompts
> # this does mean we cannot whitelist for users
>
> # blocked destinations, by host or domain, before authentication
> # websites that are auto-deny
> acl bad_domains_preauth dstdomain "/etc/squid/bad_domains_preauth"
> http_access deny bad_domains_preauth
>
> # ----------------------------------------------------------------------------
> # require proxy authentication
>
> # ********************************************************************
> # * anything past this point requires users to authenticate to proxy *
> # ********************************************************************
>
> # Uncomment these lines to disable authentication requirement for all
> # but a few test boxes.  Useful if NTLM gets broken.
> # acl from_test_boxes src 10.2.1.5
> # http_access allow !from_test_boxes from_arc
>

FYI, you have "deny !from_arc" earlier above.

This is simpler and does the same thing as the above line:

   # http_access allow !from_test_boxes


> # block clients which are not authenticated
> # http_access deny !authenticated
>

You named the ACL "kerb-auth", not "authenticated".


> # block certain user IDs from using proxy server
> # list of ad users and service accounts to automatically deny proxy
> acl block_user proxy_auth_regex -i "/etc/squid/block_user"
> http_access deny block_user


I suggest this to prevent re-login loop for these forbidden services:

  http_access deny !kerb-auth
  http_access deny block_user all


>
> # ----------------------------------------------------------------------------
> # general whitelist
>
> # whitelist for locations/sites (override blocking)
> # allows complex URLs
> # some bad_urls patterns are generic
> # they block suspicous URLs or generally unwanted sites
> # this whitelist can make specific exceptions within those
> acl bad_exception_urls url_regex -i "/etc/squid/bad_exception_urls"
>
> # ----------------------------------------------------------------------------
> # executable blocking
>
> # we do this separately from other content blocking
> # in order to allow ITLIB to still download
> # doing it with other blocking causes a flood of browser auth req's
> # for users visting sites with video
>
> # file extensions to block
> # don't try to block .COM files here
> # it will get confused with .com domain and block too many things
> acl exec_files url_regex -i "/etc/squid/exec_files"

Consider using the "urlpath_regex" ACL type instead. It does not match
against the scheme://domain:port part of URLs.


>
> # usernames not to block
> acl exec_users proxy_auth_regex -i "/etc/squid/exec_users"
>
> # activate
> http_access deny !bad_exception_urls !exec_users exec_files
> deny_info ERR_BLOCK_TYPE exec_files
>
> # ----------------------------------------------------------------------------
> # selective whitelists
>
> # these override the general blacklists by explictly allowing things
> # some multimedia services (I.E. YouTube) are permitted for certain users
> # exempts them from content blocking in this section
>
> # list of users for this
> acl mmedia_users proxy_auth_regex -i "/etc/squid/mmedia_users"
>
> # list of sites for this
> acl mmedia_sites dstdomain "/etc/squid/mmedia_sites"
>
> # if a mmedia user attempts to access a mmedia site via appropriate protocols, allow it
> # done for both HTTP/TCP/80 and HTTP/SSL/443
> # done for both HTTP request as well as HTTP reply/response
> # otherwise the later bad_types Content-Type multimedia blocking rule kicks in
>
> http_access       allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
> # tp_reply_access allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
>
> http_access       allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users
> # http_reply_access allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users


FYI, Websites like YouTube can dynamically negotiate the media source
ports to be non-standard values using Alt-Svc headers.

If you had the default security settings at the top of your http_access
rules:

  http_access deny !Safe_ports
  http_access deny CONNECT !SSL_Ports

... you would not need to make (bad) assumptions about the protocols and
ports used by media sites here.

Also, "mmedia_users" being last on the line risks a 407 re-auth
challenge occuring. Best place it earlier.


Leaving these rules as:

    http_access allow mmedia_users mmedia_sites


>
> # ----------------------------------------------------------------------------
> # general blacklists
> # porn, wastes of bandwidth, etc.
>
>
> # blocked destinations, by host or domain
> # sites we don't want people using
> acl bad_domains dstdomain "/etc/squid/bad_domains"
> http_access deny !bad_exception_urls bad_domains
> deny_info ERR_BLOCK_DST       bad_domains
>
> # blocked destinations, by host or domain, regex pattern
> acl bad_domains_regex dstdom_regex -i "/etc/squid/bad_domains_regex"
> http_access deny !bad_exception_urls bad_domains_regex
> deny_info ERR_BLOCK_DST       bad_domains_regex
>
> # blocked destinations, by complex URL
> # typical use: block just part of a site, by URL path
> # example use: block just the advertsing section of a site
> acl bad_urls url_regex -i "/etc/squid/bad_urls"
> http_access deny !bad_exception_urls bad_urls
> deny_info ERR_BLOCK_DST       bad_urls
>
> # blocked content types, by apparent file name
> acl bad_files urlpath_regex -i "/etc/squid/bad_files"
> http_access deny !bad_exception_urls bad_files
> deny_info ERR_BLOCK_TYPE bad_files
>
> # blocked content types, by MIME content type, in response
> acl bad_types rep_mime_type -i "/etc/squid/bad_types"
> # http_reply_access deny bad_types !bad_exception_urls
> deny_info ERR_BLOCK_TYPE bad_types


FYI, in order for the deny_info action to be taken the ACL it is
attached to must be the final one on a line.

Previous config was fine, but this "bad_types" use will not work. You
need to re-order the access checks like this:


  # http_reply_access deny !bad_exception_urls bad_types


>

This part from here ...

> # ----------------------------------------------------------------------------
> # standard web (HTTP PUT/GET/etc) access
>
> # We basically allow any auth'ed user to connect via HTTP to anywhere,
> # so long as it uses a standard port, and is not a direct CONNECT
> # attempt, or blocked, or any of the other stuff above.
>
> http_access allow http_ports proto_HTTP methods_std
>
> # ----------------------------------------------------------------------------
> # direct CONNECT for HTTP-over-SSL (HTTPS)
>
> http_access allow method_CONNECT ssl_ports
>
> # ----------------------------------------------------------------------------
> # deny any other CONNECT attempts
>
> http_access deny method_CONNECT
>
> # ----------------------------------------------------------------------------
> # FTP via HTTP proxy
>
> http_access allow ftp_ports proto_FTP
>

... to here.

Is better handled by the default squid.conf:

  http_access deny !Safe_ports
  http_access deny CONNECT !Ssl_ports

Placed at the top of your http_access lines.


> # ----------------------------------------------------------------------------
> # catch-all defaults
> http_access allow kerb-auth
>
> # deny any request we missed in the above
> http_access deny all
>
> # If we allowed the request, allow the reply (HTTP response) as well.
> # Rules above many allow or deny specific reply before now.
> # If nothing more specific matched, we allow.
> # This should be OK since we filter mainly on requests.
> # http_reply_access allow all
>

FWIW, it is hard to tell what the exact last reply action could have
been. So I would un-comment this allow line to be certain it is what
happens.


> ##############################################################################
> # END OF FILE
> ##############################################################################
>

HTH
Amos

_______________________________________________
squid-users mailing list
squid-users at lists.squid-cache.org
https://lists.squid-cache.org/listinfo/squid-users


From rousskov at measurement-factory.com  Mon Sep 16 14:41:58 2024
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Mon, 16 Sep 2024 10:41:58 -0400
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <8faab648625547fc88a069512da16c4f@hexcel.com>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <Zs84drvoIpZ1f6DR@fantomas.sk> <58bdfaada3fa46d0938b7346ec04c336@hexcel.com>
 <947309fa-d1fc-4a75-ac49-ea7bc5c5ff12@measurement-factory.com>
 <faffca37-fa59-46ff-80e4-245c37fa90b9@measurement-factory.com>
 <c00942c1c8ab46b5b393d70f32346798@hexcel.com>
 <59274673-47e9-431d-ad45-7fa3a5a8ebca@measurement-factory.com>
 <d063bef52efd4e32a9f9bb27f934e673@hexcel.com>
 <e35fb7b1-12ce-41b8-83c1-51a208739127@measurement-factory.com>
 <f7ca72b579474cc184e22dfd6ef55683@hexcel.com>
 <4537b23c7a534cd3a716ffd4f8471f5e@hexcel.com>
 <c4ae0610-b8b2-4a26-bed9-8cd1bf2b6901@treenet.co.nz>
 <d3ef9e5efbad41c39c74dcdb10f8f91a@hexcel.com>
 <20d65da8-8e6e-47f6-9250-04ad8f26ff5a@treenet.co.nz>
 <8faab648625547fc88a069512da16c4f@hexcel.com>
Message-ID: <28fdeaae-9900-4289-8a3b-0db26773b9a4@measurement-factory.com>

On 2024-09-16 09:58, Piana, Josh wrote:

> I removed all of the special, custom ACL's and we still don't have internal to internal browsing via hostname.

FWIW, these first two http_access rules make all subsequent http_access 
rules irrelevant/unused because these two rules match all traffic:

> http_access deny !localnet
> http_access allow localnet

I did not look further, but the above combination is a sign that you 
interpret http_access rules differently than Squid does. Please make 
sure you understand why the two rules above make all subsequent 
http_access rules irrelevant/unused before adjusting your configuration 
further. Ask questions as needed.


If the primary problem persists after addressing this configuration 
problem, then my earlier (2024-09-04) recommendation stands: Please 
restate the primary problem (e.g., detail what "don't have browsing" 
means in terms of the test transaction outcome) and share debugging log 
of that test transaction again.


HTH,

Alex.


> So there's something wrong with either the order of the squid.conf or I'm missing some "allow" variable.
> 
> Please see below for my current config:
> 
> ##############################################################################
> # Authentication
> ##############################################################################
> 
> auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth -k /etc/squid/HTTP.keytab -s HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
> auth_param negotiate children 10
> auth_param negotiate keep_alive on
> acl kerb-auth proxy_auth REQUIRED
> 
> ##############################################################################
> # Access control - shared/common ACL definitions
> ##############################################################################
> # ----------------------------------------------------------------------------
> # networks and hosts (by name or IP address)
> 
> acl src_self src 127.0.0.0/8
> acl src_self src 10.46.11.69
> 
> acl to_localhost dst 10.46.11.69
> 
> acl localnet src 10.0.0.0/8
> acl localnet src 172.0.0.0/8
> 
> acl local_dst_addr dst 10.0.0.0/8
> acl local_dst_addr dst 172.0.0.0/8
> 
> # ----------------------------------------------------------------------------
> # protocols (URL schemes)
> 
> acl proto_FTP proto FTP
> acl proto_HTTP proto HTTP
> 
> # ----------------------------------------------------------------------------
> # TCP port numbers
> 
> # TCP ports for ordinary HTTP
> acl http_ports port 80           	     # standard HTTP
> acl http_ports port 81           	     # common alternative
> acl http_ports port 8001         	     # epson.com support sub-site
> acl http_ports port 8080         	     # common alternative
> acl http_ports port 88 8000 8888   # ad-hoc services
> acl http_ports port 1080         	     # SOCK frontend to HTTP service
> acl http_ports port 21-22        	     # http:// frontend to FTP service
> acl http_ports port 443          	     # https:// URLs
> 
> # TCP ports for HTTP-over-SSL
> acl Ssl_ports port 443           # standard HTTPS
> acl Ssl_ports port 9571         # lexmark.com
> acl Ssl_ports port 22             # SSH
> 
> # TCP ports for plain FTP command channel
> acl ftp_ports port 21
> 
> # ----------------------------------------------------------------------------
> # HTTP methods (and pseudo-methods)
> 
> acl CONNECT method CONNECT
> 
> ##############################################################################
> # Access control - general proxy
> ##############################################################################
> 
> # define and allow new ACL for "Safe_ports"
> acl Safe_Ports any-of http_ports Ssl_ports ftp_ports
> 
> # ----------------------------------------------------------------------------
> # basic deny rules
> 
> # deny anything not from the LAN
> http_access deny !localnet
> 
> # allow localnet users
> http_access allow localnet
> 
> # blocks self to self connections
> http_access deny to_localhost
> 
> # deny unauthorized access and DoS attacks
> http_access deny !Safe_ports
> http_access deny CONNECT !Ssl_ports
> 
> # allow authenticated clients after all other ACL's
> http_access allow kerb-auth
> 
> # deny any request we missed in the above
> http_access deny all
> 
> # if no other ACL applies, allow
> http_reply_access allow all
> 
> This is it. I commented out all other ACL's for allow/deny we had in place for our custom rules. Still unable to browse local via hostname, IP works fine again.
> 
> -----Original Message-----
> From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of Amos Jeffries
> Sent: Saturday, September 7, 2024 10:51 AM
> To: squid-users at lists.squid-cache.org
> Subject: Re: [squid-users] Unable to access internal resources via hostname
> 
> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
> 
> 
> On 6/09/24 03:56, Piana, Josh wrote:
>> Hello Amos,
>>
>> While the comments did say that it was just the 10.46.11.0 range, I don't think there's any other ACL forcing that. I tried adding the the two internal sites that are being blocked by their IP, restarted Squid, and tested. Still being blocked. You are right though, both of those web addresses are on a different IP scheme. Ideally we want anything on 172.0.0.0 to be allowed, and 10.96.0.0. The other question I have is, even if we specify those sites IP as "allowed", shouldn't we be able to brwose to them by their hostname as well?
> 
> 
> That depends no your configuration policy. The default squid.conf only checks that clients are from the LAN and not doing any nasty protocol trick attacks.
> 
> 
>>
>> Currently, those internal sites ARE reachable. But only if we use IP. While this doesn't bother me, personally, the rest of our users would like to keep browsing via hostname as that's what they're used to and what many have shortcuts for.
>>
> 
> Currently I see the ACL "local_dst_dom" is commented out (disabled).
> 
> I guess you also have not listed the hostname or domain in the file loaded by "authless_dst" ACL.
> 
> 
> 
> 
>> In regards to the results of /etc/resolv.conf, see below:
>> search ad.arc-tech.com
>> nameserver 10.46.11.67
>>
> 
> Okay. Then the "NDOT" default of 1 will be applied. So for these HTTP
> messages:
> 
>     CONNECT hexp:443 HTTP/1.1
>     Host: hexp
>     ...
> 
> 
> Will be interpreted by Squid as URL:
> 
>    https://hexp/
> 
> 
> The "dstdomain" ACL will try to match "hexp" exactly.
> 
> The "dst" ACL will try to match IPs of "hexp.ad.arc-tech.com"
> 
> 
> 
>> There must be a better way to just allow internal to internal traffic without needing to authenticate through the web proxy. The old config had it, but that was part of the issue. We have no idea how that was working, it didn't make sense at all and it was a bit outdated, Version 2.5 as opposed to our current 5.5.
>>
>> I'm happy to post out config again here, as it's changed a bit and I have cleaned it up.
>>
>> # squid.conf - Squid web cache configuration
>>
>> ######################################################################
>> ########
>> # General
>> ######################################################################
>> ########
>>
>> # 2020MAR23 running out with just 1024 as we switch to Hexcel.com OMA
>> max_filedesc 4096
>>
> 
> Unrelated to your problem, but FYI this should probably be much larger (ie 64K minimum, up to 100x expected user count) for a production proxy.
> 
> 
>>
>> ######################################################################
>> ########
>> # Logging
>> ######################################################################
>> ########
>>
>> # this makes the logs readable to humans logformat custom %tl.%03tu
>> %>a %Ss/%03>Hs %<st %rm %ru %[un %Sh/%<a %mt access_log
>> daemon:/var/log/squid/access.log custom
>>
>> # this gives better error reporting
>> logformat custom %err_code/%err_detail access_log
>> daemon:/var/log/squid/access.log custom
>>
> 
> This repeat of "custom" will cause issues.
> 
> IIRC this was added misunderstanding of Alex instructions.
> What he meant was to **add** "%err_code/%err_detail" to your existing "custom" format.
> 
> Like this:
> 
> logformat custom %tl.%03tu %>a %Ss/%03>Hs %<st %rm %ru %[un \
>       %Sh/%<a %mt %err_code/%err_detail
> 
> 
>> # Red Hat-ish log names
>> cache_log /var/log/squid/cache.log
>> cache_access_log /var/log/squid/access.log
> 
> This setting opens a third logger writing to access.log, causing more issues.
> 
> Remove this "cache_access_log" line.
> 
> 
>>
>> # store_log is only useful for debugging cache_store_log none
> 
> 
> FYI, off by default on current Squid. You can probably erase this setting entirely now.
> 
> 
>> ######################################################################
>> ########
>> # Network - General/misc
>> ######################################################################
>> ########
>>
>> # our HTTP proxy port
>> http_port 10.46.11.69:8080
>> # loopback management
>> http_port 127.0.0.1:3128
> 
> 
> FWIW, you have denied access to "dst 127.0.0.0/8". So traffic to this port will be rejected.
> 
> 
>>
>> # disable ICP, port is typically 3130
>> icp_port 0
> 
> FYI; disabled by default in modern Squid. You can remove "icp_port".
> 
>>
>> # if set to "on", Squid will append your client's IP address in the
>> HTTP requests it forwards forwarded_for off
> 
> "off" will send the text "unknown".
> 
> It is better to use "transparent" (pass-thru unchanged) or "delete"
> (erase if existing).
> 
> 
>> ######################################################################
>> ########
>> # Authentication
>> ######################################################################
>> ########
>>
>> auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth
>> -k /etc/squid/HTTP.keytab -s
>> HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
>> auth_param negotiate children 10
>> auth_param negotiate keep_alive on
>> acl kerb-auth proxy_auth REQUIRED
>>
>> ######################################################################
>> ######## # Access control - shared/common ACL definitions
>> ######################################################################
>> ########
>>
>> #
>> ----------------------------------------------------------------------
>> ------ # networks and hosts (by name or IP address)
>>
>> # acl all src all
>>
>> acl src_self src 127.0.0.0/8
>> acl src_self src 10.46.11.69
>>
>> acl dst_self dst 127.0.0.0/8
>> acl dst_self dst 10.46.11.69
> 
> 
> FYI, there are more IPs than just 127.0.0.0/8 which can be problematic as loopback sources.
> 
> Replace "dst_self" with:
> 
>    acl to_localhost dst 10.46.11.69
> 
> 
>>
>> acl from_arc src 10.46.0.0/15
>>
>> acl local_dst_addr dst 10.0.0.0/8
>> acl local_dst_addr dst 172.0.0.0/8
>>
>> #
>> ----------------------------------------------------------------------
>> ------
>> # protocols (URL schemes)
>>
>> acl proto_FTP proto FTP
>> acl proto_HTTP proto HTTP
>>
>> #
>> ----------------------------------------------------------------------
>> ------
>> # TCP port numbers
>>
>> # TCP ports for ordinary HTTP
>> acl http_ports port 80                # standard HTTP
>> acl http_ports port 81                # common alternative
>> acl http_ports port 8001      # epson.com support sub-site
>> acl http_ports port 8080      # common alternative
> 
> 
> Other ports that are common:
> 
>    acl http_ports port 88 8000 8888 # ad-hoc services
>    acl http_ports port 1080  # SOCK frontend to HTTP service
>    acl http_ports port 21-22 # http:// frontend to FTP service
>    acl http_ports port 443   # https:// URLs
> 
> 
> Or really, **any** port can be valid now that Alt-Svc is widely used.
> 
>>
>> # TCP ports for HTTP-over-SSL
>> acl Ssl_ports port 443
>> acl Ssl_ports port 9571               # lexmark.com
>>
>> # TCP ports for plain FTP command channel acl ftp_ports port 21
>>
>> # TCP ports for SSH/SFTP (secure shell) acl ssh_ports port 22
> 
> FTR, "ssh_ports" is unused. SSH and SFTP can only use Squid via CONNECT tunnel anyway. So you should list this port as part of "Ssl_ports".
> 
>>
>> #
>> ----------------------------------------------------------------------
>> ------
>> # HTTP methods (and pseudo-methods)
>>
>> acl method_CONNECT method CONNECT
> 
> FYI: we have a built-in for modern Squid:
> 
>     acl CONNECT method CONNECT
> 
> You can replace all "method_CONNECT" with just "CONNECT".
> 
> 
>>
>> # list of standard HTTP methods
>> acl methods_std method GET HEAD POST PUT DELETE acl methods_std method
>> TRACE OPTIONS
>>
> 
> Consider removing these ACLs and the extra complexity they create.
> Modern HTTP considers many other method names "standard" and current Squid follows the standard-required handling for all of them, and special ones.
> 
> 
>> ######################################################################
>> #######
>> # Access control - general proxy
>> ######################################################################
>> ########
>>
>> # This major section is about which HTTP proxy clients can use Squid #
>> as an HTTP proxy server.  As opposed to the maintenance/admin-type #
>> stuff in the previous section.
>>
>> #
>> ----------------------------------------------------------------------
>> ------
>> # basic deny rules
>> # these block stuff that's never good
>> # we put most denies after user-auth so we know *who* is trying
>>
> 
> Missing basic security to prevent DoS and protocol hijacking attacks:
> 
> 
>    http_access deny !Safe_ports
>    http_access deny CONNECT !Ssl_ports
> 
> 
> You can define Safe_ports like this:
> 
>     acl Safe_Ports any-of http_ports Ssl_ports ftp_ports
> 
> 
> 
>> # block attempts to connect to proxy server via proxy http_access deny
>> dst_self
>>
> 
> Use:
>     http_access deny to_localhost
> 
> 
> 
>> # block clients which are the proxy server machine itself http_access
>> deny src_self
>>
> 
> FYI, there should be nothing wrong with other software running on the proxy machine (eg software updaters) using Squid. They have to obey the same rules an any other client.
> 
> 
>> # deny anything not from the LAN
>> http_access deny !from_arc
> 
> FYI, we use "localnet" ACL to define the LAN. Makes it a bit easier for others to assist if you use the same. Up to you though.
> 
> 
>>
>> #
>> ----------------------------------------------------------------------
>> ------
>> # allow without authentication
>> # these rules allow certain connects without user authentication #
>> these allow any protocol/method/etc
>>
>> #                 ***** IMPORTANT *****
>> # Adding to these lists also exempts from all content filtering.
>> # In particular, executables will be allowed to download!
>> #                 ***** IMPORTANT *****
>>
>> # allow connects to local destinations without authentication # by
>> domain name from URL # acl local_dst_dom dstdomain ad.arc-tech.com
>> # http_access       allow local_dst_dom
>> # http_reply_access allow local_dst_dom
> 
> 
> You have a domain name whitelist ACL two sections below.
> You can remove the above, and list and use the later one for both
> "local" and other domains.
> 
> 
>>
>> # by IP address name resolves to
>> http_access       allow local_dst_addr
>> # http_reply_access allow local_dst_addr
>>
> 
> Maybe rename "local_dst_addr" to "whitelist_dst_ips" for clarity on what
> it is doing.
> 
> 
> Which brings up a security issue: When you list the entire LAN range in
> this ACL, anyone accessing the proxy is allowed to do whatever they want
> to your LAN machines. That includes all LAN **and** WAN connections.
> 
> Additionally, the bypass of authentication leaves you no trace that this
> was actually a user, and not some infected LAN machine spreading malware
> across your LAN. Which is rather risky.
> 
> 
> Prefer to keep by-IP whitelist's empty or minimal content.
> 
> 
> 
>> # allow trusted hosts without authentication
>> # these are just ip's on the 10.46.11.x network
>> acl authless_src src "/etc/squid/authless_src"
>> http_access       allow authless_src
>> # http_reply_access allow authless_src
>>
>> # allow the following destinations without authentication
>> # list of random approved websites
>> # whats the advantage of not authenticating?
>> acl authless_dst dstdomain "/etc/squid/authless_dst"
>> http_access       allow authless_dst
>> # http_reply_access allow authless_dst
>>
> 
> This should be combined with "local_dst_dom". Just use different lines
> like so:
> 
>    acl authless_dst dstdomain "/etc/squid/authless_dst"
>    acl authless_dst dstdomain .ad.arc-tech.com
>    acl authless_dst dstdomain .hexcelssp.com hexcelssp
> 
>    http_access allow whitelist
> 
> 
>> # ----------------------------------------------------------------------------
>> # block before authentication
>> # these rules block certain connects without user authentication
>> # done for software which handles proxy auth requests badly
>> # for example, popping up many auth prompts
>> # this does mean we cannot whitelist for users
>>
>> # blocked destinations, by host or domain, before authentication
>> # websites that are auto-deny
>> acl bad_domains_preauth dstdomain "/etc/squid/bad_domains_preauth"
>> http_access deny bad_domains_preauth
>>
>> # ----------------------------------------------------------------------------
>> # require proxy authentication
>>
>> # ********************************************************************
>> # * anything past this point requires users to authenticate to proxy *
>> # ********************************************************************
>>
>> # Uncomment these lines to disable authentication requirement for all
>> # but a few test boxes.  Useful if NTLM gets broken.
>> # acl from_test_boxes src 10.2.1.5
>> # http_access allow !from_test_boxes from_arc
>>
> 
> FYI, you have "deny !from_arc" earlier above.
> 
> This is simpler and does the same thing as the above line:
> 
>     # http_access allow !from_test_boxes
> 
> 
>> # block clients which are not authenticated
>> # http_access deny !authenticated
>>
> 
> You named the ACL "kerb-auth", not "authenticated".
> 
> 
>> # block certain user IDs from using proxy server
>> # list of ad users and service accounts to automatically deny proxy
>> acl block_user proxy_auth_regex -i "/etc/squid/block_user"
>> http_access deny block_user
> 
> 
> I suggest this to prevent re-login loop for these forbidden services:
> 
>    http_access deny !kerb-auth
>    http_access deny block_user all
> 
> 
>>
>> # ----------------------------------------------------------------------------
>> # general whitelist
>>
>> # whitelist for locations/sites (override blocking)
>> # allows complex URLs
>> # some bad_urls patterns are generic
>> # they block suspicous URLs or generally unwanted sites
>> # this whitelist can make specific exceptions within those
>> acl bad_exception_urls url_regex -i "/etc/squid/bad_exception_urls"
>>
>> # ----------------------------------------------------------------------------
>> # executable blocking
>>
>> # we do this separately from other content blocking
>> # in order to allow ITLIB to still download
>> # doing it with other blocking causes a flood of browser auth req's
>> # for users visting sites with video
>>
>> # file extensions to block
>> # don't try to block .COM files here
>> # it will get confused with .com domain and block too many things
>> acl exec_files url_regex -i "/etc/squid/exec_files"
> 
> Consider using the "urlpath_regex" ACL type instead. It does not match
> against the scheme://domain:port part of URLs.
> 
> 
>>
>> # usernames not to block
>> acl exec_users proxy_auth_regex -i "/etc/squid/exec_users"
>>
>> # activate
>> http_access deny !bad_exception_urls !exec_users exec_files
>> deny_info ERR_BLOCK_TYPE exec_files
>>
>> # ----------------------------------------------------------------------------
>> # selective whitelists
>>
>> # these override the general blacklists by explictly allowing things
>> # some multimedia services (I.E. YouTube) are permitted for certain users
>> # exempts them from content blocking in this section
>>
>> # list of users for this
>> acl mmedia_users proxy_auth_regex -i "/etc/squid/mmedia_users"
>>
>> # list of sites for this
>> acl mmedia_sites dstdomain "/etc/squid/mmedia_sites"
>>
>> # if a mmedia user attempts to access a mmedia site via appropriate protocols, allow it
>> # done for both HTTP/TCP/80 and HTTP/SSL/443
>> # done for both HTTP request as well as HTTP reply/response
>> # otherwise the later bad_types Content-Type multimedia blocking rule kicks in
>>
>> http_access       allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
>> # tp_reply_access allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
>>
>> http_access       allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users
>> # http_reply_access allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users
> 
> 
> FYI, Websites like YouTube can dynamically negotiate the media source
> ports to be non-standard values using Alt-Svc headers.
> 
> If you had the default security settings at the top of your http_access
> rules:
> 
>    http_access deny !Safe_ports
>    http_access deny CONNECT !SSL_Ports
> 
> ... you would not need to make (bad) assumptions about the protocols and
> ports used by media sites here.
> 
> Also, "mmedia_users" being last on the line risks a 407 re-auth
> challenge occuring. Best place it earlier.
> 
> 
> Leaving these rules as:
> 
>      http_access allow mmedia_users mmedia_sites
> 
> 
>>
>> # ----------------------------------------------------------------------------
>> # general blacklists
>> # porn, wastes of bandwidth, etc.
>>
>>
>> # blocked destinations, by host or domain
>> # sites we don't want people using
>> acl bad_domains dstdomain "/etc/squid/bad_domains"
>> http_access deny !bad_exception_urls bad_domains
>> deny_info ERR_BLOCK_DST       bad_domains
>>
>> # blocked destinations, by host or domain, regex pattern
>> acl bad_domains_regex dstdom_regex -i "/etc/squid/bad_domains_regex"
>> http_access deny !bad_exception_urls bad_domains_regex
>> deny_info ERR_BLOCK_DST       bad_domains_regex
>>
>> # blocked destinations, by complex URL
>> # typical use: block just part of a site, by URL path
>> # example use: block just the advertsing section of a site
>> acl bad_urls url_regex -i "/etc/squid/bad_urls"
>> http_access deny !bad_exception_urls bad_urls
>> deny_info ERR_BLOCK_DST       bad_urls
>>
>> # blocked content types, by apparent file name
>> acl bad_files urlpath_regex -i "/etc/squid/bad_files"
>> http_access deny !bad_exception_urls bad_files
>> deny_info ERR_BLOCK_TYPE bad_files
>>
>> # blocked content types, by MIME content type, in response
>> acl bad_types rep_mime_type -i "/etc/squid/bad_types"
>> # http_reply_access deny bad_types !bad_exception_urls
>> deny_info ERR_BLOCK_TYPE bad_types
> 
> 
> FYI, in order for the deny_info action to be taken the ACL it is
> attached to must be the final one on a line.
> 
> Previous config was fine, but this "bad_types" use will not work. You
> need to re-order the access checks like this:
> 
> 
>    # http_reply_access deny !bad_exception_urls bad_types
> 
> 
>>
> 
> This part from here ...
> 
>> # ----------------------------------------------------------------------------
>> # standard web (HTTP PUT/GET/etc) access
>>
>> # We basically allow any auth'ed user to connect via HTTP to anywhere,
>> # so long as it uses a standard port, and is not a direct CONNECT
>> # attempt, or blocked, or any of the other stuff above.
>>
>> http_access allow http_ports proto_HTTP methods_std
>>
>> # ----------------------------------------------------------------------------
>> # direct CONNECT for HTTP-over-SSL (HTTPS)
>>
>> http_access allow method_CONNECT ssl_ports
>>
>> # ----------------------------------------------------------------------------
>> # deny any other CONNECT attempts
>>
>> http_access deny method_CONNECT
>>
>> # ----------------------------------------------------------------------------
>> # FTP via HTTP proxy
>>
>> http_access allow ftp_ports proto_FTP
>>
> 
> ... to here.
> 
> Is better handled by the default squid.conf:
> 
>    http_access deny !Safe_ports
>    http_access deny CONNECT !Ssl_ports
> 
> Placed at the top of your http_access lines.
> 
> 
>> # ----------------------------------------------------------------------------
>> # catch-all defaults
>> http_access allow kerb-auth
>>
>> # deny any request we missed in the above
>> http_access deny all
>>
>> # If we allowed the request, allow the reply (HTTP response) as well.
>> # Rules above many allow or deny specific reply before now.
>> # If nothing more specific matched, we allow.
>> # This should be OK since we filter mainly on requests.
>> # http_reply_access allow all
>>
> 
> FWIW, it is hard to tell what the exact last reply action could have
> been. So I would un-comment this allow line to be certain it is what
> happens.
> 
> 
>> ##############################################################################
>> # END OF FILE
>> ##############################################################################
>>
> 
> HTH
> Amos
> 
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users



From Josh.Piana at hexcel.com  Mon Sep 16 18:06:41 2024
From: Josh.Piana at hexcel.com (Piana, Josh)
Date: Mon, 16 Sep 2024 18:06:41 +0000
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <28fdeaae-9900-4289-8a3b-0db26773b9a4@measurement-factory.com>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <Zs84drvoIpZ1f6DR@fantomas.sk> <58bdfaada3fa46d0938b7346ec04c336@hexcel.com>
 <947309fa-d1fc-4a75-ac49-ea7bc5c5ff12@measurement-factory.com>
 <faffca37-fa59-46ff-80e4-245c37fa90b9@measurement-factory.com>
 <c00942c1c8ab46b5b393d70f32346798@hexcel.com>
 <59274673-47e9-431d-ad45-7fa3a5a8ebca@measurement-factory.com>
 <d063bef52efd4e32a9f9bb27f934e673@hexcel.com>
 <e35fb7b1-12ce-41b8-83c1-51a208739127@measurement-factory.com>
 <f7ca72b579474cc184e22dfd6ef55683@hexcel.com>
 <4537b23c7a534cd3a716ffd4f8471f5e@hexcel.com>
 <c4ae0610-b8b2-4a26-bed9-8cd1bf2b6901@treenet.co.nz>
 <d3ef9e5efbad41c39c74dcdb10f8f91a@hexcel.com>
 <20d65da8-8e6e-47f6-9250-04ad8f26ff5a@treenet.co.nz>
 <8faab648625547fc88a069512da16c4f@hexcel.com>
 <28fdeaae-9900-4289-8a3b-0db26773b9a4@measurement-factory.com>
Message-ID: <3e263117c0b7410da754d42f55671fea@hexcel.com>

Alex, 

How I understand the rules are as follows: 

> http_access deny !localnet
This denies HTTP traffic to what I defined as "localnet". According to the ACL near the top of the config, I defined "localnet" as any object within the 10.0.0.0/8 range as well as 172.0.0.0/8.  Because this argument is near the bottom of my config, won't all other ACL's and lists apply before getting to this deny all rule? Kind of like how we have "http_access deny all" as the last line. 

> http_access allow localnet
This is after the deny rule because if, for whatever reason, network traffic gets past everything else, this allows it. (I thought every statement needs a contradicting statement as well.) 

I'm clearly misunderstanding something, please make it clear.

Josh 

-----Original Message-----
From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of Alex Rousskov
Sent: Monday, September 16, 2024 10:42 AM
To: squid-users at lists.squid-cache.org
Subject: Re: [squid-users] Unable to access internal resources via hostname

Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.


On 2024-09-16 09:58, Piana, Josh wrote:

> I removed all of the special, custom ACL's and we still don't have internal to internal browsing via hostname.

FWIW, these first two http_access rules make all subsequent http_access rules irrelevant/unused because these two rules match all traffic:

> http_access deny !localnet
> http_access allow localnet

I did not look further, but the above combination is a sign that you interpret http_access rules differently than Squid does. Please make sure you understand why the two rules above make all subsequent http_access rules irrelevant/unused before adjusting your configuration further. Ask questions as needed.


If the primary problem persists after addressing this configuration problem, then my earlier (2024-09-04) recommendation stands: Please restate the primary problem (e.g., detail what "don't have browsing"
means in terms of the test transaction outcome) and share debugging log of that test transaction again.


HTH,

Alex.


> So there's something wrong with either the order of the squid.conf or I'm missing some "allow" variable.
>
> Please see below for my current config:
>
> ######################################################################
> ########
> # Authentication
> ######################################################################
> ########
>
> auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth 
> -k /etc/squid/HTTP.keytab -s 
> HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
> auth_param negotiate children 10
> auth_param negotiate keep_alive on
> acl kerb-auth proxy_auth REQUIRED
>
> ######################################################################
> ######## # Access control - shared/common ACL definitions 
> ######################################################################
> ######## # 
> ----------------------------------------------------------------------
> ------ # networks and hosts (by name or IP address)
>
> acl src_self src 127.0.0.0/8
> acl src_self src 10.46.11.69
>
> acl to_localhost dst 10.46.11.69
>
> acl localnet src 10.0.0.0/8
> acl localnet src 172.0.0.0/8
>
> acl local_dst_addr dst 10.0.0.0/8
> acl local_dst_addr dst 172.0.0.0/8
>
> # 
> ----------------------------------------------------------------------
> ------
> # protocols (URL schemes)
>
> acl proto_FTP proto FTP
> acl proto_HTTP proto HTTP
>
> # 
> ----------------------------------------------------------------------
> ------
> # TCP port numbers
>
> # TCP ports for ordinary HTTP
> acl http_ports port 80                     # standard HTTP
> acl http_ports port 81                     # common alternative
> acl http_ports port 8001                   # epson.com support sub-site
> acl http_ports port 8080                   # common alternative
> acl http_ports port 88 8000 8888   # ad-hoc services
> acl http_ports port 1080                   # SOCK frontend to HTTP service
> acl http_ports port 21-22                  # http:// frontend to FTP service
> acl http_ports port 443                    # https:// URLs
>
> # TCP ports for HTTP-over-SSL
> acl Ssl_ports port 443           # standard HTTPS
> acl Ssl_ports port 9571         # lexmark.com
> acl Ssl_ports port 22             # SSH
>
> # TCP ports for plain FTP command channel acl ftp_ports port 21
>
> # 
> ----------------------------------------------------------------------
> ------
> # HTTP methods (and pseudo-methods)
>
> acl CONNECT method CONNECT
>
> ######################################################################
> ########
> # Access control - general proxy
> ######################################################################
> ########
>
> # define and allow new ACL for "Safe_ports"
> acl Safe_Ports any-of http_ports Ssl_ports ftp_ports
>
> # 
> ----------------------------------------------------------------------
> ------
> # basic deny rules
>
> # deny anything not from the LAN
> http_access deny !localnet
>
> # allow localnet users
> http_access allow localnet
>
> # blocks self to self connections
> http_access deny to_localhost
>
> # deny unauthorized access and DoS attacks http_access deny 
> !Safe_ports http_access deny CONNECT !Ssl_ports
>
> # allow authenticated clients after all other ACL's http_access allow 
> kerb-auth
>
> # deny any request we missed in the above http_access deny all
>
> # if no other ACL applies, allow
> http_reply_access allow all
>
> This is it. I commented out all other ACL's for allow/deny we had in place for our custom rules. Still unable to browse local via hostname, IP works fine again.
>
> -----Original Message-----
> From: squid-users <squid-users-bounces at lists.squid-cache.org> On 
> Behalf Of Amos Jeffries
> Sent: Saturday, September 7, 2024 10:51 AM
> To: squid-users at lists.squid-cache.org
> Subject: Re: [squid-users] Unable to access internal resources via 
> hostname
>
> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>
>
> On 6/09/24 03:56, Piana, Josh wrote:
>> Hello Amos,
>>
>> While the comments did say that it was just the 10.46.11.0 range, I don't think there's any other ACL forcing that. I tried adding the the two internal sites that are being blocked by their IP, restarted Squid, and tested. Still being blocked. You are right though, both of those web addresses are on a different IP scheme. Ideally we want anything on 172.0.0.0 to be allowed, and 10.96.0.0. The other question I have is, even if we specify those sites IP as "allowed", shouldn't we be able to brwose to them by their hostname as well?
>
>
> That depends no your configuration policy. The default squid.conf only checks that clients are from the LAN and not doing any nasty protocol trick attacks.
>
>
>>
>> Currently, those internal sites ARE reachable. But only if we use IP. While this doesn't bother me, personally, the rest of our users would like to keep browsing via hostname as that's what they're used to and what many have shortcuts for.
>>
>
> Currently I see the ACL "local_dst_dom" is commented out (disabled).
>
> I guess you also have not listed the hostname or domain in the file loaded by "authless_dst" ACL.
>
>
>
>
>> In regards to the results of /etc/resolv.conf, see below:
>> search ad.arc-tech.com
>> nameserver 10.46.11.67
>>
>
> Okay. Then the "NDOT" default of 1 will be applied. So for these HTTP
> messages:
>
>     CONNECT hexp:443 HTTP/1.1
>     Host: hexp
>     ...
>
>
> Will be interpreted by Squid as URL:
>
>    https://hexp/
>
>
> The "dstdomain" ACL will try to match "hexp" exactly.
>
> The "dst" ACL will try to match IPs of "hexp.ad.arc-tech.com"
>
>
>
>> There must be a better way to just allow internal to internal traffic without needing to authenticate through the web proxy. The old config had it, but that was part of the issue. We have no idea how that was working, it didn't make sense at all and it was a bit outdated, Version 2.5 as opposed to our current 5.5.
>>
>> I'm happy to post out config again here, as it's changed a bit and I have cleaned it up.
>>
>> # squid.conf - Squid web cache configuration
>>
>> #####################################################################
>> #
>> ########
>> # General
>> #####################################################################
>> #
>> ########
>>
>> # 2020MAR23 running out with just 1024 as we switch to Hexcel.com OMA 
>> max_filedesc 4096
>>
>
> Unrelated to your problem, but FYI this should probably be much larger (ie 64K minimum, up to 100x expected user count) for a production proxy.
>
>
>>
>> #####################################################################
>> #
>> ########
>> # Logging
>> #####################################################################
>> #
>> ########
>>
>> # this makes the logs readable to humans logformat custom %tl.%03tu 
>> %>a %Ss/%03>Hs %<st %rm %ru %[un %Sh/%<a %mt access_log 
>> daemon:/var/log/squid/access.log custom
>>
>> # this gives better error reporting
>> logformat custom %err_code/%err_detail access_log 
>> daemon:/var/log/squid/access.log custom
>>
>
> This repeat of "custom" will cause issues.
>
> IIRC this was added misunderstanding of Alex instructions.
> What he meant was to **add** "%err_code/%err_detail" to your existing "custom" format.
>
> Like this:
>
> logformat custom %tl.%03tu %>a %Ss/%03>Hs %<st %rm %ru %[un \
>       %Sh/%<a %mt %err_code/%err_detail
>
>
>> # Red Hat-ish log names
>> cache_log /var/log/squid/cache.log
>> cache_access_log /var/log/squid/access.log
>
> This setting opens a third logger writing to access.log, causing more issues.
>
> Remove this "cache_access_log" line.
>
>
>>
>> # store_log is only useful for debugging cache_store_log none
>
>
> FYI, off by default on current Squid. You can probably erase this setting entirely now.
>
>
>> #####################################################################
>> #
>> ########
>> # Network - General/misc
>> #####################################################################
>> #
>> ########
>>
>> # our HTTP proxy port
>> http_port 10.46.11.69:8080
>> # loopback management
>> http_port 127.0.0.1:3128
>
>
> FWIW, you have denied access to "dst 127.0.0.0/8". So traffic to this port will be rejected.
>
>
>>
>> # disable ICP, port is typically 3130 icp_port 0
>
> FYI; disabled by default in modern Squid. You can remove "icp_port".
>
>>
>> # if set to "on", Squid will append your client's IP address in the 
>> HTTP requests it forwards forwarded_for off
>
> "off" will send the text "unknown".
>
> It is better to use "transparent" (pass-thru unchanged) or "delete"
> (erase if existing).
>
>
>> #####################################################################
>> #
>> ########
>> # Authentication
>> #####################################################################
>> #
>> ########
>>
>> auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth
>> -k /etc/squid/HTTP.keytab -s
>> HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
>> auth_param negotiate children 10
>> auth_param negotiate keep_alive on
>> acl kerb-auth proxy_auth REQUIRED
>>
>> #####################################################################
>> # ######## # Access control - shared/common ACL definitions 
>> #####################################################################
>> #
>> ########
>>
>> #
>> ---------------------------------------------------------------------
>> -
>> ------ # networks and hosts (by name or IP address)
>>
>> # acl all src all
>>
>> acl src_self src 127.0.0.0/8
>> acl src_self src 10.46.11.69
>>
>> acl dst_self dst 127.0.0.0/8
>> acl dst_self dst 10.46.11.69
>
>
> FYI, there are more IPs than just 127.0.0.0/8 which can be problematic as loopback sources.
>
> Replace "dst_self" with:
>
>    acl to_localhost dst 10.46.11.69
>
>
>>
>> acl from_arc src 10.46.0.0/15
>>
>> acl local_dst_addr dst 10.0.0.0/8
>> acl local_dst_addr dst 172.0.0.0/8
>>
>> #
>> ---------------------------------------------------------------------
>> -
>> ------
>> # protocols (URL schemes)
>>
>> acl proto_FTP proto FTP
>> acl proto_HTTP proto HTTP
>>
>> #
>> ---------------------------------------------------------------------
>> -
>> ------
>> # TCP port numbers
>>
>> # TCP ports for ordinary HTTP
>> acl http_ports port 80                # standard HTTP
>> acl http_ports port 81                # common alternative
>> acl http_ports port 8001      # epson.com support sub-site
>> acl http_ports port 8080      # common alternative
>
>
> Other ports that are common:
>
>    acl http_ports port 88 8000 8888 # ad-hoc services
>    acl http_ports port 1080  # SOCK frontend to HTTP service
>    acl http_ports port 21-22 # http:// frontend to FTP service
>    acl http_ports port 443   # https:// URLs
>
>
> Or really, **any** port can be valid now that Alt-Svc is widely used.
>
>>
>> # TCP ports for HTTP-over-SSL
>> acl Ssl_ports port 443
>> acl Ssl_ports port 9571               # lexmark.com
>>
>> # TCP ports for plain FTP command channel acl ftp_ports port 21
>>
>> # TCP ports for SSH/SFTP (secure shell) acl ssh_ports port 22
>
> FTR, "ssh_ports" is unused. SSH and SFTP can only use Squid via CONNECT tunnel anyway. So you should list this port as part of "Ssl_ports".
>
>>
>> #
>> ---------------------------------------------------------------------
>> -
>> ------
>> # HTTP methods (and pseudo-methods)
>>
>> acl method_CONNECT method CONNECT
>
> FYI: we have a built-in for modern Squid:
>
>     acl CONNECT method CONNECT
>
> You can replace all "method_CONNECT" with just "CONNECT".
>
>
>>
>> # list of standard HTTP methods
>> acl methods_std method GET HEAD POST PUT DELETE acl methods_std 
>> method TRACE OPTIONS
>>
>
> Consider removing these ACLs and the extra complexity they create.
> Modern HTTP considers many other method names "standard" and current Squid follows the standard-required handling for all of them, and special ones.
>
>
>> #####################################################################
>> #
>> #######
>> # Access control - general proxy
>> #####################################################################
>> #
>> ########
>>
>> # This major section is about which HTTP proxy clients can use Squid 
>> # as an HTTP proxy server.  As opposed to the maintenance/admin-type 
>> # stuff in the previous section.
>>
>> #
>> ---------------------------------------------------------------------
>> -
>> ------
>> # basic deny rules
>> # these block stuff that's never good # we put most denies after 
>> user-auth so we know *who* is trying
>>
>
> Missing basic security to prevent DoS and protocol hijacking attacks:
>
>
>    http_access deny !Safe_ports
>    http_access deny CONNECT !Ssl_ports
>
>
> You can define Safe_ports like this:
>
>     acl Safe_Ports any-of http_ports Ssl_ports ftp_ports
>
>
>
>> # block attempts to connect to proxy server via proxy http_access 
>> deny dst_self
>>
>
> Use:
>     http_access deny to_localhost
>
>
>
>> # block clients which are the proxy server machine itself http_access 
>> deny src_self
>>
>
> FYI, there should be nothing wrong with other software running on the proxy machine (eg software updaters) using Squid. They have to obey the same rules an any other client.
>
>
>> # deny anything not from the LAN
>> http_access deny !from_arc
>
> FYI, we use "localnet" ACL to define the LAN. Makes it a bit easier for others to assist if you use the same. Up to you though.
>
>
>>
>> #
>> ---------------------------------------------------------------------
>> -
>> ------
>> # allow without authentication
>> # these rules allow certain connects without user authentication # 
>> these allow any protocol/method/etc
>>
>> #                 ***** IMPORTANT *****
>> # Adding to these lists also exempts from all content filtering.
>> # In particular, executables will be allowed to download!
>> #                 ***** IMPORTANT *****
>>
>> # allow connects to local destinations without authentication # by 
>> domain name from URL # acl local_dst_dom dstdomain ad.arc-tech.com
>> # http_access       allow local_dst_dom
>> # http_reply_access allow local_dst_dom
>
>
> You have a domain name whitelist ACL two sections below.
> You can remove the above, and list and use the later one for both 
> "local" and other domains.
>
>
>>
>> # by IP address name resolves to
>> http_access       allow local_dst_addr
>> # http_reply_access allow local_dst_addr
>>
>
> Maybe rename "local_dst_addr" to "whitelist_dst_ips" for clarity on 
> what it is doing.
>
>
> Which brings up a security issue: When you list the entire LAN range 
> in this ACL, anyone accessing the proxy is allowed to do whatever they 
> want to your LAN machines. That includes all LAN **and** WAN connections.
>
> Additionally, the bypass of authentication leaves you no trace that 
> this was actually a user, and not some infected LAN machine spreading 
> malware across your LAN. Which is rather risky.
>
>
> Prefer to keep by-IP whitelist's empty or minimal content.
>
>
>
>> # allow trusted hosts without authentication # these are just ip's on 
>> the 10.46.11.x network acl authless_src src "/etc/squid/authless_src"
>> http_access       allow authless_src
>> # http_reply_access allow authless_src
>>
>> # allow the following destinations without authentication # list of 
>> random approved websites # whats the advantage of not authenticating?
>> acl authless_dst dstdomain "/etc/squid/authless_dst"
>> http_access       allow authless_dst
>> # http_reply_access allow authless_dst
>>
>
> This should be combined with "local_dst_dom". Just use different lines
> like so:
>
>    acl authless_dst dstdomain "/etc/squid/authless_dst"
>    acl authless_dst dstdomain .ad.arc-tech.com
>    acl authless_dst dstdomain .hexcelssp.com hexcelssp
>
>    http_access allow whitelist
>
>
>> # ----------------------------------------------------------------------------
>> # block before authentication
>> # these rules block certain connects without user authentication
>> # done for software which handles proxy auth requests badly
>> # for example, popping up many auth prompts
>> # this does mean we cannot whitelist for users
>>
>> # blocked destinations, by host or domain, before authentication
>> # websites that are auto-deny
>> acl bad_domains_preauth dstdomain "/etc/squid/bad_domains_preauth"
>> http_access deny bad_domains_preauth
>>
>> # ----------------------------------------------------------------------------
>> # require proxy authentication
>>
>> # ********************************************************************
>> # * anything past this point requires users to authenticate to proxy *
>> # ********************************************************************
>>
>> # Uncomment these lines to disable authentication requirement for all
>> # but a few test boxes.  Useful if NTLM gets broken.
>> # acl from_test_boxes src 10.2.1.5
>> # http_access allow !from_test_boxes from_arc
>>
>
> FYI, you have "deny !from_arc" earlier above.
>
> This is simpler and does the same thing as the above line:
>
>     # http_access allow !from_test_boxes
>
>
>> # block clients which are not authenticated
>> # http_access deny !authenticated
>>
>
> You named the ACL "kerb-auth", not "authenticated".
>
>
>> # block certain user IDs from using proxy server
>> # list of ad users and service accounts to automatically deny proxy
>> acl block_user proxy_auth_regex -i "/etc/squid/block_user"
>> http_access deny block_user
>
>
> I suggest this to prevent re-login loop for these forbidden services:
>
>    http_access deny !kerb-auth
>    http_access deny block_user all
>
>
>>
>> # ----------------------------------------------------------------------------
>> # general whitelist
>>
>> # whitelist for locations/sites (override blocking)
>> # allows complex URLs
>> # some bad_urls patterns are generic
>> # they block suspicous URLs or generally unwanted sites
>> # this whitelist can make specific exceptions within those
>> acl bad_exception_urls url_regex -i "/etc/squid/bad_exception_urls"
>>
>> # ----------------------------------------------------------------------------
>> # executable blocking
>>
>> # we do this separately from other content blocking
>> # in order to allow ITLIB to still download
>> # doing it with other blocking causes a flood of browser auth req's
>> # for users visting sites with video
>>
>> # file extensions to block
>> # don't try to block .COM files here
>> # it will get confused with .com domain and block too many things
>> acl exec_files url_regex -i "/etc/squid/exec_files"
>
> Consider using the "urlpath_regex" ACL type instead. It does not match
> against the scheme://domain:port part of URLs.
>
>
>>
>> # usernames not to block
>> acl exec_users proxy_auth_regex -i "/etc/squid/exec_users"
>>
>> # activate
>> http_access deny !bad_exception_urls !exec_users exec_files
>> deny_info ERR_BLOCK_TYPE exec_files
>>
>> # ----------------------------------------------------------------------------
>> # selective whitelists
>>
>> # these override the general blacklists by explictly allowing things
>> # some multimedia services (I.E. YouTube) are permitted for certain users
>> # exempts them from content blocking in this section
>>
>> # list of users for this
>> acl mmedia_users proxy_auth_regex -i "/etc/squid/mmedia_users"
>>
>> # list of sites for this
>> acl mmedia_sites dstdomain "/etc/squid/mmedia_sites"
>>
>> # if a mmedia user attempts to access a mmedia site via appropriate protocols, allow it
>> # done for both HTTP/TCP/80 and HTTP/SSL/443
>> # done for both HTTP request as well as HTTP reply/response
>> # otherwise the later bad_types Content-Type multimedia blocking rule kicks in
>>
>> http_access       allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
>> # tp_reply_access allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
>>
>> http_access       allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users
>> # http_reply_access allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users
>
>
> FYI, Websites like YouTube can dynamically negotiate the media source
> ports to be non-standard values using Alt-Svc headers.
>
> If you had the default security settings at the top of your http_access
> rules:
>
>    http_access deny !Safe_ports
>    http_access deny CONNECT !SSL_Ports
>
> ... you would not need to make (bad) assumptions about the protocols and
> ports used by media sites here.
>
> Also, "mmedia_users" being last on the line risks a 407 re-auth
> challenge occuring. Best place it earlier.
>
>
> Leaving these rules as:
>
>      http_access allow mmedia_users mmedia_sites
>
>
>>
>> # ----------------------------------------------------------------------------
>> # general blacklists
>> # porn, wastes of bandwidth, etc.
>>
>>
>> # blocked destinations, by host or domain
>> # sites we don't want people using
>> acl bad_domains dstdomain "/etc/squid/bad_domains"
>> http_access deny !bad_exception_urls bad_domains
>> deny_info ERR_BLOCK_DST       bad_domains
>>
>> # blocked destinations, by host or domain, regex pattern
>> acl bad_domains_regex dstdom_regex -i "/etc/squid/bad_domains_regex"
>> http_access deny !bad_exception_urls bad_domains_regex
>> deny_info ERR_BLOCK_DST       bad_domains_regex
>>
>> # blocked destinations, by complex URL
>> # typical use: block just part of a site, by URL path
>> # example use: block just the advertsing section of a site
>> acl bad_urls url_regex -i "/etc/squid/bad_urls"
>> http_access deny !bad_exception_urls bad_urls
>> deny_info ERR_BLOCK_DST       bad_urls
>>
>> # blocked content types, by apparent file name
>> acl bad_files urlpath_regex -i "/etc/squid/bad_files"
>> http_access deny !bad_exception_urls bad_files
>> deny_info ERR_BLOCK_TYPE bad_files
>>
>> # blocked content types, by MIME content type, in response
>> acl bad_types rep_mime_type -i "/etc/squid/bad_types"
>> # http_reply_access deny bad_types !bad_exception_urls
>> deny_info ERR_BLOCK_TYPE bad_types
>
>
> FYI, in order for the deny_info action to be taken the ACL it is
> attached to must be the final one on a line.
>
> Previous config was fine, but this "bad_types" use will not work. You
> need to re-order the access checks like this:
>
>
>    # http_reply_access deny !bad_exception_urls bad_types
>
>
>>
>
> This part from here ...
>
>> # ----------------------------------------------------------------------------
>> # standard web (HTTP PUT/GET/etc) access
>>
>> # We basically allow any auth'ed user to connect via HTTP to anywhere,
>> # so long as it uses a standard port, and is not a direct CONNECT
>> # attempt, or blocked, or any of the other stuff above.
>>
>> http_access allow http_ports proto_HTTP methods_std
>>
>> # ----------------------------------------------------------------------------
>> # direct CONNECT for HTTP-over-SSL (HTTPS)
>>
>> http_access allow method_CONNECT ssl_ports
>>
>> # ----------------------------------------------------------------------------
>> # deny any other CONNECT attempts
>>
>> http_access deny method_CONNECT
>>
>> # ----------------------------------------------------------------------------
>> # FTP via HTTP proxy
>>
>> http_access allow ftp_ports proto_FTP
>>
>
> ... to here.
>
> Is better handled by the default squid.conf:
>
>    http_access deny !Safe_ports
>    http_access deny CONNECT !Ssl_ports
>
> Placed at the top of your http_access lines.
>
>
>> # ----------------------------------------------------------------------------
>> # catch-all defaults
>> http_access allow kerb-auth
>>
>> # deny any request we missed in the above
>> http_access deny all
>>
>> # If we allowed the request, allow the reply (HTTP response) as well.
>> # Rules above many allow or deny specific reply before now.
>> # If nothing more specific matched, we allow.
>> # This should be OK since we filter mainly on requests.
>> # http_reply_access allow all
>>
>
> FWIW, it is hard to tell what the exact last reply action could have
> been. So I would un-comment this allow line to be certain it is what
> happens.
>
>
>> ##############################################################################
>> # END OF FILE
>> ##############################################################################
>>
>
> HTH
> Amos
>
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users

_______________________________________________
squid-users mailing list
squid-users at lists.squid-cache.org
https://lists.squid-cache.org/listinfo/squid-users


From Antony.Stone at squid.open.source.it  Mon Sep 16 18:22:58 2024
From: Antony.Stone at squid.open.source.it (Antony Stone)
Date: Mon, 16 Sep 2024 20:22:58 +0200
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <3e263117c0b7410da754d42f55671fea@hexcel.com>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <28fdeaae-9900-4289-8a3b-0db26773b9a4@measurement-factory.com>
 <3e263117c0b7410da754d42f55671fea@hexcel.com>
Message-ID: <202409162022.58535.Antony.Stone@squid.open.source.it>

On Monday 16 September 2024 at 20:06:41, Piana, Josh wrote:

> How I understand the rules are as follows:
> > http_access deny !localnet
> 
> This denies HTTP traffic to what I defined as "localnet".

No; firstly the "localnet" ACL is defined by *source* address, therefore 
"localnet" matches traffic *from* your local network.

Secondly the ! negates this, therefore "!localnet" matches any source address 
which is *not* in your local network.

Therefore "http_access deny !localnet" denies any access from an address not 
in your local network.

> > http_access allow localnet

This then allows access from any address which *is* in your local network.

Now, having matched all traffic not from your local network, and all traffic which 
is from your local network, you have accounted for all possible traffic, 
therefore any other rules have no effect.


Hope this helps,


Antony.

-- 
Because it messes up the order in which people normally read text.
> Why is top-posting such a bad thing?
> > Top-posting.
> > > What is the most annoying way of replying to e-mail?

                                                   Please reply to the list;
                                                         please *don't* CC me.


From Josh.Piana at hexcel.com  Mon Sep 16 18:57:35 2024
From: Josh.Piana at hexcel.com (Piana, Josh)
Date: Mon, 16 Sep 2024 18:57:35 +0000
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <202409162022.58535.Antony.Stone@squid.open.source.it>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <28fdeaae-9900-4289-8a3b-0db26773b9a4@measurement-factory.com>
 <3e263117c0b7410da754d42f55671fea@hexcel.com>
 <202409162022.58535.Antony.Stone@squid.open.source.it>
Message-ID: <d54333533f9d4db79c270a9745534b28@hexcel.com>

Antony, 

So those two rules were definitely not the way to go, thank you to those who clarified that to me. 

I'll remove them. 

This is really frustrating. I've been trying to get a working Squid configuration for weeks now and it is literally a 5 minute process for most people. 

I'll keep looking and see what else could be blocking traffic. 

-----Original Message-----
From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of Antony Stone
Sent: Monday, September 16, 2024 2:23 PM
To: squid-users at lists.squid-cache.org
Subject: Re: [squid-users] Unable to access internal resources via hostname

[You don't often get email from antony.stone at squid.open.source.it. Learn why this is important at https://aka.ms/LearnAboutSenderIdentification ]

Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.


On Monday 16 September 2024 at 20:06:41, Piana, Josh wrote:

> How I understand the rules are as follows:
> > http_access deny !localnet
>
> This denies HTTP traffic to what I defined as "localnet".

No; firstly the "localnet" ACL is defined by *source* address, therefore "localnet" matches traffic *from* your local network.

Secondly the ! negates this, therefore "!localnet" matches any source address which is *not* in your local network.

Therefore "http_access deny !localnet" denies any access from an address not in your local network.

> > http_access allow localnet

This then allows access from any address which *is* in your local network.

Now, having matched all traffic not from your local network, and all traffic which is from your local network, you have accounted for all possible traffic, therefore any other rules have no effect.


Hope this helps,


Antony.

--
Because it messes up the order in which people normally read text.
> Why is top-posting such a bad thing?
> > Top-posting.
> > > What is the most annoying way of replying to e-mail?

                                                   Please reply to the list;
                                                         please *don't* CC me.
_______________________________________________
squid-users mailing list
squid-users at lists.squid-cache.org
https://lists.squid-cache.org/listinfo/squid-users


From Josh.Piana at hexcel.com  Mon Sep 16 21:05:07 2024
From: Josh.Piana at hexcel.com (Piana, Josh)
Date: Mon, 16 Sep 2024 21:05:07 +0000
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <6f52fee0-5071-4a99-b02c-8adac36c8582@measurement-factory.com>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <Zs84drvoIpZ1f6DR@fantomas.sk> <58bdfaada3fa46d0938b7346ec04c336@hexcel.com>
 <947309fa-d1fc-4a75-ac49-ea7bc5c5ff12@measurement-factory.com>
 <faffca37-fa59-46ff-80e4-245c37fa90b9@measurement-factory.com>
 <c00942c1c8ab46b5b393d70f32346798@hexcel.com>
 <59274673-47e9-431d-ad45-7fa3a5a8ebca@measurement-factory.com>
 <d063bef52efd4e32a9f9bb27f934e673@hexcel.com>
 <e35fb7b1-12ce-41b8-83c1-51a208739127@measurement-factory.com>
 <f7ca72b579474cc184e22dfd6ef55683@hexcel.com>
 <4537b23c7a534cd3a716ffd4f8471f5e@hexcel.com>
 <c4ae0610-b8b2-4a26-bed9-8cd1bf2b6901@treenet.co.nz>
 <d3ef9e5efbad41c39c74dcdb10f8f91a@hexcel.com>
 <20d65da8-8e6e-47f6-9250-04ad8f26ff5a@treenet.co.nz>
 <8faab648625547fc88a069512da16c4f@hexcel.com>
 <28fdeaae-9900-4289-8a3b-0db26773b9a4@measurement-factory.com>
 <75e55e0be4044bfcbf904591e7310cc8@hexcel.com>
 <6f52fee0-5071-4a99-b02c-8adac36c8582@measurement-factory.com>
Message-ID: <f4dd7721f37e4883b0d02e4b28f35fc9@hexcel.com>

Hello, 

So I've created  a separate squid.conf file, removed all of our custom ACL's, threw in our network information, added our authentication methods, and just followed the "default" profile. 

Now I can't even browse the web, access internal resources, or anything. What am I doing wrong? 

Please see below: 

##############################################################################
# Authentication
##############################################################################

auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth -k /etc/squid/HTTP.keytab -s HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
auth_param negotiate children 10
auth_param negotiate keep_alive on

# allow authorized user, deny unathorized users
acl kerb-auth proxy_auth REQUIRED
http_access deny !kerb-auth
http_access allow kerb-auth


##############################################################################
# Access control - shared/common ACL definitions
##############################################################################

# ----------------------------------------------------------------------------
# networks and hosts (by name or IP address)

acl localnet src 10.0.0.0/8      # main ARC network
acl localnet src 172.0.0.0/8    # LAN devices

# ----------------------------------------------------------------------------
# TCP port numbers

acl SSL_ports port 443
acl Safe_ports port 80            # http
acl Safe_ports port 21            # ftp
acl Safe_ports port 443          # https
acl Safe_ports port 5001        # used by NAS
acl Safe_ports port 8080        # used by ARCGATE2 proxy
acl Safe_ports port 1025-65535  # unregistered ports

##############################################################################
# Access control - general proxy
##############################################################################

# ----------------------------------------------------------------------------
# basic allow/deny rules

# deny unauthorized access and DoS attacks
http_access deny !Safe_ports

# deny CONNECT to other thans ecure SSL ports
http_access deny CONNECT !SSL_ports

# only allow cachemgr access from localhost
http_access allow localhost manager
http_access deny manager

# allows proxy server applications to run without getting confused with
# local user access rights
http_access deny to_localhost

# ----------------------------------------------------------------------------
# catch-all defaults

# allow access from local networks
http_access allow localnet
http_access allow localhost

# deny any request we missed in the above
http_access deny all

# listen to this port
http_port 8080

##############################################################################
# END OF FILE
##############################################################################

-----Original Message-----
From: Alex Rousskov <rousskov at measurement-factory.com> 
Sent: Monday, September 16, 2024 1:35 PM
To: Piana, Josh <Josh.Piana at hexcel.com>
Subject: Re: [squid-users] Unable to access internal resources via hostname

Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.


Would you mind reposting this to squid-users? If you do, please consider adjusting your text to reflect a critical difference between "acl..."
and "http_access..." lines -- the two http_access rules are the _first_ access rules in your squid.conf (not "very bottom" ones)! --Alex.

On 2024-09-16 13:26, Piana, Josh wrote:
> Hey Alex,
>
>> http_access deny !localnet
>> http_access allow localnet
>
> These are at the very bottom of the config, so any other matching ACL would have a chance to be implicative before these two statements. Is that correct?
>
> To me, these two statements, after all other ACL's are read top to bottom,  say "deny HTTP access to the local network". While the second argument says to allow it, just to have that in there if, for whatever reason, the other ACL's don't apply.
>
> I can see how "http_access deny !localnet" could block traffic. I'll just take it out if neither of these statements are needed.
>
> -----Original Message-----
> From: squid-users <squid-users-bounces at lists.squid-cache.org> On 
> Behalf Of Alex Rousskov
> Sent: Monday, September 16, 2024 10:42 AM
> To: squid-users at lists.squid-cache.org
> Subject: Re: [squid-users] Unable to access internal resources via 
> hostname
>
> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>
>
> On 2024-09-16 09:58, Piana, Josh wrote:
>
>> I removed all of the special, custom ACL's and we still don't have internal to internal browsing via hostname.
>
> FWIW, these first two http_access rules make all subsequent http_access rules irrelevant/unused because these two rules match all traffic:
>
>> http_access deny !localnet
>> http_access allow localnet
>
> I did not look further, but the above combination is a sign that you interpret http_access rules differently than Squid does. Please make sure you understand why the two rules above make all subsequent http_access rules irrelevant/unused before adjusting your configuration further. Ask questions as needed.
>
>
> If the primary problem persists after addressing this configuration problem, then my earlier (2024-09-04) recommendation stands: Please restate the primary problem (e.g., detail what "don't have browsing"
> means in terms of the test transaction outcome) and share debugging log of that test transaction again.
>
>
> HTH,
>
> Alex.
>
>
>> So there's something wrong with either the order of the squid.conf or I'm missing some "allow" variable.
>>
>> Please see below for my current config:
>>
>> #####################################################################
>> #
>> ########
>> # Authentication
>> #####################################################################
>> #
>> ########
>>
>> auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth
>> -k /etc/squid/HTTP.keytab -s
>> HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
>> auth_param negotiate children 10
>> auth_param negotiate keep_alive on
>> acl kerb-auth proxy_auth REQUIRED
>>
>> #####################################################################
>> # ######## # Access control - shared/common ACL definitions 
>> #####################################################################
>> #
>> ######## #
>> ---------------------------------------------------------------------
>> -
>> ------ # networks and hosts (by name or IP address)
>>
>> acl src_self src 127.0.0.0/8
>> acl src_self src 10.46.11.69
>>
>> acl to_localhost dst 10.46.11.69
>>
>> acl localnet src 10.0.0.0/8
>> acl localnet src 172.0.0.0/8
>>
>> acl local_dst_addr dst 10.0.0.0/8
>> acl local_dst_addr dst 172.0.0.0/8
>>
>> #
>> ---------------------------------------------------------------------
>> -
>> ------
>> # protocols (URL schemes)
>>
>> acl proto_FTP proto FTP
>> acl proto_HTTP proto HTTP
>>
>> #
>> ---------------------------------------------------------------------
>> -
>> ------
>> # TCP port numbers
>>
>> # TCP ports for ordinary HTTP
>> acl http_ports port 80                     # standard HTTP
>> acl http_ports port 81                     # common alternative
>> acl http_ports port 8001                   # epson.com support sub-site
>> acl http_ports port 8080                   # common alternative
>> acl http_ports port 88 8000 8888   # ad-hoc services
>> acl http_ports port 1080                   # SOCK frontend to HTTP service
>> acl http_ports port 21-22                  # http:// frontend to FTP service
>> acl http_ports port 443                    # https:// URLs
>>
>> # TCP ports for HTTP-over-SSL
>> acl Ssl_ports port 443           # standard HTTPS
>> acl Ssl_ports port 9571         # lexmark.com
>> acl Ssl_ports port 22             # SSH
>>
>> # TCP ports for plain FTP command channel acl ftp_ports port 21
>>
>> #
>> ---------------------------------------------------------------------
>> -
>> ------
>> # HTTP methods (and pseudo-methods)
>>
>> acl CONNECT method CONNECT
>>
>> #####################################################################
>> #
>> ########
>> # Access control - general proxy
>> #####################################################################
>> #
>> ########
>>
>> # define and allow new ACL for "Safe_ports"
>> acl Safe_Ports any-of http_ports Ssl_ports ftp_ports
>>
>> #
>> ---------------------------------------------------------------------
>> -
>> ------
>> # basic deny rules
>>
>> # deny anything not from the LAN
>> http_access deny !localnet
>>
>> # allow localnet users
>> http_access allow localnet
>>
>> # blocks self to self connections
>> http_access deny to_localhost
>>
>> # deny unauthorized access and DoS attacks http_access deny 
>> !Safe_ports http_access deny CONNECT !Ssl_ports
>>
>> # allow authenticated clients after all other ACL's http_access allow 
>> kerb-auth
>>
>> # deny any request we missed in the above http_access deny all
>>
>> # if no other ACL applies, allow
>> http_reply_access allow all
>>
>> This is it. I commented out all other ACL's for allow/deny we had in place for our custom rules. Still unable to browse local via hostname, IP works fine again.
>>
>> -----Original Message-----
>> From: squid-users <squid-users-bounces at lists.squid-cache.org> On 
>> Behalf Of Amos Jeffries
>> Sent: Saturday, September 7, 2024 10:51 AM
>> To: squid-users at lists.squid-cache.org
>> Subject: Re: [squid-users] Unable to access internal resources via 
>> hostname
>>
>> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>>
>>
>> On 6/09/24 03:56, Piana, Josh wrote:
>>> Hello Amos,
>>>
>>> While the comments did say that it was just the 10.46.11.0 range, I don't think there's any other ACL forcing that. I tried adding the the two internal sites that are being blocked by their IP, restarted Squid, and tested. Still being blocked. You are right though, both of those web addresses are on a different IP scheme. Ideally we want anything on 172.0.0.0 to be allowed, and 10.96.0.0. The other question I have is, even if we specify those sites IP as "allowed", shouldn't we be able to brwose to them by their hostname as well?
>>
>>
>> That depends no your configuration policy. The default squid.conf only checks that clients are from the LAN and not doing any nasty protocol trick attacks.
>>
>>
>>>
>>> Currently, those internal sites ARE reachable. But only if we use IP. While this doesn't bother me, personally, the rest of our users would like to keep browsing via hostname as that's what they're used to and what many have shortcuts for.
>>>
>>
>> Currently I see the ACL "local_dst_dom" is commented out (disabled).
>>
>> I guess you also have not listed the hostname or domain in the file loaded by "authless_dst" ACL.
>>
>>
>>
>>
>>> In regards to the results of /etc/resolv.conf, see below:
>>> search ad.arc-tech.com
>>> nameserver 10.46.11.67
>>>
>>
>> Okay. Then the "NDOT" default of 1 will be applied. So for these HTTP
>> messages:
>>
>>      CONNECT hexp:443 HTTP/1.1
>>      Host: hexp
>>      ...
>>
>>
>> Will be interpreted by Squid as URL:
>>
>>     https://hexp/
>>
>>
>> The "dstdomain" ACL will try to match "hexp" exactly.
>>
>> The "dst" ACL will try to match IPs of "hexp.ad.arc-tech.com"
>>
>>
>>
>>> There must be a better way to just allow internal to internal traffic without needing to authenticate through the web proxy. The old config had it, but that was part of the issue. We have no idea how that was working, it didn't make sense at all and it was a bit outdated, Version 2.5 as opposed to our current 5.5.
>>>
>>> I'm happy to post out config again here, as it's changed a bit and I have cleaned it up.
>>>
>>> # squid.conf - Squid web cache configuration
>>>
>>> ####################################################################
>>> #
>>> #
>>> ########
>>> # General
>>> ####################################################################
>>> #
>>> #
>>> ########
>>>
>>> # 2020MAR23 running out with just 1024 as we switch to Hexcel.com 
>>> OMA max_filedesc 4096
>>>
>>
>> Unrelated to your problem, but FYI this should probably be much larger (ie 64K minimum, up to 100x expected user count) for a production proxy.
>>
>>
>>>
>>> ####################################################################
>>> #
>>> #
>>> ########
>>> # Logging
>>> ####################################################################
>>> #
>>> #
>>> ########
>>>
>>> # this makes the logs readable to humans logformat custom %tl.%03tu 
>>> %>a %Ss/%03>Hs %<st %rm %ru %[un %Sh/%<a %mt access_log 
>>> daemon:/var/log/squid/access.log custom
>>>
>>> # this gives better error reporting
>>> logformat custom %err_code/%err_detail access_log 
>>> daemon:/var/log/squid/access.log custom
>>>
>>
>> This repeat of "custom" will cause issues.
>>
>> IIRC this was added misunderstanding of Alex instructions.
>> What he meant was to **add** "%err_code/%err_detail" to your existing "custom" format.
>>
>> Like this:
>>
>> logformat custom %tl.%03tu %>a %Ss/%03>Hs %<st %rm %ru %[un \
>>        %Sh/%<a %mt %err_code/%err_detail
>>
>>
>>> # Red Hat-ish log names
>>> cache_log /var/log/squid/cache.log
>>> cache_access_log /var/log/squid/access.log
>>
>> This setting opens a third logger writing to access.log, causing more issues.
>>
>> Remove this "cache_access_log" line.
>>
>>
>>>
>>> # store_log is only useful for debugging cache_store_log none
>>
>>
>> FYI, off by default on current Squid. You can probably erase this setting entirely now.
>>
>>
>>> ####################################################################
>>> #
>>> #
>>> ########
>>> # Network - General/misc
>>> ####################################################################
>>> #
>>> #
>>> ########
>>>
>>> # our HTTP proxy port
>>> http_port 10.46.11.69:8080
>>> # loopback management
>>> http_port 127.0.0.1:3128
>>
>>
>> FWIW, you have denied access to "dst 127.0.0.0/8". So traffic to this port will be rejected.
>>
>>
>>>
>>> # disable ICP, port is typically 3130 icp_port 0
>>
>> FYI; disabled by default in modern Squid. You can remove "icp_port".
>>
>>>
>>> # if set to "on", Squid will append your client's IP address in the 
>>> HTTP requests it forwards forwarded_for off
>>
>> "off" will send the text "unknown".
>>
>> It is better to use "transparent" (pass-thru unchanged) or "delete"
>> (erase if existing).
>>
>>
>>> ####################################################################
>>> #
>>> #
>>> ########
>>> # Authentication
>>> ####################################################################
>>> #
>>> #
>>> ########
>>>
>>> auth_param negotiate program 
>>> /usr/lib64/squid/negotiate_kerberos_auth
>>> -k /etc/squid/HTTP.keytab -s
>>> HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
>>> auth_param negotiate children 10
>>> auth_param negotiate keep_alive on
>>> acl kerb-auth proxy_auth REQUIRED
>>>
>>> ####################################################################
>>> # # ######## # Access control - shared/common ACL definitions 
>>> ####################################################################
>>> #
>>> #
>>> ########
>>>
>>> #
>>> --------------------------------------------------------------------
>>> -
>>> -
>>> ------ # networks and hosts (by name or IP address)
>>>
>>> # acl all src all
>>>
>>> acl src_self src 127.0.0.0/8
>>> acl src_self src 10.46.11.69
>>>
>>> acl dst_self dst 127.0.0.0/8
>>> acl dst_self dst 10.46.11.69
>>
>>
>> FYI, there are more IPs than just 127.0.0.0/8 which can be problematic as loopback sources.
>>
>> Replace "dst_self" with:
>>
>>     acl to_localhost dst 10.46.11.69
>>
>>
>>>
>>> acl from_arc src 10.46.0.0/15
>>>
>>> acl local_dst_addr dst 10.0.0.0/8
>>> acl local_dst_addr dst 172.0.0.0/8
>>>
>>> #
>>> --------------------------------------------------------------------
>>> -
>>> -
>>> ------
>>> # protocols (URL schemes)
>>>
>>> acl proto_FTP proto FTP
>>> acl proto_HTTP proto HTTP
>>>
>>> #
>>> --------------------------------------------------------------------
>>> -
>>> -
>>> ------
>>> # TCP port numbers
>>>
>>> # TCP ports for ordinary HTTP
>>> acl http_ports port 80                # standard HTTP
>>> acl http_ports port 81                # common alternative
>>> acl http_ports port 8001      # epson.com support sub-site
>>> acl http_ports port 8080      # common alternative
>>
>>
>> Other ports that are common:
>>
>>     acl http_ports port 88 8000 8888 # ad-hoc services
>>     acl http_ports port 1080  # SOCK frontend to HTTP service
>>     acl http_ports port 21-22 # http:// frontend to FTP service
>>     acl http_ports port 443   # https:// URLs
>>
>>
>> Or really, **any** port can be valid now that Alt-Svc is widely used.
>>
>>>
>>> # TCP ports for HTTP-over-SSL
>>> acl Ssl_ports port 443
>>> acl Ssl_ports port 9571               # lexmark.com
>>>
>>> # TCP ports for plain FTP command channel acl ftp_ports port 21
>>>
>>> # TCP ports for SSH/SFTP (secure shell) acl ssh_ports port 22
>>
>> FTR, "ssh_ports" is unused. SSH and SFTP can only use Squid via CONNECT tunnel anyway. So you should list this port as part of "Ssl_ports".
>>
>>>
>>> #
>>> --------------------------------------------------------------------
>>> -
>>> -
>>> ------
>>> # HTTP methods (and pseudo-methods)
>>>
>>> acl method_CONNECT method CONNECT
>>
>> FYI: we have a built-in for modern Squid:
>>
>>      acl CONNECT method CONNECT
>>
>> You can replace all "method_CONNECT" with just "CONNECT".
>>
>>
>>>
>>> # list of standard HTTP methods
>>> acl methods_std method GET HEAD POST PUT DELETE acl methods_std 
>>> method TRACE OPTIONS
>>>
>>
>> Consider removing these ACLs and the extra complexity they create.
>> Modern HTTP considers many other method names "standard" and current Squid follows the standard-required handling for all of them, and special ones.
>>
>>
>>> ####################################################################
>>> #
>>> #
>>> #######
>>> # Access control - general proxy
>>> ####################################################################
>>> #
>>> #
>>> ########
>>>
>>> # This major section is about which HTTP proxy clients can use Squid 
>>> # as an HTTP proxy server.  As opposed to the maintenance/admin-type 
>>> # stuff in the previous section.
>>>
>>> #
>>> --------------------------------------------------------------------
>>> -
>>> -
>>> ------
>>> # basic deny rules
>>> # these block stuff that's never good # we put most denies after 
>>> user-auth so we know *who* is trying
>>>
>>
>> Missing basic security to prevent DoS and protocol hijacking attacks:
>>
>>
>>     http_access deny !Safe_ports
>>     http_access deny CONNECT !Ssl_ports
>>
>>
>> You can define Safe_ports like this:
>>
>>      acl Safe_Ports any-of http_ports Ssl_ports ftp_ports
>>
>>
>>
>>> # block attempts to connect to proxy server via proxy http_access 
>>> deny dst_self
>>>
>>
>> Use:
>>      http_access deny to_localhost
>>
>>
>>
>>> # block clients which are the proxy server machine itself 
>>> http_access deny src_self
>>>
>>
>> FYI, there should be nothing wrong with other software running on the proxy machine (eg software updaters) using Squid. They have to obey the same rules an any other client.
>>
>>
>>> # deny anything not from the LAN
>>> http_access deny !from_arc
>>
>> FYI, we use "localnet" ACL to define the LAN. Makes it a bit easier for others to assist if you use the same. Up to you though.
>>
>>
>>>
>>> #
>>> --------------------------------------------------------------------
>>> -
>>> -
>>> ------
>>> # allow without authentication
>>> # these rules allow certain connects without user authentication # 
>>> these allow any protocol/method/etc
>>>
>>> #                 ***** IMPORTANT *****
>>> # Adding to these lists also exempts from all content filtering.
>>> # In particular, executables will be allowed to download!
>>> #                 ***** IMPORTANT *****
>>>
>>> # allow connects to local destinations without authentication # by 
>>> domain name from URL # acl local_dst_dom dstdomain ad.arc-tech.com
>>> # http_access       allow local_dst_dom
>>> # http_reply_access allow local_dst_dom
>>
>>
>> You have a domain name whitelist ACL two sections below.
>> You can remove the above, and list and use the later one for both 
>> "local" and other domains.
>>
>>
>>>
>>> # by IP address name resolves to
>>> http_access       allow local_dst_addr
>>> # http_reply_access allow local_dst_addr
>>>
>>
>> Maybe rename "local_dst_addr" to "whitelist_dst_ips" for clarity on 
>> what it is doing.
>>
>>
>> Which brings up a security issue: When you list the entire LAN range 
>> in this ACL, anyone accessing the proxy is allowed to do whatever 
>> they want to your LAN machines. That includes all LAN **and** WAN connections.
>>
>> Additionally, the bypass of authentication leaves you no trace that 
>> this was actually a user, and not some infected LAN machine spreading 
>> malware across your LAN. Which is rather risky.
>>
>>
>> Prefer to keep by-IP whitelist's empty or minimal content.
>>
>>
>>
>>> # allow trusted hosts without authentication # these are just ip's 
>>> on the 10.46.11.x network acl authless_src src "/etc/squid/authless_src"
>>> http_access       allow authless_src
>>> # http_reply_access allow authless_src
>>>
>>> # allow the following destinations without authentication # list of 
>>> random approved websites # whats the advantage of not authenticating?
>>> acl authless_dst dstdomain "/etc/squid/authless_dst"
>>> http_access       allow authless_dst
>>> # http_reply_access allow authless_dst
>>>
>>
>> This should be combined with "local_dst_dom". Just use different 
>> lines like so:
>>
>>     acl authless_dst dstdomain "/etc/squid/authless_dst"
>>     acl authless_dst dstdomain .ad.arc-tech.com
>>     acl authless_dst dstdomain .hexcelssp.com hexcelssp
>>
>>     http_access allow whitelist
>>
>>
>>> # 
>>> --------------------------------------------------------------------
>>> --------
>>> # block before authentication
>>> # these rules block certain connects without user authentication # 
>>> done for software which handles proxy auth requests badly # for 
>>> example, popping up many auth prompts # this does mean we cannot 
>>> whitelist for users
>>>
>>> # blocked destinations, by host or domain, before authentication # 
>>> websites that are auto-deny acl bad_domains_preauth dstdomain 
>>> "/etc/squid/bad_domains_preauth"
>>> http_access deny bad_domains_preauth
>>>
>>> # 
>>> --------------------------------------------------------------------
>>> --------
>>> # require proxy authentication
>>>
>>> # 
>>> ********************************************************************
>>> # * anything past this point requires users to authenticate to proxy 
>>> * # 
>>> ********************************************************************
>>>
>>> # Uncomment these lines to disable authentication requirement for 
>>> all # but a few test boxes.  Useful if NTLM gets broken.
>>> # acl from_test_boxes src 10.2.1.5
>>> # http_access allow !from_test_boxes from_arc
>>>
>>
>> FYI, you have "deny !from_arc" earlier above.
>>
>> This is simpler and does the same thing as the above line:
>>
>>      # http_access allow !from_test_boxes
>>
>>
>>> # block clients which are not authenticated # http_access deny 
>>> !authenticated
>>>
>>
>> You named the ACL "kerb-auth", not "authenticated".
>>
>>
>>> # block certain user IDs from using proxy server # list of ad users 
>>> and service accounts to automatically deny proxy acl block_user 
>>> proxy_auth_regex -i "/etc/squid/block_user"
>>> http_access deny block_user
>>
>>
>> I suggest this to prevent re-login loop for these forbidden services:
>>
>>     http_access deny !kerb-auth
>>     http_access deny block_user all
>>
>>
>>>
>>> # 
>>> --------------------------------------------------------------------
>>> --------
>>> # general whitelist
>>>
>>> # whitelist for locations/sites (override blocking) # allows complex 
>>> URLs # some bad_urls patterns are generic # they block suspicous 
>>> URLs or generally unwanted sites # this whitelist can make specific 
>>> exceptions within those acl bad_exception_urls url_regex -i 
>>> "/etc/squid/bad_exception_urls"
>>>
>>> # 
>>> --------------------------------------------------------------------
>>> --------
>>> # executable blocking
>>>
>>> # we do this separately from other content blocking # in order to 
>>> allow ITLIB to still download # doing it with other blocking causes 
>>> a flood of browser auth req's # for users visting sites with video
>>>
>>> # file extensions to block
>>> # don't try to block .COM files here # it will get confused with 
>>> .com domain and block too many things acl exec_files url_regex -i 
>>> "/etc/squid/exec_files"
>>
>> Consider using the "urlpath_regex" ACL type instead. It does not 
>> match against the scheme://domain:port part of URLs.
>>
>>
>>>
>>> # usernames not to block
>>> acl exec_users proxy_auth_regex -i "/etc/squid/exec_users"
>>>
>>> # activate
>>> http_access deny !bad_exception_urls !exec_users exec_files 
>>> deny_info ERR_BLOCK_TYPE exec_files
>>>
>>> # 
>>> --------------------------------------------------------------------
>>> --------
>>> # selective whitelists
>>>
>>> # these override the general blacklists by explictly allowing things 
>>> # some multimedia services (I.E. YouTube) are permitted for certain 
>>> users # exempts them from content blocking in this section
>>>
>>> # list of users for this
>>> acl mmedia_users proxy_auth_regex -i "/etc/squid/mmedia_users"
>>>
>>> # list of sites for this
>>> acl mmedia_sites dstdomain "/etc/squid/mmedia_sites"
>>>
>>> # if a mmedia user attempts to access a mmedia site via appropriate 
>>> protocols, allow it # done for both HTTP/TCP/80 and HTTP/SSL/443 # 
>>> done for both HTTP request as well as HTTP reply/response # 
>>> otherwise the later bad_types Content-Type multimedia blocking rule 
>>> kicks in
>>>
>>> http_access       allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
>>> # tp_reply_access allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
>>>
>>> http_access       allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users
>>> # http_reply_access allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users
>>
>>
>> FYI, Websites like YouTube can dynamically negotiate the media source 
>> ports to be non-standard values using Alt-Svc headers.
>>
>> If you had the default security settings at the top of your 
>> http_access
>> rules:
>>
>>     http_access deny !Safe_ports
>>     http_access deny CONNECT !SSL_Ports
>>
>> ... you would not need to make (bad) assumptions about the protocols 
>> and ports used by media sites here.
>>
>> Also, "mmedia_users" being last on the line risks a 407 re-auth 
>> challenge occuring. Best place it earlier.
>>
>>
>> Leaving these rules as:
>>
>>       http_access allow mmedia_users mmedia_sites
>>
>>
>>>
>>> # 
>>> --------------------------------------------------------------------
>>> --------
>>> # general blacklists
>>> # porn, wastes of bandwidth, etc.
>>>
>>>
>>> # blocked destinations, by host or domain # sites we don't want 
>>> people using acl bad_domains dstdomain "/etc/squid/bad_domains"
>>> http_access deny !bad_exception_urls bad_domains
>>> deny_info ERR_BLOCK_DST       bad_domains
>>>
>>> # blocked destinations, by host or domain, regex pattern acl 
>>> bad_domains_regex dstdom_regex -i "/etc/squid/bad_domains_regex"
>>> http_access deny !bad_exception_urls bad_domains_regex
>>> deny_info ERR_BLOCK_DST       bad_domains_regex
>>>
>>> # blocked destinations, by complex URL # typical use: block just 
>>> part of a site, by URL path # example use: block just the advertsing 
>>> section of a site acl bad_urls url_regex -i "/etc/squid/bad_urls"
>>> http_access deny !bad_exception_urls bad_urls
>>> deny_info ERR_BLOCK_DST       bad_urls
>>>
>>> # blocked content types, by apparent file name acl bad_files 
>>> urlpath_regex -i "/etc/squid/bad_files"
>>> http_access deny !bad_exception_urls bad_files deny_info 
>>> ERR_BLOCK_TYPE bad_files
>>>
>>> # blocked content types, by MIME content type, in response acl 
>>> bad_types rep_mime_type -i "/etc/squid/bad_types"
>>> # http_reply_access deny bad_types !bad_exception_urls deny_info 
>>> ERR_BLOCK_TYPE bad_types
>>
>>
>> FYI, in order for the deny_info action to be taken the ACL it is 
>> attached to must be the final one on a line.
>>
>> Previous config was fine, but this "bad_types" use will not work. You 
>> need to re-order the access checks like this:
>>
>>
>>     # http_reply_access deny !bad_exception_urls bad_types
>>
>>
>>>
>>
>> This part from here ...
>>
>>> # 
>>> --------------------------------------------------------------------
>>> -------- # standard web (HTTP PUT/GET/etc) access
>>>
>>> # We basically allow any auth'ed user to connect via HTTP to 
>>> anywhere, # so long as it uses a standard port, and is not a direct 
>>> CONNECT # attempt, or blocked, or any of the other stuff above.
>>>
>>> http_access allow http_ports proto_HTTP methods_std
>>>
>>> # 
>>> --------------------------------------------------------------------
>>> -------- # direct CONNECT for HTTP-over-SSL (HTTPS)
>>>
>>> http_access allow method_CONNECT ssl_ports
>>>
>>> # 
>>> --------------------------------------------------------------------
>>> --------
>>> # deny any other CONNECT attempts
>>>
>>> http_access deny method_CONNECT
>>>
>>> # 
>>> --------------------------------------------------------------------
>>> --------
>>> # FTP via HTTP proxy
>>>
>>> http_access allow ftp_ports proto_FTP
>>>
>>
>> ... to here.
>>
>> Is better handled by the default squid.conf:
>>
>>     http_access deny !Safe_ports
>>     http_access deny CONNECT !Ssl_ports
>>
>> Placed at the top of your http_access lines.
>>
>>
>>> # 
>>> --------------------------------------------------------------------
>>> --------
>>> # catch-all defaults
>>> http_access allow kerb-auth
>>>
>>> # deny any request we missed in the above http_access deny all
>>>
>>> # If we allowed the request, allow the reply (HTTP response) as well.
>>> # Rules above many allow or deny specific reply before now.
>>> # If nothing more specific matched, we allow.
>>> # This should be OK since we filter mainly on requests.
>>> # http_reply_access allow all
>>>
>>
>> FWIW, it is hard to tell what the exact last reply action could have 
>> been. So I would un-comment this allow line to be certain it is what 
>> happens.
>>
>>
>>> ####################################################################
>>> ##########
>>> # END OF FILE
>>> ####################################################################
>>> ##########
>>>
>>
>> HTH
>> Amos
>>
>> _______________________________________________
>> squid-users mailing list
>> squid-users at lists.squid-cache.org
>> https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Flis
>> ts.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7CJosh.Piana
>> %40hexcel.com%7C2812fc617d20433c65bf08dcd675e496%7C4248050df19546d5ac
>> 9c0c7c52b04cae%7C0%7C0%7C638621049069321273%7CUnknown%7CTWFpbGZsb3d8e
>> yJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0
>> %7C%7C%7C&sdata=%2BFxdqzJPExvZ4cC6y97i0UUFCPoIQia8K10kj%2F%2FO5rE%3D&
>> reserved=0 _______________________________________________
>> squid-users mailing list
>> squid-users at lists.squid-cache.org
>> https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Flis
>> ts.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7CJosh.Piana
>> %40hexcel.com%7C2812fc617d20433c65bf08dcd675e496%7C4248050df19546d5ac
>> 9c0c7c52b04cae%7C0%7C0%7C638621049069321273%7CUnknown%7CTWFpbGZsb3d8e
>> yJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0
>> %7C%7C%7C&sdata=%2BFxdqzJPExvZ4cC6y97i0UUFCPoIQia8K10kj%2F%2FO5rE%3D&
>> reserved=0
>
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Flist
> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7CJosh.Piana%4
> 0hexcel.com%7C2812fc617d20433c65bf08dcd675e496%7C4248050df19546d5ac9c0
> c7c52b04cae%7C0%7C0%7C638621049069321273%7CUnknown%7CTWFpbGZsb3d8eyJWI
> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7
> C%7C&sdata=%2BFxdqzJPExvZ4cC6y97i0UUFCPoIQia8K10kj%2F%2FO5rE%3D&reserv
> ed=0


From squid3 at treenet.co.nz  Tue Sep 17 00:47:26 2024
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Tue, 17 Sep 2024 12:47:26 +1200
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <f4dd7721f37e4883b0d02e4b28f35fc9@hexcel.com>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <Zs84drvoIpZ1f6DR@fantomas.sk> <58bdfaada3fa46d0938b7346ec04c336@hexcel.com>
 <947309fa-d1fc-4a75-ac49-ea7bc5c5ff12@measurement-factory.com>
 <faffca37-fa59-46ff-80e4-245c37fa90b9@measurement-factory.com>
 <c00942c1c8ab46b5b393d70f32346798@hexcel.com>
 <59274673-47e9-431d-ad45-7fa3a5a8ebca@measurement-factory.com>
 <d063bef52efd4e32a9f9bb27f934e673@hexcel.com>
 <e35fb7b1-12ce-41b8-83c1-51a208739127@measurement-factory.com>
 <f7ca72b579474cc184e22dfd6ef55683@hexcel.com>
 <4537b23c7a534cd3a716ffd4f8471f5e@hexcel.com>
 <c4ae0610-b8b2-4a26-bed9-8cd1bf2b6901@treenet.co.nz>
 <d3ef9e5efbad41c39c74dcdb10f8f91a@hexcel.com>
 <20d65da8-8e6e-47f6-9250-04ad8f26ff5a@treenet.co.nz>
 <8faab648625547fc88a069512da16c4f@hexcel.com>
 <28fdeaae-9900-4289-8a3b-0db26773b9a4@measurement-factory.com>
 <75e55e0be4044bfcbf904591e7310cc8@hexcel.com>
 <6f52fee0-5071-4a99-b02c-8adac36c8582@measurement-factory.com>
 <f4dd7721f37e4883b0d02e4b28f35fc9@hexcel.com>
Message-ID: <094852b0-d90f-4efb-9a3f-2f6850b2e012@treenet.co.nz>

On 17/09/24 09:05, Piana, Josh wrote:
> Hello,
> 
> So I've created  a separate squid.conf file, removed all of our custom ACL's, threw in our network information, added our authentication methods, and just followed the "default" profile.
> 
> Now I can't even browse the web, access internal resources, or anything. What am I doing wrong?
> 


With the below config you should be asked for login credentials. Then 
allowed through if you provide correct login.


What **exactly** are you seeing as failure?



> Please see below:
> 
> ##############################################################################
> # Authentication
> ##############################################################################
> 
> auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth -k /etc/squid/HTTP.keytab -s HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
> auth_param negotiate children 10
> auth_param negotiate keep_alive on
> 
> # allow authorized user, deny unathorized users
> acl kerb-auth proxy_auth REQUIRED
> http_access deny !kerb-auth
> http_access allow kerb-auth
> 
> 
> ##############################################################################
> # Access control - shared/common ACL definitions
> ##############################################################################
> 
> # ----------------------------------------------------------------------------
> # networks and hosts (by name or IP address)
> 
> acl localnet src 10.0.0.0/8      # main ARC network
> acl localnet src 172.0.0.0/8    # LAN devices
> 
> # ----------------------------------------------------------------------------
> # TCP port numbers
> 
> acl SSL_ports port 443
> acl Safe_ports port 80            # http
> acl Safe_ports port 21            # ftp
> acl Safe_ports port 443          # https
> acl Safe_ports port 5001        # used by NAS
> acl Safe_ports port 8080        # used by ARCGATE2 proxy
> acl Safe_ports port 1025-65535  # unregistered ports
> 
> ##############################################################################
> # Access control - general proxy
> ##############################################################################
> 
> # ----------------------------------------------------------------------------
> # basic allow/deny rules
> 
> # deny unauthorized access and DoS attacks
> http_access deny !Safe_ports
> 
> # deny CONNECT to other thans ecure SSL ports
> http_access deny CONNECT !SSL_ports
> 
> # only allow cachemgr access from localhost
> http_access allow localhost manager
> http_access deny manager
> 
> # allows proxy server applications to run without getting confused with
> # local user access rights
> http_access deny to_localhost
> 
> # ----------------------------------------------------------------------------
> # catch-all defaults
> 
> # allow access from local networks
> http_access allow localnet
> http_access allow localhost
> 
> # deny any request we missed in the above
> http_access deny all
> 
> # listen to this port
> http_port 8080
> 
> ##############################################################################
> # END OF FILE
> ##############################################################################
> 
> -----Original Message-----
> From: Alex Rousskov <rousskov at measurement-factory.com>
> Sent: Monday, September 16, 2024 1:35 PM
> To: Piana, Josh <Josh.Piana at hexcel.com>
> Subject: Re: [squid-users] Unable to access internal resources via hostname
> 
> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
> 
> 
> Would you mind reposting this to squid-users? If you do, please consider adjusting your text to reflect a critical difference between "acl..."
> and "http_access..." lines -- the two http_access rules are the _first_ access rules in your squid.conf (not "very bottom" ones)! --Alex.
> 
> On 2024-09-16 13:26, Piana, Josh wrote:
>> Hey Alex,
>>
>>> http_access deny !localnet
>>> http_access allow localnet
>>
>> These are at the very bottom of the config, so any other matching ACL would have a chance to be implicative before these two statements. Is that correct?
>>
>> To me, these two statements, after all other ACL's are read top to bottom,  say "deny HTTP access to the local network". While the second argument says to allow it, just to have that in there if, for whatever reason, the other ACL's don't apply.
>>
>> I can see how "http_access deny !localnet" could block traffic. I'll just take it out if neither of these statements are needed.
>>
>> -----Original Message-----
>> From: squid-users <squid-users-bounces at lists.squid-cache.org> On
>> Behalf Of Alex Rousskov
>> Sent: Monday, September 16, 2024 10:42 AM
>> To: squid-users at lists.squid-cache.org
>> Subject: Re: [squid-users] Unable to access internal resources via
>> hostname
>>
>> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>>
>>
>> On 2024-09-16 09:58, Piana, Josh wrote:
>>
>>> I removed all of the special, custom ACL's and we still don't have internal to internal browsing via hostname.
>>
>> FWIW, these first two http_access rules make all subsequent http_access rules irrelevant/unused because these two rules match all traffic:
>>
>>> http_access deny !localnet
>>> http_access allow localnet
>>
>> I did not look further, but the above combination is a sign that you interpret http_access rules differently than Squid does. Please make sure you understand why the two rules above make all subsequent http_access rules irrelevant/unused before adjusting your configuration further. Ask questions as needed.
>>
>>
>> If the primary problem persists after addressing this configuration problem, then my earlier (2024-09-04) recommendation stands: Please restate the primary problem (e.g., detail what "don't have browsing"
>> means in terms of the test transaction outcome) and share debugging log of that test transaction again.
>>
>>
>> HTH,
>>
>> Alex.
>>
>>
>>> So there's something wrong with either the order of the squid.conf or I'm missing some "allow" variable.
>>>
>>> Please see below for my current config:
>>>
>>> #####################################################################
>>> #
>>> ########
>>> # Authentication
>>> #####################################################################
>>> #
>>> ########
>>>
>>> auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth
>>> -k /etc/squid/HTTP.keytab -s
>>> HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
>>> auth_param negotiate children 10
>>> auth_param negotiate keep_alive on
>>> acl kerb-auth proxy_auth REQUIRED
>>>
>>> #####################################################################
>>> # ######## # Access control - shared/common ACL definitions
>>> #####################################################################
>>> #
>>> ######## #
>>> ---------------------------------------------------------------------
>>> -
>>> ------ # networks and hosts (by name or IP address)
>>>
>>> acl src_self src 127.0.0.0/8
>>> acl src_self src 10.46.11.69
>>>
>>> acl to_localhost dst 10.46.11.69
>>>
>>> acl localnet src 10.0.0.0/8
>>> acl localnet src 172.0.0.0/8
>>>
>>> acl local_dst_addr dst 10.0.0.0/8
>>> acl local_dst_addr dst 172.0.0.0/8
>>>
>>> #
>>> ---------------------------------------------------------------------
>>> -
>>> ------
>>> # protocols (URL schemes)
>>>
>>> acl proto_FTP proto FTP
>>> acl proto_HTTP proto HTTP
>>>
>>> #
>>> ---------------------------------------------------------------------
>>> -
>>> ------
>>> # TCP port numbers
>>>
>>> # TCP ports for ordinary HTTP
>>> acl http_ports port 80                     # standard HTTP
>>> acl http_ports port 81                     # common alternative
>>> acl http_ports port 8001                   # epson.com support sub-site
>>> acl http_ports port 8080                   # common alternative
>>> acl http_ports port 88 8000 8888   # ad-hoc services
>>> acl http_ports port 1080                   # SOCK frontend to HTTP service
>>> acl http_ports port 21-22                  # http:// frontend to FTP service
>>> acl http_ports port 443                    # https:// URLs
>>>
>>> # TCP ports for HTTP-over-SSL
>>> acl Ssl_ports port 443           # standard HTTPS
>>> acl Ssl_ports port 9571         # lexmark.com
>>> acl Ssl_ports port 22             # SSH
>>>
>>> # TCP ports for plain FTP command channel acl ftp_ports port 21
>>>
>>> #
>>> ---------------------------------------------------------------------
>>> -
>>> ------
>>> # HTTP methods (and pseudo-methods)
>>>
>>> acl CONNECT method CONNECT
>>>
>>> #####################################################################
>>> #
>>> ########
>>> # Access control - general proxy
>>> #####################################################################
>>> #
>>> ########
>>>
>>> # define and allow new ACL for "Safe_ports"
>>> acl Safe_Ports any-of http_ports Ssl_ports ftp_ports
>>>
>>> #
>>> ---------------------------------------------------------------------
>>> -
>>> ------
>>> # basic deny rules
>>>
>>> # deny anything not from the LAN
>>> http_access deny !localnet
>>>
>>> # allow localnet users
>>> http_access allow localnet
>>>
>>> # blocks self to self connections
>>> http_access deny to_localhost
>>>
>>> # deny unauthorized access and DoS attacks http_access deny
>>> !Safe_ports http_access deny CONNECT !Ssl_ports
>>>
>>> # allow authenticated clients after all other ACL's http_access allow
>>> kerb-auth
>>>
>>> # deny any request we missed in the above http_access deny all
>>>
>>> # if no other ACL applies, allow
>>> http_reply_access allow all
>>>
>>> This is it. I commented out all other ACL's for allow/deny we had in place for our custom rules. Still unable to browse local via hostname, IP works fine again.
>>>
>>> -----Original Message-----
>>> From: squid-users <squid-users-bounces at lists.squid-cache.org> On
>>> Behalf Of Amos Jeffries
>>> Sent: Saturday, September 7, 2024 10:51 AM
>>> To: squid-users at lists.squid-cache.org
>>> Subject: Re: [squid-users] Unable to access internal resources via
>>> hostname
>>>
>>> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>>>
>>>
>>> On 6/09/24 03:56, Piana, Josh wrote:
>>>> Hello Amos,
>>>>
>>>> While the comments did say that it was just the 10.46.11.0 range, I don't think there's any other ACL forcing that. I tried adding the the two internal sites that are being blocked by their IP, restarted Squid, and tested. Still being blocked. You are right though, both of those web addresses are on a different IP scheme. Ideally we want anything on 172.0.0.0 to be allowed, and 10.96.0.0. The other question I have is, even if we specify those sites IP as "allowed", shouldn't we be able to brwose to them by their hostname as well?
>>>
>>>
>>> That depends no your configuration policy. The default squid.conf only checks that clients are from the LAN and not doing any nasty protocol trick attacks.
>>>
>>>
>>>>
>>>> Currently, those internal sites ARE reachable. But only if we use IP. While this doesn't bother me, personally, the rest of our users would like to keep browsing via hostname as that's what they're used to and what many have shortcuts for.
>>>>
>>>
>>> Currently I see the ACL "local_dst_dom" is commented out (disabled).
>>>
>>> I guess you also have not listed the hostname or domain in the file loaded by "authless_dst" ACL.
>>>
>>>
>>>
>>>
>>>> In regards to the results of /etc/resolv.conf, see below:
>>>> search ad.arc-tech.com
>>>> nameserver 10.46.11.67
>>>>
>>>
>>> Okay. Then the "NDOT" default of 1 will be applied. So for these HTTP
>>> messages:
>>>
>>>       CONNECT hexp:443 HTTP/1.1
>>>       Host: hexp
>>>       ...
>>>
>>>
>>> Will be interpreted by Squid as URL:
>>>
>>>      https://hexp/
>>>
>>>
>>> The "dstdomain" ACL will try to match "hexp" exactly.
>>>
>>> The "dst" ACL will try to match IPs of "hexp.ad.arc-tech.com"
>>>
>>>
>>>
>>>> There must be a better way to just allow internal to internal traffic without needing to authenticate through the web proxy. The old config had it, but that was part of the issue. We have no idea how that was working, it didn't make sense at all and it was a bit outdated, Version 2.5 as opposed to our current 5.5.
>>>>
>>>> I'm happy to post out config again here, as it's changed a bit and I have cleaned it up.
>>>>
>>>> # squid.conf - Squid web cache configuration
>>>>
>>>> ####################################################################
>>>> #
>>>> #
>>>> ########
>>>> # General
>>>> ####################################################################
>>>> #
>>>> #
>>>> ########
>>>>
>>>> # 2020MAR23 running out with just 1024 as we switch to Hexcel.com
>>>> OMA max_filedesc 4096
>>>>
>>>
>>> Unrelated to your problem, but FYI this should probably be much larger (ie 64K minimum, up to 100x expected user count) for a production proxy.
>>>
>>>
>>>>
>>>> ####################################################################
>>>> #
>>>> #
>>>> ########
>>>> # Logging
>>>> ####################################################################
>>>> #
>>>> #
>>>> ########
>>>>
>>>> # this makes the logs readable to humans logformat custom %tl.%03tu
>>>> %>a %Ss/%03>Hs %<st %rm %ru %[un %Sh/%<a %mt access_log
>>>> daemon:/var/log/squid/access.log custom
>>>>
>>>> # this gives better error reporting
>>>> logformat custom %err_code/%err_detail access_log
>>>> daemon:/var/log/squid/access.log custom
>>>>
>>>
>>> This repeat of "custom" will cause issues.
>>>
>>> IIRC this was added misunderstanding of Alex instructions.
>>> What he meant was to **add** "%err_code/%err_detail" to your existing "custom" format.
>>>
>>> Like this:
>>>
>>> logformat custom %tl.%03tu %>a %Ss/%03>Hs %<st %rm %ru %[un \
>>>         %Sh/%<a %mt %err_code/%err_detail
>>>
>>>
>>>> # Red Hat-ish log names
>>>> cache_log /var/log/squid/cache.log
>>>> cache_access_log /var/log/squid/access.log
>>>
>>> This setting opens a third logger writing to access.log, causing more issues.
>>>
>>> Remove this "cache_access_log" line.
>>>
>>>
>>>>
>>>> # store_log is only useful for debugging cache_store_log none
>>>
>>>
>>> FYI, off by default on current Squid. You can probably erase this setting entirely now.
>>>
>>>
>>>> ####################################################################
>>>> #
>>>> #
>>>> ########
>>>> # Network - General/misc
>>>> ####################################################################
>>>> #
>>>> #
>>>> ########
>>>>
>>>> # our HTTP proxy port
>>>> http_port 10.46.11.69:8080
>>>> # loopback management
>>>> http_port 127.0.0.1:3128
>>>
>>>
>>> FWIW, you have denied access to "dst 127.0.0.0/8". So traffic to this port will be rejected.
>>>
>>>
>>>>
>>>> # disable ICP, port is typically 3130 icp_port 0
>>>
>>> FYI; disabled by default in modern Squid. You can remove "icp_port".
>>>
>>>>
>>>> # if set to "on", Squid will append your client's IP address in the
>>>> HTTP requests it forwards forwarded_for off
>>>
>>> "off" will send the text "unknown".
>>>
>>> It is better to use "transparent" (pass-thru unchanged) or "delete"
>>> (erase if existing).
>>>
>>>
>>>> ####################################################################
>>>> #
>>>> #
>>>> ########
>>>> # Authentication
>>>> ####################################################################
>>>> #
>>>> #
>>>> ########
>>>>
>>>> auth_param negotiate program
>>>> /usr/lib64/squid/negotiate_kerberos_auth
>>>> -k /etc/squid/HTTP.keytab -s
>>>> HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
>>>> auth_param negotiate children 10
>>>> auth_param negotiate keep_alive on
>>>> acl kerb-auth proxy_auth REQUIRED
>>>>
>>>> ####################################################################
>>>> # # ######## # Access control - shared/common ACL definitions
>>>> ####################################################################
>>>> #
>>>> #
>>>> ########
>>>>
>>>> #
>>>> --------------------------------------------------------------------
>>>> -
>>>> -
>>>> ------ # networks and hosts (by name or IP address)
>>>>
>>>> # acl all src all
>>>>
>>>> acl src_self src 127.0.0.0/8
>>>> acl src_self src 10.46.11.69
>>>>
>>>> acl dst_self dst 127.0.0.0/8
>>>> acl dst_self dst 10.46.11.69
>>>
>>>
>>> FYI, there are more IPs than just 127.0.0.0/8 which can be problematic as loopback sources.
>>>
>>> Replace "dst_self" with:
>>>
>>>      acl to_localhost dst 10.46.11.69
>>>
>>>
>>>>
>>>> acl from_arc src 10.46.0.0/15
>>>>
>>>> acl local_dst_addr dst 10.0.0.0/8
>>>> acl local_dst_addr dst 172.0.0.0/8
>>>>
>>>> #
>>>> --------------------------------------------------------------------
>>>> -
>>>> -
>>>> ------
>>>> # protocols (URL schemes)
>>>>
>>>> acl proto_FTP proto FTP
>>>> acl proto_HTTP proto HTTP
>>>>
>>>> #
>>>> --------------------------------------------------------------------
>>>> -
>>>> -
>>>> ------
>>>> # TCP port numbers
>>>>
>>>> # TCP ports for ordinary HTTP
>>>> acl http_ports port 80                # standard HTTP
>>>> acl http_ports port 81                # common alternative
>>>> acl http_ports port 8001      # epson.com support sub-site
>>>> acl http_ports port 8080      # common alternative
>>>
>>>
>>> Other ports that are common:
>>>
>>>      acl http_ports port 88 8000 8888 # ad-hoc services
>>>      acl http_ports port 1080  # SOCK frontend to HTTP service
>>>      acl http_ports port 21-22 # http:// frontend to FTP service
>>>      acl http_ports port 443   # https:// URLs
>>>
>>>
>>> Or really, **any** port can be valid now that Alt-Svc is widely used.
>>>
>>>>
>>>> # TCP ports for HTTP-over-SSL
>>>> acl Ssl_ports port 443
>>>> acl Ssl_ports port 9571               # lexmark.com
>>>>
>>>> # TCP ports for plain FTP command channel acl ftp_ports port 21
>>>>
>>>> # TCP ports for SSH/SFTP (secure shell) acl ssh_ports port 22
>>>
>>> FTR, "ssh_ports" is unused. SSH and SFTP can only use Squid via CONNECT tunnel anyway. So you should list this port as part of "Ssl_ports".
>>>
>>>>
>>>> #
>>>> --------------------------------------------------------------------
>>>> -
>>>> -
>>>> ------
>>>> # HTTP methods (and pseudo-methods)
>>>>
>>>> acl method_CONNECT method CONNECT
>>>
>>> FYI: we have a built-in for modern Squid:
>>>
>>>       acl CONNECT method CONNECT
>>>
>>> You can replace all "method_CONNECT" with just "CONNECT".
>>>
>>>
>>>>
>>>> # list of standard HTTP methods
>>>> acl methods_std method GET HEAD POST PUT DELETE acl methods_std
>>>> method TRACE OPTIONS
>>>>
>>>
>>> Consider removing these ACLs and the extra complexity they create.
>>> Modern HTTP considers many other method names "standard" and current Squid follows the standard-required handling for all of them, and special ones.
>>>
>>>
>>>> ####################################################################
>>>> #
>>>> #
>>>> #######
>>>> # Access control - general proxy
>>>> ####################################################################
>>>> #
>>>> #
>>>> ########
>>>>
>>>> # This major section is about which HTTP proxy clients can use Squid
>>>> # as an HTTP proxy server.  As opposed to the maintenance/admin-type
>>>> # stuff in the previous section.
>>>>
>>>> #
>>>> --------------------------------------------------------------------
>>>> -
>>>> -
>>>> ------
>>>> # basic deny rules
>>>> # these block stuff that's never good # we put most denies after
>>>> user-auth so we know *who* is trying
>>>>
>>>
>>> Missing basic security to prevent DoS and protocol hijacking attacks:
>>>
>>>
>>>      http_access deny !Safe_ports
>>>      http_access deny CONNECT !Ssl_ports
>>>
>>>
>>> You can define Safe_ports like this:
>>>
>>>       acl Safe_Ports any-of http_ports Ssl_ports ftp_ports
>>>
>>>
>>>
>>>> # block attempts to connect to proxy server via proxy http_access
>>>> deny dst_self
>>>>
>>>
>>> Use:
>>>       http_access deny to_localhost
>>>
>>>
>>>
>>>> # block clients which are the proxy server machine itself
>>>> http_access deny src_self
>>>>
>>>
>>> FYI, there should be nothing wrong with other software running on the proxy machine (eg software updaters) using Squid. They have to obey the same rules an any other client.
>>>
>>>
>>>> # deny anything not from the LAN
>>>> http_access deny !from_arc
>>>
>>> FYI, we use "localnet" ACL to define the LAN. Makes it a bit easier for others to assist if you use the same. Up to you though.
>>>
>>>
>>>>
>>>> #
>>>> --------------------------------------------------------------------
>>>> -
>>>> -
>>>> ------
>>>> # allow without authentication
>>>> # these rules allow certain connects without user authentication #
>>>> these allow any protocol/method/etc
>>>>
>>>> #                 ***** IMPORTANT *****
>>>> # Adding to these lists also exempts from all content filtering.
>>>> # In particular, executables will be allowed to download!
>>>> #                 ***** IMPORTANT *****
>>>>
>>>> # allow connects to local destinations without authentication # by
>>>> domain name from URL # acl local_dst_dom dstdomain ad.arc-tech.com
>>>> # http_access       allow local_dst_dom
>>>> # http_reply_access allow local_dst_dom
>>>
>>>
>>> You have a domain name whitelist ACL two sections below.
>>> You can remove the above, and list and use the later one for both
>>> "local" and other domains.
>>>
>>>
>>>>
>>>> # by IP address name resolves to
>>>> http_access       allow local_dst_addr
>>>> # http_reply_access allow local_dst_addr
>>>>
>>>
>>> Maybe rename "local_dst_addr" to "whitelist_dst_ips" for clarity on
>>> what it is doing.
>>>
>>>
>>> Which brings up a security issue: When you list the entire LAN range
>>> in this ACL, anyone accessing the proxy is allowed to do whatever
>>> they want to your LAN machines. That includes all LAN **and** WAN connections.
>>>
>>> Additionally, the bypass of authentication leaves you no trace that
>>> this was actually a user, and not some infected LAN machine spreading
>>> malware across your LAN. Which is rather risky.
>>>
>>>
>>> Prefer to keep by-IP whitelist's empty or minimal content.
>>>
>>>
>>>
>>>> # allow trusted hosts without authentication # these are just ip's
>>>> on the 10.46.11.x network acl authless_src src "/etc/squid/authless_src"
>>>> http_access       allow authless_src
>>>> # http_reply_access allow authless_src
>>>>
>>>> # allow the following destinations without authentication # list of
>>>> random approved websites # whats the advantage of not authenticating?
>>>> acl authless_dst dstdomain "/etc/squid/authless_dst"
>>>> http_access       allow authless_dst
>>>> # http_reply_access allow authless_dst
>>>>
>>>
>>> This should be combined with "local_dst_dom". Just use different
>>> lines like so:
>>>
>>>      acl authless_dst dstdomain "/etc/squid/authless_dst"
>>>      acl authless_dst dstdomain .ad.arc-tech.com
>>>      acl authless_dst dstdomain .hexcelssp.com hexcelssp
>>>
>>>      http_access allow whitelist
>>>
>>>
>>>> #
>>>> --------------------------------------------------------------------
>>>> --------
>>>> # block before authentication
>>>> # these rules block certain connects without user authentication #
>>>> done for software which handles proxy auth requests badly # for
>>>> example, popping up many auth prompts # this does mean we cannot
>>>> whitelist for users
>>>>
>>>> # blocked destinations, by host or domain, before authentication #
>>>> websites that are auto-deny acl bad_domains_preauth dstdomain
>>>> "/etc/squid/bad_domains_preauth"
>>>> http_access deny bad_domains_preauth
>>>>
>>>> #
>>>> --------------------------------------------------------------------
>>>> --------
>>>> # require proxy authentication
>>>>
>>>> #
>>>> ********************************************************************
>>>> # * anything past this point requires users to authenticate to proxy
>>>> * #
>>>> ********************************************************************
>>>>
>>>> # Uncomment these lines to disable authentication requirement for
>>>> all # but a few test boxes.  Useful if NTLM gets broken.
>>>> # acl from_test_boxes src 10.2.1.5
>>>> # http_access allow !from_test_boxes from_arc
>>>>
>>>
>>> FYI, you have "deny !from_arc" earlier above.
>>>
>>> This is simpler and does the same thing as the above line:
>>>
>>>       # http_access allow !from_test_boxes
>>>
>>>
>>>> # block clients which are not authenticated # http_access deny
>>>> !authenticated
>>>>
>>>
>>> You named the ACL "kerb-auth", not "authenticated".
>>>
>>>
>>>> # block certain user IDs from using proxy server # list of ad users
>>>> and service accounts to automatically deny proxy acl block_user
>>>> proxy_auth_regex -i "/etc/squid/block_user"
>>>> http_access deny block_user
>>>
>>>
>>> I suggest this to prevent re-login loop for these forbidden services:
>>>
>>>      http_access deny !kerb-auth
>>>      http_access deny block_user all
>>>
>>>
>>>>
>>>> #
>>>> --------------------------------------------------------------------
>>>> --------
>>>> # general whitelist
>>>>
>>>> # whitelist for locations/sites (override blocking) # allows complex
>>>> URLs # some bad_urls patterns are generic # they block suspicous
>>>> URLs or generally unwanted sites # this whitelist can make specific
>>>> exceptions within those acl bad_exception_urls url_regex -i
>>>> "/etc/squid/bad_exception_urls"
>>>>
>>>> #
>>>> --------------------------------------------------------------------
>>>> --------
>>>> # executable blocking
>>>>
>>>> # we do this separately from other content blocking # in order to
>>>> allow ITLIB to still download # doing it with other blocking causes
>>>> a flood of browser auth req's # for users visting sites with video
>>>>
>>>> # file extensions to block
>>>> # don't try to block .COM files here # it will get confused with
>>>> .com domain and block too many things acl exec_files url_regex -i
>>>> "/etc/squid/exec_files"
>>>
>>> Consider using the "urlpath_regex" ACL type instead. It does not
>>> match against the scheme://domain:port part of URLs.
>>>
>>>
>>>>
>>>> # usernames not to block
>>>> acl exec_users proxy_auth_regex -i "/etc/squid/exec_users"
>>>>
>>>> # activate
>>>> http_access deny !bad_exception_urls !exec_users exec_files
>>>> deny_info ERR_BLOCK_TYPE exec_files
>>>>
>>>> #
>>>> --------------------------------------------------------------------
>>>> --------
>>>> # selective whitelists
>>>>
>>>> # these override the general blacklists by explictly allowing things
>>>> # some multimedia services (I.E. YouTube) are permitted for certain
>>>> users # exempts them from content blocking in this section
>>>>
>>>> # list of users for this
>>>> acl mmedia_users proxy_auth_regex -i "/etc/squid/mmedia_users"
>>>>
>>>> # list of sites for this
>>>> acl mmedia_sites dstdomain "/etc/squid/mmedia_sites"
>>>>
>>>> # if a mmedia user attempts to access a mmedia site via appropriate
>>>> protocols, allow it # done for both HTTP/TCP/80 and HTTP/SSL/443 #
>>>> done for both HTTP request as well as HTTP reply/response #
>>>> otherwise the later bad_types Content-Type multimedia blocking rule
>>>> kicks in
>>>>
>>>> http_access       allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
>>>> # tp_reply_access allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
>>>>
>>>> http_access       allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users
>>>> # http_reply_access allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users
>>>
>>>
>>> FYI, Websites like YouTube can dynamically negotiate the media source
>>> ports to be non-standard values using Alt-Svc headers.
>>>
>>> If you had the default security settings at the top of your
>>> http_access
>>> rules:
>>>
>>>      http_access deny !Safe_ports
>>>      http_access deny CONNECT !SSL_Ports
>>>
>>> ... you would not need to make (bad) assumptions about the protocols
>>> and ports used by media sites here.
>>>
>>> Also, "mmedia_users" being last on the line risks a 407 re-auth
>>> challenge occuring. Best place it earlier.
>>>
>>>
>>> Leaving these rules as:
>>>
>>>        http_access allow mmedia_users mmedia_sites
>>>
>>>
>>>>
>>>> #
>>>> --------------------------------------------------------------------
>>>> --------
>>>> # general blacklists
>>>> # porn, wastes of bandwidth, etc.
>>>>
>>>>
>>>> # blocked destinations, by host or domain # sites we don't want
>>>> people using acl bad_domains dstdomain "/etc/squid/bad_domains"
>>>> http_access deny !bad_exception_urls bad_domains
>>>> deny_info ERR_BLOCK_DST       bad_domains
>>>>
>>>> # blocked destinations, by host or domain, regex pattern acl
>>>> bad_domains_regex dstdom_regex -i "/etc/squid/bad_domains_regex"
>>>> http_access deny !bad_exception_urls bad_domains_regex
>>>> deny_info ERR_BLOCK_DST       bad_domains_regex
>>>>
>>>> # blocked destinations, by complex URL # typical use: block just
>>>> part of a site, by URL path # example use: block just the advertsing
>>>> section of a site acl bad_urls url_regex -i "/etc/squid/bad_urls"
>>>> http_access deny !bad_exception_urls bad_urls
>>>> deny_info ERR_BLOCK_DST       bad_urls
>>>>
>>>> # blocked content types, by apparent file name acl bad_files
>>>> urlpath_regex -i "/etc/squid/bad_files"
>>>> http_access deny !bad_exception_urls bad_files deny_info
>>>> ERR_BLOCK_TYPE bad_files
>>>>
>>>> # blocked content types, by MIME content type, in response acl
>>>> bad_types rep_mime_type -i "/etc/squid/bad_types"
>>>> # http_reply_access deny bad_types !bad_exception_urls deny_info
>>>> ERR_BLOCK_TYPE bad_types
>>>
>>>
>>> FYI, in order for the deny_info action to be taken the ACL it is
>>> attached to must be the final one on a line.
>>>
>>> Previous config was fine, but this "bad_types" use will not work. You
>>> need to re-order the access checks like this:
>>>
>>>
>>>      # http_reply_access deny !bad_exception_urls bad_types
>>>
>>>
>>>>
>>>
>>> This part from here ...
>>>
>>>> #
>>>> --------------------------------------------------------------------
>>>> -------- # standard web (HTTP PUT/GET/etc) access
>>>>
>>>> # We basically allow any auth'ed user to connect via HTTP to
>>>> anywhere, # so long as it uses a standard port, and is not a direct
>>>> CONNECT # attempt, or blocked, or any of the other stuff above.
>>>>
>>>> http_access allow http_ports proto_HTTP methods_std
>>>>
>>>> #
>>>> --------------------------------------------------------------------
>>>> -------- # direct CONNECT for HTTP-over-SSL (HTTPS)
>>>>
>>>> http_access allow method_CONNECT ssl_ports
>>>>
>>>> #
>>>> --------------------------------------------------------------------
>>>> --------
>>>> # deny any other CONNECT attempts
>>>>
>>>> http_access deny method_CONNECT
>>>>
>>>> #
>>>> --------------------------------------------------------------------
>>>> --------
>>>> # FTP via HTTP proxy
>>>>
>>>> http_access allow ftp_ports proto_FTP
>>>>
>>>
>>> ... to here.
>>>
>>> Is better handled by the default squid.conf:
>>>
>>>      http_access deny !Safe_ports
>>>      http_access deny CONNECT !Ssl_ports
>>>
>>> Placed at the top of your http_access lines.
>>>
>>>
>>>> #
>>>> --------------------------------------------------------------------
>>>> --------
>>>> # catch-all defaults
>>>> http_access allow kerb-auth
>>>>
>>>> # deny any request we missed in the above http_access deny all
>>>>
>>>> # If we allowed the request, allow the reply (HTTP response) as well.
>>>> # Rules above many allow or deny specific reply before now.
>>>> # If nothing more specific matched, we allow.
>>>> # This should be OK since we filter mainly on requests.
>>>> # http_reply_access allow all
>>>>
>>>
>>> FWIW, it is hard to tell what the exact last reply action could have
>>> been. So I would un-comment this allow line to be certain it is what
>>> happens.
>>>
>>>
>>>> ####################################################################
>>>> ##########
>>>> # END OF FILE
>>>> ####################################################################
>>>> ##########
>>>>
>>>
>>> HTH
>>> Amos
>>>
>>> _______________________________________________
>>> squid-users mailing list
>>> squid-users at lists.squid-cache.org
>>> https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Flis
>>> ts.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7CJosh.Piana
>>> %40hexcel.com%7C2812fc617d20433c65bf08dcd675e496%7C4248050df19546d5ac
>>> 9c0c7c52b04cae%7C0%7C0%7C638621049069321273%7CUnknown%7CTWFpbGZsb3d8e
>>> yJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0
>>> %7C%7C%7C&sdata=%2BFxdqzJPExvZ4cC6y97i0UUFCPoIQia8K10kj%2F%2FO5rE%3D&
>>> reserved=0 _______________________________________________
>>> squid-users mailing list
>>> squid-users at lists.squid-cache.org
>>> https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Flis
>>> ts.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7CJosh.Piana
>>> %40hexcel.com%7C2812fc617d20433c65bf08dcd675e496%7C4248050df19546d5ac
>>> 9c0c7c52b04cae%7C0%7C0%7C638621049069321273%7CUnknown%7CTWFpbGZsb3d8e
>>> yJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0
>>> %7C%7C%7C&sdata=%2BFxdqzJPExvZ4cC6y97i0UUFCPoIQia8K10kj%2F%2FO5rE%3D&
>>> reserved=0
>>
>> _______________________________________________
>> squid-users mailing list
>> squid-users at lists.squid-cache.org
>> https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Flist
>> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7CJosh.Piana%4
>> 0hexcel.com%7C2812fc617d20433c65bf08dcd675e496%7C4248050df19546d5ac9c0
>> c7c52b04cae%7C0%7C0%7C638621049069321273%7CUnknown%7CTWFpbGZsb3d8eyJWI
>> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7
>> C%7C&sdata=%2BFxdqzJPExvZ4cC6y97i0UUFCPoIQia8K10kj%2F%2FO5rE%3D&reserv
>> ed=0
> 
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users



From rousskov at measurement-factory.com  Tue Sep 17 03:54:52 2024
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Mon, 16 Sep 2024 23:54:52 -0400
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <3e263117c0b7410da754d42f55671fea@hexcel.com>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <Zs84drvoIpZ1f6DR@fantomas.sk> <58bdfaada3fa46d0938b7346ec04c336@hexcel.com>
 <947309fa-d1fc-4a75-ac49-ea7bc5c5ff12@measurement-factory.com>
 <faffca37-fa59-46ff-80e4-245c37fa90b9@measurement-factory.com>
 <c00942c1c8ab46b5b393d70f32346798@hexcel.com>
 <59274673-47e9-431d-ad45-7fa3a5a8ebca@measurement-factory.com>
 <d063bef52efd4e32a9f9bb27f934e673@hexcel.com>
 <e35fb7b1-12ce-41b8-83c1-51a208739127@measurement-factory.com>
 <f7ca72b579474cc184e22dfd6ef55683@hexcel.com>
 <4537b23c7a534cd3a716ffd4f8471f5e@hexcel.com>
 <c4ae0610-b8b2-4a26-bed9-8cd1bf2b6901@treenet.co.nz>
 <d3ef9e5efbad41c39c74dcdb10f8f91a@hexcel.com>
 <20d65da8-8e6e-47f6-9250-04ad8f26ff5a@treenet.co.nz>
 <8faab648625547fc88a069512da16c4f@hexcel.com>
 <28fdeaae-9900-4289-8a3b-0db26773b9a4@measurement-factory.com>
 <3e263117c0b7410da754d42f55671fea@hexcel.com>
Message-ID: <a4ce7439-087b-46c5-8769-fc491094fe34@measurement-factory.com>

On 2024-09-16 14:06, Piana, Josh wrote:

>> http_access deny !localnet

> This denies HTTP traffic to what I defined as "localnet". ... Because
> this argument is near the bottom of my config, won't all other ACL's
> and lists apply before getting to this deny all rule?

Others have already guided you further, but I will try to correct the 
above misunderstanding:

* The order of http_access directives matters: Squid evaluates 
http_access rules in their squid.conf order and applies the first 
http_access rule that has a matching condition. All subsequent 
http_access rules are ignored (for that transaction). Here, "to apply" 
means to allow or deny the transaction (depending on the matching rule 
action) and "matching condition" means that all ACLs named in that 
http_access rule have matched the transaction.

* The order of acl directives only matters in special cases for ACLs 
with side effects. For now, you can probably ignore that order.

* For a given ACL name "foo", it is usually best to keep all "acl foo" 
directives together and above the first http_access (or any other 
ACL-using directive) line that uses ACL named "foo".


> I thought every statement needs a contradicting statement as well.

No, it does not: N+1 http_access rule is only evaluated if the 
first/earlier N http_access rules did _not_ match (see the first bullet 
above), so you effectively get that "contradicting" or "else" effect 
automatically as Squid moves through http_access rules...

Said that, it is often a good idea to use "http_access deny all" as the 
very last explicit http_access rule to avoid relying on an ever-changing 
default/implicit action that is applied when none of the explicit rules 
matched. That implicit default is "ever-changing" because it depends on 
the last explicit http_access rule action (which, naturally, may change 
as folks update their rules).


FWIW, the following FAQ entry covers the same concepts:
https://wiki.squid-cache.org/SquidFaq/SquidAcl


HTH,

Alex.


> -----Original Message-----
> From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of Alex Rousskov
> Sent: Monday, September 16, 2024 10:42 AM
> To: squid-users at lists.squid-cache.org
> Subject: Re: [squid-users] Unable to access internal resources via hostname
> 
> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
> 
> 
> On 2024-09-16 09:58, Piana, Josh wrote:
> 
>> I removed all of the special, custom ACL's and we still don't have internal to internal browsing via hostname.
> 
> FWIW, these first two http_access rules make all subsequent http_access rules irrelevant/unused because these two rules match all traffic:
> 
>> http_access deny !localnet
>> http_access allow localnet
> 
> I did not look further, but the above combination is a sign that you interpret http_access rules differently than Squid does. Please make sure you understand why the two rules above make all subsequent http_access rules irrelevant/unused before adjusting your configuration further. Ask questions as needed.
> 
> 
> If the primary problem persists after addressing this configuration problem, then my earlier (2024-09-04) recommendation stands: Please restate the primary problem (e.g., detail what "don't have browsing"
> means in terms of the test transaction outcome) and share debugging log of that test transaction again.
> 
> 
> HTH,
> 
> Alex.
> 
> 
>> So there's something wrong with either the order of the squid.conf or I'm missing some "allow" variable.
>>
>> Please see below for my current config:
>>
>> ######################################################################
>> ########
>> # Authentication
>> ######################################################################
>> ########
>>
>> auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth
>> -k /etc/squid/HTTP.keytab -s
>> HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
>> auth_param negotiate children 10
>> auth_param negotiate keep_alive on
>> acl kerb-auth proxy_auth REQUIRED
>>
>> ######################################################################
>> ######## # Access control - shared/common ACL definitions
>> ######################################################################
>> ######## #
>> ----------------------------------------------------------------------
>> ------ # networks and hosts (by name or IP address)
>>
>> acl src_self src 127.0.0.0/8
>> acl src_self src 10.46.11.69
>>
>> acl to_localhost dst 10.46.11.69
>>
>> acl localnet src 10.0.0.0/8
>> acl localnet src 172.0.0.0/8
>>
>> acl local_dst_addr dst 10.0.0.0/8
>> acl local_dst_addr dst 172.0.0.0/8
>>
>> #
>> ----------------------------------------------------------------------
>> ------
>> # protocols (URL schemes)
>>
>> acl proto_FTP proto FTP
>> acl proto_HTTP proto HTTP
>>
>> #
>> ----------------------------------------------------------------------
>> ------
>> # TCP port numbers
>>
>> # TCP ports for ordinary HTTP
>> acl http_ports port 80                     # standard HTTP
>> acl http_ports port 81                     # common alternative
>> acl http_ports port 8001                   # epson.com support sub-site
>> acl http_ports port 8080                   # common alternative
>> acl http_ports port 88 8000 8888   # ad-hoc services
>> acl http_ports port 1080                   # SOCK frontend to HTTP service
>> acl http_ports port 21-22                  # http:// frontend to FTP service
>> acl http_ports port 443                    # https:// URLs
>>
>> # TCP ports for HTTP-over-SSL
>> acl Ssl_ports port 443           # standard HTTPS
>> acl Ssl_ports port 9571         # lexmark.com
>> acl Ssl_ports port 22             # SSH
>>
>> # TCP ports for plain FTP command channel acl ftp_ports port 21
>>
>> #
>> ----------------------------------------------------------------------
>> ------
>> # HTTP methods (and pseudo-methods)
>>
>> acl CONNECT method CONNECT
>>
>> ######################################################################
>> ########
>> # Access control - general proxy
>> ######################################################################
>> ########
>>
>> # define and allow new ACL for "Safe_ports"
>> acl Safe_Ports any-of http_ports Ssl_ports ftp_ports
>>
>> #
>> ----------------------------------------------------------------------
>> ------
>> # basic deny rules
>>
>> # deny anything not from the LAN
>> http_access deny !localnet
>>
>> # allow localnet users
>> http_access allow localnet
>>
>> # blocks self to self connections
>> http_access deny to_localhost
>>
>> # deny unauthorized access and DoS attacks http_access deny
>> !Safe_ports http_access deny CONNECT !Ssl_ports
>>
>> # allow authenticated clients after all other ACL's http_access allow
>> kerb-auth
>>
>> # deny any request we missed in the above http_access deny all
>>
>> # if no other ACL applies, allow
>> http_reply_access allow all
>>
>> This is it. I commented out all other ACL's for allow/deny we had in place for our custom rules. Still unable to browse local via hostname, IP works fine again.
>>
>> -----Original Message-----
>> From: squid-users <squid-users-bounces at lists.squid-cache.org> On
>> Behalf Of Amos Jeffries
>> Sent: Saturday, September 7, 2024 10:51 AM
>> To: squid-users at lists.squid-cache.org
>> Subject: Re: [squid-users] Unable to access internal resources via
>> hostname
>>
>> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>>
>>
>> On 6/09/24 03:56, Piana, Josh wrote:
>>> Hello Amos,
>>>
>>> While the comments did say that it was just the 10.46.11.0 range, I don't think there's any other ACL forcing that. I tried adding the the two internal sites that are being blocked by their IP, restarted Squid, and tested. Still being blocked. You are right though, both of those web addresses are on a different IP scheme. Ideally we want anything on 172.0.0.0 to be allowed, and 10.96.0.0. The other question I have is, even if we specify those sites IP as "allowed", shouldn't we be able to brwose to them by their hostname as well?
>>
>>
>> That depends no your configuration policy. The default squid.conf only checks that clients are from the LAN and not doing any nasty protocol trick attacks.
>>
>>
>>>
>>> Currently, those internal sites ARE reachable. But only if we use IP. While this doesn't bother me, personally, the rest of our users would like to keep browsing via hostname as that's what they're used to and what many have shortcuts for.
>>>
>>
>> Currently I see the ACL "local_dst_dom" is commented out (disabled).
>>
>> I guess you also have not listed the hostname or domain in the file loaded by "authless_dst" ACL.
>>
>>
>>
>>
>>> In regards to the results of /etc/resolv.conf, see below:
>>> search ad.arc-tech.com
>>> nameserver 10.46.11.67
>>>
>>
>> Okay. Then the "NDOT" default of 1 will be applied. So for these HTTP
>> messages:
>>
>>      CONNECT hexp:443 HTTP/1.1
>>      Host: hexp
>>      ...
>>
>>
>> Will be interpreted by Squid as URL:
>>
>>     https://hexp/
>>
>>
>> The "dstdomain" ACL will try to match "hexp" exactly.
>>
>> The "dst" ACL will try to match IPs of "hexp.ad.arc-tech.com"
>>
>>
>>
>>> There must be a better way to just allow internal to internal traffic without needing to authenticate through the web proxy. The old config had it, but that was part of the issue. We have no idea how that was working, it didn't make sense at all and it was a bit outdated, Version 2.5 as opposed to our current 5.5.
>>>
>>> I'm happy to post out config again here, as it's changed a bit and I have cleaned it up.
>>>
>>> # squid.conf - Squid web cache configuration
>>>
>>> #####################################################################
>>> #
>>> ########
>>> # General
>>> #####################################################################
>>> #
>>> ########
>>>
>>> # 2020MAR23 running out with just 1024 as we switch to Hexcel.com OMA
>>> max_filedesc 4096
>>>
>>
>> Unrelated to your problem, but FYI this should probably be much larger (ie 64K minimum, up to 100x expected user count) for a production proxy.
>>
>>
>>>
>>> #####################################################################
>>> #
>>> ########
>>> # Logging
>>> #####################################################################
>>> #
>>> ########
>>>
>>> # this makes the logs readable to humans logformat custom %tl.%03tu
>>> %>a %Ss/%03>Hs %<st %rm %ru %[un %Sh/%<a %mt access_log
>>> daemon:/var/log/squid/access.log custom
>>>
>>> # this gives better error reporting
>>> logformat custom %err_code/%err_detail access_log
>>> daemon:/var/log/squid/access.log custom
>>>
>>
>> This repeat of "custom" will cause issues.
>>
>> IIRC this was added misunderstanding of Alex instructions.
>> What he meant was to **add** "%err_code/%err_detail" to your existing "custom" format.
>>
>> Like this:
>>
>> logformat custom %tl.%03tu %>a %Ss/%03>Hs %<st %rm %ru %[un \
>>        %Sh/%<a %mt %err_code/%err_detail
>>
>>
>>> # Red Hat-ish log names
>>> cache_log /var/log/squid/cache.log
>>> cache_access_log /var/log/squid/access.log
>>
>> This setting opens a third logger writing to access.log, causing more issues.
>>
>> Remove this "cache_access_log" line.
>>
>>
>>>
>>> # store_log is only useful for debugging cache_store_log none
>>
>>
>> FYI, off by default on current Squid. You can probably erase this setting entirely now.
>>
>>
>>> #####################################################################
>>> #
>>> ########
>>> # Network - General/misc
>>> #####################################################################
>>> #
>>> ########
>>>
>>> # our HTTP proxy port
>>> http_port 10.46.11.69:8080
>>> # loopback management
>>> http_port 127.0.0.1:3128
>>
>>
>> FWIW, you have denied access to "dst 127.0.0.0/8". So traffic to this port will be rejected.
>>
>>
>>>
>>> # disable ICP, port is typically 3130 icp_port 0
>>
>> FYI; disabled by default in modern Squid. You can remove "icp_port".
>>
>>>
>>> # if set to "on", Squid will append your client's IP address in the
>>> HTTP requests it forwards forwarded_for off
>>
>> "off" will send the text "unknown".
>>
>> It is better to use "transparent" (pass-thru unchanged) or "delete"
>> (erase if existing).
>>
>>
>>> #####################################################################
>>> #
>>> ########
>>> # Authentication
>>> #####################################################################
>>> #
>>> ########
>>>
>>> auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth
>>> -k /etc/squid/HTTP.keytab -s
>>> HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
>>> auth_param negotiate children 10
>>> auth_param negotiate keep_alive on
>>> acl kerb-auth proxy_auth REQUIRED
>>>
>>> #####################################################################
>>> # ######## # Access control - shared/common ACL definitions
>>> #####################################################################
>>> #
>>> ########
>>>
>>> #
>>> ---------------------------------------------------------------------
>>> -
>>> ------ # networks and hosts (by name or IP address)
>>>
>>> # acl all src all
>>>
>>> acl src_self src 127.0.0.0/8
>>> acl src_self src 10.46.11.69
>>>
>>> acl dst_self dst 127.0.0.0/8
>>> acl dst_self dst 10.46.11.69
>>
>>
>> FYI, there are more IPs than just 127.0.0.0/8 which can be problematic as loopback sources.
>>
>> Replace "dst_self" with:
>>
>>     acl to_localhost dst 10.46.11.69
>>
>>
>>>
>>> acl from_arc src 10.46.0.0/15
>>>
>>> acl local_dst_addr dst 10.0.0.0/8
>>> acl local_dst_addr dst 172.0.0.0/8
>>>
>>> #
>>> ---------------------------------------------------------------------
>>> -
>>> ------
>>> # protocols (URL schemes)
>>>
>>> acl proto_FTP proto FTP
>>> acl proto_HTTP proto HTTP
>>>
>>> #
>>> ---------------------------------------------------------------------
>>> -
>>> ------
>>> # TCP port numbers
>>>
>>> # TCP ports for ordinary HTTP
>>> acl http_ports port 80                # standard HTTP
>>> acl http_ports port 81                # common alternative
>>> acl http_ports port 8001      # epson.com support sub-site
>>> acl http_ports port 8080      # common alternative
>>
>>
>> Other ports that are common:
>>
>>     acl http_ports port 88 8000 8888 # ad-hoc services
>>     acl http_ports port 1080  # SOCK frontend to HTTP service
>>     acl http_ports port 21-22 # http:// frontend to FTP service
>>     acl http_ports port 443   # https:// URLs
>>
>>
>> Or really, **any** port can be valid now that Alt-Svc is widely used.
>>
>>>
>>> # TCP ports for HTTP-over-SSL
>>> acl Ssl_ports port 443
>>> acl Ssl_ports port 9571               # lexmark.com
>>>
>>> # TCP ports for plain FTP command channel acl ftp_ports port 21
>>>
>>> # TCP ports for SSH/SFTP (secure shell) acl ssh_ports port 22
>>
>> FTR, "ssh_ports" is unused. SSH and SFTP can only use Squid via CONNECT tunnel anyway. So you should list this port as part of "Ssl_ports".
>>
>>>
>>> #
>>> ---------------------------------------------------------------------
>>> -
>>> ------
>>> # HTTP methods (and pseudo-methods)
>>>
>>> acl method_CONNECT method CONNECT
>>
>> FYI: we have a built-in for modern Squid:
>>
>>      acl CONNECT method CONNECT
>>
>> You can replace all "method_CONNECT" with just "CONNECT".
>>
>>
>>>
>>> # list of standard HTTP methods
>>> acl methods_std method GET HEAD POST PUT DELETE acl methods_std
>>> method TRACE OPTIONS
>>>
>>
>> Consider removing these ACLs and the extra complexity they create.
>> Modern HTTP considers many other method names "standard" and current Squid follows the standard-required handling for all of them, and special ones.
>>
>>
>>> #####################################################################
>>> #
>>> #######
>>> # Access control - general proxy
>>> #####################################################################
>>> #
>>> ########
>>>
>>> # This major section is about which HTTP proxy clients can use Squid
>>> # as an HTTP proxy server.  As opposed to the maintenance/admin-type
>>> # stuff in the previous section.
>>>
>>> #
>>> ---------------------------------------------------------------------
>>> -
>>> ------
>>> # basic deny rules
>>> # these block stuff that's never good # we put most denies after
>>> user-auth so we know *who* is trying
>>>
>>
>> Missing basic security to prevent DoS and protocol hijacking attacks:
>>
>>
>>     http_access deny !Safe_ports
>>     http_access deny CONNECT !Ssl_ports
>>
>>
>> You can define Safe_ports like this:
>>
>>      acl Safe_Ports any-of http_ports Ssl_ports ftp_ports
>>
>>
>>
>>> # block attempts to connect to proxy server via proxy http_access
>>> deny dst_self
>>>
>>
>> Use:
>>      http_access deny to_localhost
>>
>>
>>
>>> # block clients which are the proxy server machine itself http_access
>>> deny src_self
>>>
>>
>> FYI, there should be nothing wrong with other software running on the proxy machine (eg software updaters) using Squid. They have to obey the same rules an any other client.
>>
>>
>>> # deny anything not from the LAN
>>> http_access deny !from_arc
>>
>> FYI, we use "localnet" ACL to define the LAN. Makes it a bit easier for others to assist if you use the same. Up to you though.
>>
>>
>>>
>>> #
>>> ---------------------------------------------------------------------
>>> -
>>> ------
>>> # allow without authentication
>>> # these rules allow certain connects without user authentication #
>>> these allow any protocol/method/etc
>>>
>>> #                 ***** IMPORTANT *****
>>> # Adding to these lists also exempts from all content filtering.
>>> # In particular, executables will be allowed to download!
>>> #                 ***** IMPORTANT *****
>>>
>>> # allow connects to local destinations without authentication # by
>>> domain name from URL # acl local_dst_dom dstdomain ad.arc-tech.com
>>> # http_access       allow local_dst_dom
>>> # http_reply_access allow local_dst_dom
>>
>>
>> You have a domain name whitelist ACL two sections below.
>> You can remove the above, and list and use the later one for both
>> "local" and other domains.
>>
>>
>>>
>>> # by IP address name resolves to
>>> http_access       allow local_dst_addr
>>> # http_reply_access allow local_dst_addr
>>>
>>
>> Maybe rename "local_dst_addr" to "whitelist_dst_ips" for clarity on
>> what it is doing.
>>
>>
>> Which brings up a security issue: When you list the entire LAN range
>> in this ACL, anyone accessing the proxy is allowed to do whatever they
>> want to your LAN machines. That includes all LAN **and** WAN connections.
>>
>> Additionally, the bypass of authentication leaves you no trace that
>> this was actually a user, and not some infected LAN machine spreading
>> malware across your LAN. Which is rather risky.
>>
>>
>> Prefer to keep by-IP whitelist's empty or minimal content.
>>
>>
>>
>>> # allow trusted hosts without authentication # these are just ip's on
>>> the 10.46.11.x network acl authless_src src "/etc/squid/authless_src"
>>> http_access       allow authless_src
>>> # http_reply_access allow authless_src
>>>
>>> # allow the following destinations without authentication # list of
>>> random approved websites # whats the advantage of not authenticating?
>>> acl authless_dst dstdomain "/etc/squid/authless_dst"
>>> http_access       allow authless_dst
>>> # http_reply_access allow authless_dst
>>>
>>
>> This should be combined with "local_dst_dom". Just use different lines
>> like so:
>>
>>     acl authless_dst dstdomain "/etc/squid/authless_dst"
>>     acl authless_dst dstdomain .ad.arc-tech.com
>>     acl authless_dst dstdomain .hexcelssp.com hexcelssp
>>
>>     http_access allow whitelist
>>
>>
>>> # ----------------------------------------------------------------------------
>>> # block before authentication
>>> # these rules block certain connects without user authentication
>>> # done for software which handles proxy auth requests badly
>>> # for example, popping up many auth prompts
>>> # this does mean we cannot whitelist for users
>>>
>>> # blocked destinations, by host or domain, before authentication
>>> # websites that are auto-deny
>>> acl bad_domains_preauth dstdomain "/etc/squid/bad_domains_preauth"
>>> http_access deny bad_domains_preauth
>>>
>>> # ----------------------------------------------------------------------------
>>> # require proxy authentication
>>>
>>> # ********************************************************************
>>> # * anything past this point requires users to authenticate to proxy *
>>> # ********************************************************************
>>>
>>> # Uncomment these lines to disable authentication requirement for all
>>> # but a few test boxes.  Useful if NTLM gets broken.
>>> # acl from_test_boxes src 10.2.1.5
>>> # http_access allow !from_test_boxes from_arc
>>>
>>
>> FYI, you have "deny !from_arc" earlier above.
>>
>> This is simpler and does the same thing as the above line:
>>
>>      # http_access allow !from_test_boxes
>>
>>
>>> # block clients which are not authenticated
>>> # http_access deny !authenticated
>>>
>>
>> You named the ACL "kerb-auth", not "authenticated".
>>
>>
>>> # block certain user IDs from using proxy server
>>> # list of ad users and service accounts to automatically deny proxy
>>> acl block_user proxy_auth_regex -i "/etc/squid/block_user"
>>> http_access deny block_user
>>
>>
>> I suggest this to prevent re-login loop for these forbidden services:
>>
>>     http_access deny !kerb-auth
>>     http_access deny block_user all
>>
>>
>>>
>>> # ----------------------------------------------------------------------------
>>> # general whitelist
>>>
>>> # whitelist for locations/sites (override blocking)
>>> # allows complex URLs
>>> # some bad_urls patterns are generic
>>> # they block suspicous URLs or generally unwanted sites
>>> # this whitelist can make specific exceptions within those
>>> acl bad_exception_urls url_regex -i "/etc/squid/bad_exception_urls"
>>>
>>> # ----------------------------------------------------------------------------
>>> # executable blocking
>>>
>>> # we do this separately from other content blocking
>>> # in order to allow ITLIB to still download
>>> # doing it with other blocking causes a flood of browser auth req's
>>> # for users visting sites with video
>>>
>>> # file extensions to block
>>> # don't try to block .COM files here
>>> # it will get confused with .com domain and block too many things
>>> acl exec_files url_regex -i "/etc/squid/exec_files"
>>
>> Consider using the "urlpath_regex" ACL type instead. It does not match
>> against the scheme://domain:port part of URLs.
>>
>>
>>>
>>> # usernames not to block
>>> acl exec_users proxy_auth_regex -i "/etc/squid/exec_users"
>>>
>>> # activate
>>> http_access deny !bad_exception_urls !exec_users exec_files
>>> deny_info ERR_BLOCK_TYPE exec_files
>>>
>>> # ----------------------------------------------------------------------------
>>> # selective whitelists
>>>
>>> # these override the general blacklists by explictly allowing things
>>> # some multimedia services (I.E. YouTube) are permitted for certain users
>>> # exempts them from content blocking in this section
>>>
>>> # list of users for this
>>> acl mmedia_users proxy_auth_regex -i "/etc/squid/mmedia_users"
>>>
>>> # list of sites for this
>>> acl mmedia_sites dstdomain "/etc/squid/mmedia_sites"
>>>
>>> # if a mmedia user attempts to access a mmedia site via appropriate protocols, allow it
>>> # done for both HTTP/TCP/80 and HTTP/SSL/443
>>> # done for both HTTP request as well as HTTP reply/response
>>> # otherwise the later bad_types Content-Type multimedia blocking rule kicks in
>>>
>>> http_access       allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
>>> # tp_reply_access allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
>>>
>>> http_access       allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users
>>> # http_reply_access allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users
>>
>>
>> FYI, Websites like YouTube can dynamically negotiate the media source
>> ports to be non-standard values using Alt-Svc headers.
>>
>> If you had the default security settings at the top of your http_access
>> rules:
>>
>>     http_access deny !Safe_ports
>>     http_access deny CONNECT !SSL_Ports
>>
>> ... you would not need to make (bad) assumptions about the protocols and
>> ports used by media sites here.
>>
>> Also, "mmedia_users" being last on the line risks a 407 re-auth
>> challenge occuring. Best place it earlier.
>>
>>
>> Leaving these rules as:
>>
>>       http_access allow mmedia_users mmedia_sites
>>
>>
>>>
>>> # ----------------------------------------------------------------------------
>>> # general blacklists
>>> # porn, wastes of bandwidth, etc.
>>>
>>>
>>> # blocked destinations, by host or domain
>>> # sites we don't want people using
>>> acl bad_domains dstdomain "/etc/squid/bad_domains"
>>> http_access deny !bad_exception_urls bad_domains
>>> deny_info ERR_BLOCK_DST       bad_domains
>>>
>>> # blocked destinations, by host or domain, regex pattern
>>> acl bad_domains_regex dstdom_regex -i "/etc/squid/bad_domains_regex"
>>> http_access deny !bad_exception_urls bad_domains_regex
>>> deny_info ERR_BLOCK_DST       bad_domains_regex
>>>
>>> # blocked destinations, by complex URL
>>> # typical use: block just part of a site, by URL path
>>> # example use: block just the advertsing section of a site
>>> acl bad_urls url_regex -i "/etc/squid/bad_urls"
>>> http_access deny !bad_exception_urls bad_urls
>>> deny_info ERR_BLOCK_DST       bad_urls
>>>
>>> # blocked content types, by apparent file name
>>> acl bad_files urlpath_regex -i "/etc/squid/bad_files"
>>> http_access deny !bad_exception_urls bad_files
>>> deny_info ERR_BLOCK_TYPE bad_files
>>>
>>> # blocked content types, by MIME content type, in response
>>> acl bad_types rep_mime_type -i "/etc/squid/bad_types"
>>> # http_reply_access deny bad_types !bad_exception_urls
>>> deny_info ERR_BLOCK_TYPE bad_types
>>
>>
>> FYI, in order for the deny_info action to be taken the ACL it is
>> attached to must be the final one on a line.
>>
>> Previous config was fine, but this "bad_types" use will not work. You
>> need to re-order the access checks like this:
>>
>>
>>     # http_reply_access deny !bad_exception_urls bad_types
>>
>>
>>>
>>
>> This part from here ...
>>
>>> # ----------------------------------------------------------------------------
>>> # standard web (HTTP PUT/GET/etc) access
>>>
>>> # We basically allow any auth'ed user to connect via HTTP to anywhere,
>>> # so long as it uses a standard port, and is not a direct CONNECT
>>> # attempt, or blocked, or any of the other stuff above.
>>>
>>> http_access allow http_ports proto_HTTP methods_std
>>>
>>> # ----------------------------------------------------------------------------
>>> # direct CONNECT for HTTP-over-SSL (HTTPS)
>>>
>>> http_access allow method_CONNECT ssl_ports
>>>
>>> # ----------------------------------------------------------------------------
>>> # deny any other CONNECT attempts
>>>
>>> http_access deny method_CONNECT
>>>
>>> # ----------------------------------------------------------------------------
>>> # FTP via HTTP proxy
>>>
>>> http_access allow ftp_ports proto_FTP
>>>
>>
>> ... to here.
>>
>> Is better handled by the default squid.conf:
>>
>>     http_access deny !Safe_ports
>>     http_access deny CONNECT !Ssl_ports
>>
>> Placed at the top of your http_access lines.
>>
>>
>>> # ----------------------------------------------------------------------------
>>> # catch-all defaults
>>> http_access allow kerb-auth
>>>
>>> # deny any request we missed in the above
>>> http_access deny all
>>>
>>> # If we allowed the request, allow the reply (HTTP response) as well.
>>> # Rules above many allow or deny specific reply before now.
>>> # If nothing more specific matched, we allow.
>>> # This should be OK since we filter mainly on requests.
>>> # http_reply_access allow all
>>>
>>
>> FWIW, it is hard to tell what the exact last reply action could have
>> been. So I would un-comment this allow line to be certain it is what
>> happens.
>>
>>
>>> ##############################################################################
>>> # END OF FILE
>>> ##############################################################################
>>>
>>
>> HTH
>> Amos
>>
>> _______________________________________________
>> squid-users mailing list
>> squid-users at lists.squid-cache.org
>> https://lists.squid-cache.org/listinfo/squid-users
>> _______________________________________________
>> squid-users mailing list
>> squid-users at lists.squid-cache.org
>> https://lists.squid-cache.org/listinfo/squid-users
> 
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users



From ngtech1ltd at gmail.com  Tue Sep 17 08:17:16 2024
From: ngtech1ltd at gmail.com (ngtech1ltd at gmail.com)
Date: Tue, 17 Sep 2024 11:17:16 +0300
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <d54333533f9d4db79c270a9745534b28@hexcel.com>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <28fdeaae-9900-4289-8a3b-0db26773b9a4@measurement-factory.com>
 <3e263117c0b7410da754d42f55671fea@hexcel.com>
 <202409162022.58535.Antony.Stone@squid.open.source.it>
 <d54333533f9d4db79c270a9745534b28@hexcel.com>
Message-ID: <02ad01db08da$0280a680$0781f380$@gmail.com>

Hey Josh,

Configuring Squid is not a simple task in some cases.
I used to think it's a pretty simple piece of software to configure and
indeed with the right background and labs you can achieve specific goals
easily and fast.
However, I encountered over the years enough situations to understand that
it might not be easy for everybody.

This is the main reason that this mailing list exists, if you need help we
are here to try and help you.
I have seen that Amos and Alex gave you suggestions and I hope these helps
you.

If you need more help I will be happy to give you some of my time via zoom
and to see and try to understand better the scenario and the issues.

Yours,
Eliezer

-----Original Message-----
From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of
Piana, Josh
Sent: Monday, September 16, 2024 9:58 PM
To: squid-users at lists.squid-cache.org
Subject: Re: [squid-users] Unable to access internal resources via hostname

Antony, 

So those two rules were definitely not the way to go, thank you to those who
clarified that to me. 

I'll remove them. 

This is really frustrating. I've been trying to get a working Squid
configuration for weeks now and it is literally a 5 minute process for most
people. 

I'll keep looking and see what else could be blocking traffic. 

-----Original Message-----
From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of
Antony Stone
Sent: Monday, September 16, 2024 2:23 PM
To: squid-users at lists.squid-cache.org
Subject: Re: [squid-users] Unable to access internal resources via hostname

[You don't often get email from antony.stone at squid.open.source.it. Learn why
this is important at https://aka.ms/LearnAboutSenderIdentification ]

Caution: This email originated from outside of Hexcel. Do not click links or
open attachments unless you recognize the sender and know the content is
safe.


On Monday 16 September 2024 at 20:06:41, Piana, Josh wrote:

> How I understand the rules are as follows:
> > http_access deny !localnet
>
> This denies HTTP traffic to what I defined as "localnet".

No; firstly the "localnet" ACL is defined by *source* address, therefore
"localnet" matches traffic *from* your local network.

Secondly the ! negates this, therefore "!localnet" matches any source
address which is *not* in your local network.

Therefore "http_access deny !localnet" denies any access from an address not
in your local network.

> > http_access allow localnet

This then allows access from any address which *is* in your local network.

Now, having matched all traffic not from your local network, and all traffic
which is from your local network, you have accounted for all possible
traffic, therefore any other rules have no effect.


Hope this helps,


Antony.

--
Because it messes up the order in which people normally read text.
> Why is top-posting such a bad thing?
> > Top-posting.
> > > What is the most annoying way of replying to e-mail?

                                                   Please reply to the list;
                                                         please *don't* CC
me.
_______________________________________________
squid-users mailing list
squid-users at lists.squid-cache.org
https://lists.squid-cache.org/listinfo/squid-users
_______________________________________________
squid-users mailing list
squid-users at lists.squid-cache.org
https://lists.squid-cache.org/listinfo/squid-users



From zebu14 at free.fr  Tue Sep 17 12:07:12 2024
From: zebu14 at free.fr (Xavier Lecluse)
Date: Tue, 17 Sep 2024 14:07:12 +0200 (CEST)
Subject: [squid-users] Looking for a solution to identify
 "unauthenticated" squid proxy users.
In-Reply-To: <6de66df8-6bfa-4220-8ab8-90df280945a7@measurement-factory.com>
Message-ID: <9368190.148686860.1726574832494.JavaMail.root@zimbra17-e3.priv.proxad.net>

Hello, with the advice from Alex, we managed to add a custom field to the access.log, using an always matching "annotate_transaction" ACL.

We had to add the ACL on each line of our rulesets and the value inserted was the rule_name.
Then, by adding %{name}note in a custom logformat, we were able to display the rule matching each line in the access.log.


Thank you for your help Alex.

Regards,
Xavier

----- Mail original -----
De: "Alex Rousskov" <rousskov at measurement-factory.com>
?: squid-users at lists.squid-cache.org
Envoy?: Lundi 2 Septembre 2024 22:38:44
Objet: Re: [squid-users] Looking for a solution to identify "unauthenticated" squid proxy users.

On 2024-09-02 15:00, Xavier Lecluse wrote:

> I am facing a problem with my actual access.log configuration.
> I use this logformat for the access.log :
> "logformat timereadable %tl %un %Ss %>Hs %>a:%>p %st %rm %ru %mt %<st %Sh %<A %la %lp %2tr"
> 
> It's all good to trace requests when users are authentified, the login is present into <%un>.
> But I have some users which are not authentified (because of incompatiblity with their softwares) and then I don't have any information to differentiate which requests are made by each "user".
> 
> I tried to add <%et> <%ea> <%ul> <%ue>, without any success (the <%ul> just display the same as <%un> in my case).
> 
> I am searching a way to display a field which would help me to identify the requester.
> For example, I use an ACL a rule file for each "user" in which several ACLs are defined. (squid/current/etc/current/rule/PXI_TESTPXI_P.conf)
> 
> Is there a way to use the "matching rule" file in the access log ?

Since many squid.conf directives are driven by ACLs, a typical 
transaction often matches dozens of rules, explicit and implicit ones. 
There is no %code that correctly guesses which matching rule should be 
logged.

However, you can define an always-matching annotate_transaction ACL and 
add it to any rule (or multiple rules). Specific or all transaction 
annotations can then be logged (or sent to helpers, etc.) using %note 
logformat code.

Untested example:

     acl markAsSpecial annotate_transaction category=special
     acl markAsBad annotate_transaction category=bad
     ...
     http_access allow goodClients
     http_access allow specialClients markAsSpecial
     http_access deny to_localhost markAsBad
     ...
     logformat timereadable %tl %note{category} %un %Ss ...


* annotate_transaction ACL type is documented at
http://www.squid-cache.org/Doc/config/acl/

* %note logformat code is documented at
http://www.squid-cache.org/Doc/config/logformat/



HTH,

Alex.


> Actually, this is the log from an authenticated user :
> Sep  2 17:08:32 FPVPXI2 squid[312387]: 02/Sep/2024:17:08:32 +0200 test TCP_TUNNEL 200 10.x.x.250:51994 6765 CONNECT www.google.com:443 - 5716 FIRSTUP_PARENT 10.x.x.241 10.x.x.240 3128 326
> 
> And one from an unauthenticated user :
> Sep  2 16:38:47 QFPVPXI2 squid[311234]: 02/Sep/2024:16:38:47 +0200 - TCP_TUNNEL 200 10.x.x.242:22426 6726 CONNECT www.google.com:443 - 5718 FIRSTUP_PARENT 10.x.x.241 10.x.x.240 3128 249
> 
> 
> 
> Regards,
> 
> Xavier
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users

_______________________________________________
squid-users mailing list
squid-users at lists.squid-cache.org
https://lists.squid-cache.org/listinfo/squid-users


From Josh.Piana at hexcel.com  Tue Sep 17 12:20:42 2024
From: Josh.Piana at hexcel.com (Piana, Josh)
Date: Tue, 17 Sep 2024 12:20:42 +0000
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <02ad01db08da$0280a680$0781f380$@gmail.com>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <28fdeaae-9900-4289-8a3b-0db26773b9a4@measurement-factory.com>
 <3e263117c0b7410da754d42f55671fea@hexcel.com>
 <202409162022.58535.Antony.Stone@squid.open.source.it>
 <d54333533f9d4db79c270a9745534b28@hexcel.com>
 <02ad01db08da$0280a680$0781f380$@gmail.com>
Message-ID: <13d52c5984e64e6182a52c2bef40c3c8@hexcel.com>

Eliezer, 

Thank you for the response. 

I was admittedly at my wits end yesterday and I felt like I keep going in circles. 

We found something on our old Squid box that looks like it may have been used by the old system to assist. I'll reach back out when I have a better question than "why can't I get this to work?"

Thank you, 
Josh

-----Original Message-----
From: ngtech1ltd at gmail.com <ngtech1ltd at gmail.com> 
Sent: Tuesday, September 17, 2024 4:17 AM
To: squid-users at lists.squid-cache.org
Cc: Piana, Josh <Josh.Piana at hexcel.com>
Subject: RE: [squid-users] Unable to access internal resources via hostname

Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.


Hey Josh,

Configuring Squid is not a simple task in some cases.
I used to think it's a pretty simple piece of software to configure and indeed with the right background and labs you can achieve specific goals easily and fast.
However, I encountered over the years enough situations to understand that it might not be easy for everybody.

This is the main reason that this mailing list exists, if you need help we are here to try and help you.
I have seen that Amos and Alex gave you suggestions and I hope these helps you.

If you need more help I will be happy to give you some of my time via zoom and to see and try to understand better the scenario and the issues.

Yours,
Eliezer

-----Original Message-----
From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of Piana, Josh
Sent: Monday, September 16, 2024 9:58 PM
To: squid-users at lists.squid-cache.org
Subject: Re: [squid-users] Unable to access internal resources via hostname

Antony,

So those two rules were definitely not the way to go, thank you to those who clarified that to me.

I'll remove them.

This is really frustrating. I've been trying to get a working Squid configuration for weeks now and it is literally a 5 minute process for most people.

I'll keep looking and see what else could be blocking traffic.

-----Original Message-----
From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of Antony Stone
Sent: Monday, September 16, 2024 2:23 PM
To: squid-users at lists.squid-cache.org
Subject: Re: [squid-users] Unable to access internal resources via hostname

[You don't often get email from antony.stone at squid.open.source.it. Learn why this is important at https://aka.ms/LearnAboutSenderIdentification ]

Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.


On Monday 16 September 2024 at 20:06:41, Piana, Josh wrote:

> How I understand the rules are as follows:
> > http_access deny !localnet
>
> This denies HTTP traffic to what I defined as "localnet".

No; firstly the "localnet" ACL is defined by *source* address, therefore "localnet" matches traffic *from* your local network.

Secondly the ! negates this, therefore "!localnet" matches any source address which is *not* in your local network.

Therefore "http_access deny !localnet" denies any access from an address not in your local network.

> > http_access allow localnet

This then allows access from any address which *is* in your local network.

Now, having matched all traffic not from your local network, and all traffic which is from your local network, you have accounted for all possible traffic, therefore any other rules have no effect.


Hope this helps,


Antony.

--
Because it messes up the order in which people normally read text.
> Why is top-posting such a bad thing?
> > Top-posting.
> > > What is the most annoying way of replying to e-mail?

                                                   Please reply to the list;
                                                         please *don't* CC me.
_______________________________________________
squid-users mailing list
squid-users at lists.squid-cache.org
https://lists.squid-cache.org/listinfo/squid-users
_______________________________________________
squid-users mailing list
squid-users at lists.squid-cache.org
https://lists.squid-cache.org/listinfo/squid-users



From Josh.Piana at hexcel.com  Tue Sep 17 12:38:52 2024
From: Josh.Piana at hexcel.com (Piana, Josh)
Date: Tue, 17 Sep 2024 12:38:52 +0000
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <a4ce7439-087b-46c5-8769-fc491094fe34@measurement-factory.com>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <Zs84drvoIpZ1f6DR@fantomas.sk> <58bdfaada3fa46d0938b7346ec04c336@hexcel.com>
 <947309fa-d1fc-4a75-ac49-ea7bc5c5ff12@measurement-factory.com>
 <faffca37-fa59-46ff-80e4-245c37fa90b9@measurement-factory.com>
 <c00942c1c8ab46b5b393d70f32346798@hexcel.com>
 <59274673-47e9-431d-ad45-7fa3a5a8ebca@measurement-factory.com>
 <d063bef52efd4e32a9f9bb27f934e673@hexcel.com>
 <e35fb7b1-12ce-41b8-83c1-51a208739127@measurement-factory.com>
 <f7ca72b579474cc184e22dfd6ef55683@hexcel.com>
 <4537b23c7a534cd3a716ffd4f8471f5e@hexcel.com>
 <c4ae0610-b8b2-4a26-bed9-8cd1bf2b6901@treenet.co.nz>
 <d3ef9e5efbad41c39c74dcdb10f8f91a@hexcel.com>
 <20d65da8-8e6e-47f6-9250-04ad8f26ff5a@treenet.co.nz>
 <8faab648625547fc88a069512da16c4f@hexcel.com>
 <28fdeaae-9900-4289-8a3b-0db26773b9a4@measurement-factory.com>
 <3e263117c0b7410da754d42f55671fea@hexcel.com>
 <a4ce7439-087b-46c5-8769-fc491094fe34@measurement-factory.com>
Message-ID: <ab2f30b2296d406bbe1efd7df5d0e26b@hexcel.com>

Alex, 

Thank you and the others for that breakdown. That really helps my understanding of it a bit more than trying to grasp the full concept through just reading. I struggle a bit without further context that FAQ's and KB's usually lack, just for simplicities sake. I'm going to keep persuing this route, I'm sure I can get this working. 

At the very least, this whole project, and Linux, has helped me understand a deeper(smaller?) level on how things work behind the scenes. 

I'm going to review the original configuration again, and see what I could be missing. I've already removed/changed a lot of the obsolete terms that you were pointed out to me and what I found online using the squid online resources. I've been visiting this page everyday: http://www.squid-cache.org/Doc/config/

I know that, seemingly, our custom ACL's are not blocking a clients access to browse to internald evices via hostname. I thought it may have been an issue with the allowed ports, maybe an "http_access" rule, or a (likely) user error in creating conflicting rules or statements. 

Greatful for the assistance,
Josh

-----Original Message-----
From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of Alex Rousskov
Sent: Monday, September 16, 2024 11:55 PM
To: squid-users at lists.squid-cache.org
Subject: Re: [squid-users] Unable to access internal resources via hostname

Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.


On 2024-09-16 14:06, Piana, Josh wrote:

>> http_access deny !localnet

> This denies HTTP traffic to what I defined as "localnet". ... Because 
> this argument is near the bottom of my config, won't all other ACL's 
> and lists apply before getting to this deny all rule?

Others have already guided you further, but I will try to correct the above misunderstanding:

* The order of http_access directives matters: Squid evaluates http_access rules in their squid.conf order and applies the first http_access rule that has a matching condition. All subsequent http_access rules are ignored (for that transaction). Here, "to apply"
means to allow or deny the transaction (depending on the matching rule
action) and "matching condition" means that all ACLs named in that http_access rule have matched the transaction.

* The order of acl directives only matters in special cases for ACLs with side effects. For now, you can probably ignore that order.

* For a given ACL name "foo", it is usually best to keep all "acl foo"
directives together and above the first http_access (or any other ACL-using directive) line that uses ACL named "foo".


> I thought every statement needs a contradicting statement as well.

No, it does not: N+1 http_access rule is only evaluated if the first/earlier N http_access rules did _not_ match (see the first bullet above), so you effectively get that "contradicting" or "else" effect automatically as Squid moves through http_access rules...

Said that, it is often a good idea to use "http_access deny all" as the very last explicit http_access rule to avoid relying on an ever-changing default/implicit action that is applied when none of the explicit rules matched. That implicit default is "ever-changing" because it depends on the last explicit http_access rule action (which, naturally, may change as folks update their rules).


FWIW, the following FAQ entry covers the same concepts:
https://wiki.squid-cache.org/SquidFaq/SquidAcl


HTH,

Alex.


> -----Original Message-----
> From: squid-users <squid-users-bounces at lists.squid-cache.org> On 
> Behalf Of Alex Rousskov
> Sent: Monday, September 16, 2024 10:42 AM
> To: squid-users at lists.squid-cache.org
> Subject: Re: [squid-users] Unable to access internal resources via 
> hostname
>
> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>
>
> On 2024-09-16 09:58, Piana, Josh wrote:
>
>> I removed all of the special, custom ACL's and we still don't have internal to internal browsing via hostname.
>
> FWIW, these first two http_access rules make all subsequent http_access rules irrelevant/unused because these two rules match all traffic:
>
>> http_access deny !localnet
>> http_access allow localnet
>
> I did not look further, but the above combination is a sign that you interpret http_access rules differently than Squid does. Please make sure you understand why the two rules above make all subsequent http_access rules irrelevant/unused before adjusting your configuration further. Ask questions as needed.
>
>
> If the primary problem persists after addressing this configuration problem, then my earlier (2024-09-04) recommendation stands: Please restate the primary problem (e.g., detail what "don't have browsing"
> means in terms of the test transaction outcome) and share debugging log of that test transaction again.
>
>
> HTH,
>
> Alex.
>
>
>> So there's something wrong with either the order of the squid.conf or I'm missing some "allow" variable.
>>
>> Please see below for my current config:
>>
>> #####################################################################
>> #
>> ########
>> # Authentication
>> #####################################################################
>> #
>> ########
>>
>> auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth
>> -k /etc/squid/HTTP.keytab -s
>> HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
>> auth_param negotiate children 10
>> auth_param negotiate keep_alive on
>> acl kerb-auth proxy_auth REQUIRED
>>
>> #####################################################################
>> # ######## # Access control - shared/common ACL definitions 
>> #####################################################################
>> #
>> ######## #
>> ---------------------------------------------------------------------
>> -
>> ------ # networks and hosts (by name or IP address)
>>
>> acl src_self src 127.0.0.0/8
>> acl src_self src 10.46.11.69
>>
>> acl to_localhost dst 10.46.11.69
>>
>> acl localnet src 10.0.0.0/8
>> acl localnet src 172.0.0.0/8
>>
>> acl local_dst_addr dst 10.0.0.0/8
>> acl local_dst_addr dst 172.0.0.0/8
>>
>> #
>> ---------------------------------------------------------------------
>> -
>> ------
>> # protocols (URL schemes)
>>
>> acl proto_FTP proto FTP
>> acl proto_HTTP proto HTTP
>>
>> #
>> ---------------------------------------------------------------------
>> -
>> ------
>> # TCP port numbers
>>
>> # TCP ports for ordinary HTTP
>> acl http_ports port 80                     # standard HTTP
>> acl http_ports port 81                     # common alternative
>> acl http_ports port 8001                   # epson.com support sub-site
>> acl http_ports port 8080                   # common alternative
>> acl http_ports port 88 8000 8888   # ad-hoc services
>> acl http_ports port 1080                   # SOCK frontend to HTTP service
>> acl http_ports port 21-22                  # http:// frontend to FTP service
>> acl http_ports port 443                    # https:// URLs
>>
>> # TCP ports for HTTP-over-SSL
>> acl Ssl_ports port 443           # standard HTTPS
>> acl Ssl_ports port 9571         # lexmark.com
>> acl Ssl_ports port 22             # SSH
>>
>> # TCP ports for plain FTP command channel acl ftp_ports port 21
>>
>> #
>> ---------------------------------------------------------------------
>> -
>> ------
>> # HTTP methods (and pseudo-methods)
>>
>> acl CONNECT method CONNECT
>>
>> #####################################################################
>> #
>> ########
>> # Access control - general proxy
>> #####################################################################
>> #
>> ########
>>
>> # define and allow new ACL for "Safe_ports"
>> acl Safe_Ports any-of http_ports Ssl_ports ftp_ports
>>
>> #
>> ---------------------------------------------------------------------
>> -
>> ------
>> # basic deny rules
>>
>> # deny anything not from the LAN
>> http_access deny !localnet
>>
>> # allow localnet users
>> http_access allow localnet
>>
>> # blocks self to self connections
>> http_access deny to_localhost
>>
>> # deny unauthorized access and DoS attacks http_access deny 
>> !Safe_ports http_access deny CONNECT !Ssl_ports
>>
>> # allow authenticated clients after all other ACL's http_access allow 
>> kerb-auth
>>
>> # deny any request we missed in the above http_access deny all
>>
>> # if no other ACL applies, allow
>> http_reply_access allow all
>>
>> This is it. I commented out all other ACL's for allow/deny we had in place for our custom rules. Still unable to browse local via hostname, IP works fine again.
>>
>> -----Original Message-----
>> From: squid-users <squid-users-bounces at lists.squid-cache.org> On 
>> Behalf Of Amos Jeffries
>> Sent: Saturday, September 7, 2024 10:51 AM
>> To: squid-users at lists.squid-cache.org
>> Subject: Re: [squid-users] Unable to access internal resources via 
>> hostname
>>
>> Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>>
>>
>> On 6/09/24 03:56, Piana, Josh wrote:
>>> Hello Amos,
>>>
>>> While the comments did say that it was just the 10.46.11.0 range, I don't think there's any other ACL forcing that. I tried adding the the two internal sites that are being blocked by their IP, restarted Squid, and tested. Still being blocked. You are right though, both of those web addresses are on a different IP scheme. Ideally we want anything on 172.0.0.0 to be allowed, and 10.96.0.0. The other question I have is, even if we specify those sites IP as "allowed", shouldn't we be able to brwose to them by their hostname as well?
>>
>>
>> That depends no your configuration policy. The default squid.conf only checks that clients are from the LAN and not doing any nasty protocol trick attacks.
>>
>>
>>>
>>> Currently, those internal sites ARE reachable. But only if we use IP. While this doesn't bother me, personally, the rest of our users would like to keep browsing via hostname as that's what they're used to and what many have shortcuts for.
>>>
>>
>> Currently I see the ACL "local_dst_dom" is commented out (disabled).
>>
>> I guess you also have not listed the hostname or domain in the file loaded by "authless_dst" ACL.
>>
>>
>>
>>
>>> In regards to the results of /etc/resolv.conf, see below:
>>> search ad.arc-tech.com
>>> nameserver 10.46.11.67
>>>
>>
>> Okay. Then the "NDOT" default of 1 will be applied. So for these HTTP
>> messages:
>>
>>      CONNECT hexp:443 HTTP/1.1
>>      Host: hexp
>>      ...
>>
>>
>> Will be interpreted by Squid as URL:
>>
>>     https://hexp/
>>
>>
>> The "dstdomain" ACL will try to match "hexp" exactly.
>>
>> The "dst" ACL will try to match IPs of "hexp.ad.arc-tech.com"
>>
>>
>>
>>> There must be a better way to just allow internal to internal traffic without needing to authenticate through the web proxy. The old config had it, but that was part of the issue. We have no idea how that was working, it didn't make sense at all and it was a bit outdated, Version 2.5 as opposed to our current 5.5.
>>>
>>> I'm happy to post out config again here, as it's changed a bit and I have cleaned it up.
>>>
>>> # squid.conf - Squid web cache configuration
>>>
>>> ####################################################################
>>> #
>>> #
>>> ########
>>> # General
>>> ####################################################################
>>> #
>>> #
>>> ########
>>>
>>> # 2020MAR23 running out with just 1024 as we switch to Hexcel.com 
>>> OMA max_filedesc 4096
>>>
>>
>> Unrelated to your problem, but FYI this should probably be much larger (ie 64K minimum, up to 100x expected user count) for a production proxy.
>>
>>
>>>
>>> ####################################################################
>>> #
>>> #
>>> ########
>>> # Logging
>>> ####################################################################
>>> #
>>> #
>>> ########
>>>
>>> # this makes the logs readable to humans logformat custom %tl.%03tu 
>>> %>a %Ss/%03>Hs %<st %rm %ru %[un %Sh/%<a %mt access_log 
>>> daemon:/var/log/squid/access.log custom
>>>
>>> # this gives better error reporting
>>> logformat custom %err_code/%err_detail access_log 
>>> daemon:/var/log/squid/access.log custom
>>>
>>
>> This repeat of "custom" will cause issues.
>>
>> IIRC this was added misunderstanding of Alex instructions.
>> What he meant was to **add** "%err_code/%err_detail" to your existing "custom" format.
>>
>> Like this:
>>
>> logformat custom %tl.%03tu %>a %Ss/%03>Hs %<st %rm %ru %[un \
>>        %Sh/%<a %mt %err_code/%err_detail
>>
>>
>>> # Red Hat-ish log names
>>> cache_log /var/log/squid/cache.log
>>> cache_access_log /var/log/squid/access.log
>>
>> This setting opens a third logger writing to access.log, causing more issues.
>>
>> Remove this "cache_access_log" line.
>>
>>
>>>
>>> # store_log is only useful for debugging cache_store_log none
>>
>>
>> FYI, off by default on current Squid. You can probably erase this setting entirely now.
>>
>>
>>> ####################################################################
>>> #
>>> #
>>> ########
>>> # Network - General/misc
>>> ####################################################################
>>> #
>>> #
>>> ########
>>>
>>> # our HTTP proxy port
>>> http_port 10.46.11.69:8080
>>> # loopback management
>>> http_port 127.0.0.1:3128
>>
>>
>> FWIW, you have denied access to "dst 127.0.0.0/8". So traffic to this port will be rejected.
>>
>>
>>>
>>> # disable ICP, port is typically 3130 icp_port 0
>>
>> FYI; disabled by default in modern Squid. You can remove "icp_port".
>>
>>>
>>> # if set to "on", Squid will append your client's IP address in the 
>>> HTTP requests it forwards forwarded_for off
>>
>> "off" will send the text "unknown".
>>
>> It is better to use "transparent" (pass-thru unchanged) or "delete"
>> (erase if existing).
>>
>>
>>> ####################################################################
>>> #
>>> #
>>> ########
>>> # Authentication
>>> ####################################################################
>>> #
>>> #
>>> ########
>>>
>>> auth_param negotiate program 
>>> /usr/lib64/squid/negotiate_kerberos_auth
>>> -k /etc/squid/HTTP.keytab -s
>>> HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
>>> auth_param negotiate children 10
>>> auth_param negotiate keep_alive on
>>> acl kerb-auth proxy_auth REQUIRED
>>>
>>> ####################################################################
>>> # # ######## # Access control - shared/common ACL definitions 
>>> ####################################################################
>>> #
>>> #
>>> ########
>>>
>>> #
>>> --------------------------------------------------------------------
>>> -
>>> -
>>> ------ # networks and hosts (by name or IP address)
>>>
>>> # acl all src all
>>>
>>> acl src_self src 127.0.0.0/8
>>> acl src_self src 10.46.11.69
>>>
>>> acl dst_self dst 127.0.0.0/8
>>> acl dst_self dst 10.46.11.69
>>
>>
>> FYI, there are more IPs than just 127.0.0.0/8 which can be problematic as loopback sources.
>>
>> Replace "dst_self" with:
>>
>>     acl to_localhost dst 10.46.11.69
>>
>>
>>>
>>> acl from_arc src 10.46.0.0/15
>>>
>>> acl local_dst_addr dst 10.0.0.0/8
>>> acl local_dst_addr dst 172.0.0.0/8
>>>
>>> #
>>> --------------------------------------------------------------------
>>> -
>>> -
>>> ------
>>> # protocols (URL schemes)
>>>
>>> acl proto_FTP proto FTP
>>> acl proto_HTTP proto HTTP
>>>
>>> #
>>> --------------------------------------------------------------------
>>> -
>>> -
>>> ------
>>> # TCP port numbers
>>>
>>> # TCP ports for ordinary HTTP
>>> acl http_ports port 80                # standard HTTP
>>> acl http_ports port 81                # common alternative
>>> acl http_ports port 8001      # epson.com support sub-site
>>> acl http_ports port 8080      # common alternative
>>
>>
>> Other ports that are common:
>>
>>     acl http_ports port 88 8000 8888 # ad-hoc services
>>     acl http_ports port 1080  # SOCK frontend to HTTP service
>>     acl http_ports port 21-22 # http:// frontend to FTP service
>>     acl http_ports port 443   # https:// URLs
>>
>>
>> Or really, **any** port can be valid now that Alt-Svc is widely used.
>>
>>>
>>> # TCP ports for HTTP-over-SSL
>>> acl Ssl_ports port 443
>>> acl Ssl_ports port 9571               # lexmark.com
>>>
>>> # TCP ports for plain FTP command channel acl ftp_ports port 21
>>>
>>> # TCP ports for SSH/SFTP (secure shell) acl ssh_ports port 22
>>
>> FTR, "ssh_ports" is unused. SSH and SFTP can only use Squid via CONNECT tunnel anyway. So you should list this port as part of "Ssl_ports".
>>
>>>
>>> #
>>> --------------------------------------------------------------------
>>> -
>>> -
>>> ------
>>> # HTTP methods (and pseudo-methods)
>>>
>>> acl method_CONNECT method CONNECT
>>
>> FYI: we have a built-in for modern Squid:
>>
>>      acl CONNECT method CONNECT
>>
>> You can replace all "method_CONNECT" with just "CONNECT".
>>
>>
>>>
>>> # list of standard HTTP methods
>>> acl methods_std method GET HEAD POST PUT DELETE acl methods_std 
>>> method TRACE OPTIONS
>>>
>>
>> Consider removing these ACLs and the extra complexity they create.
>> Modern HTTP considers many other method names "standard" and current Squid follows the standard-required handling for all of them, and special ones.
>>
>>
>>> ####################################################################
>>> #
>>> #
>>> #######
>>> # Access control - general proxy
>>> ####################################################################
>>> #
>>> #
>>> ########
>>>
>>> # This major section is about which HTTP proxy clients can use Squid 
>>> # as an HTTP proxy server.  As opposed to the maintenance/admin-type 
>>> # stuff in the previous section.
>>>
>>> #
>>> --------------------------------------------------------------------
>>> -
>>> -
>>> ------
>>> # basic deny rules
>>> # these block stuff that's never good # we put most denies after 
>>> user-auth so we know *who* is trying
>>>
>>
>> Missing basic security to prevent DoS and protocol hijacking attacks:
>>
>>
>>     http_access deny !Safe_ports
>>     http_access deny CONNECT !Ssl_ports
>>
>>
>> You can define Safe_ports like this:
>>
>>      acl Safe_Ports any-of http_ports Ssl_ports ftp_ports
>>
>>
>>
>>> # block attempts to connect to proxy server via proxy http_access 
>>> deny dst_self
>>>
>>
>> Use:
>>      http_access deny to_localhost
>>
>>
>>
>>> # block clients which are the proxy server machine itself 
>>> http_access deny src_self
>>>
>>
>> FYI, there should be nothing wrong with other software running on the proxy machine (eg software updaters) using Squid. They have to obey the same rules an any other client.
>>
>>
>>> # deny anything not from the LAN
>>> http_access deny !from_arc
>>
>> FYI, we use "localnet" ACL to define the LAN. Makes it a bit easier for others to assist if you use the same. Up to you though.
>>
>>
>>>
>>> #
>>> --------------------------------------------------------------------
>>> -
>>> -
>>> ------
>>> # allow without authentication
>>> # these rules allow certain connects without user authentication # 
>>> these allow any protocol/method/etc
>>>
>>> #                 ***** IMPORTANT *****
>>> # Adding to these lists also exempts from all content filtering.
>>> # In particular, executables will be allowed to download!
>>> #                 ***** IMPORTANT *****
>>>
>>> # allow connects to local destinations without authentication # by 
>>> domain name from URL # acl local_dst_dom dstdomain ad.arc-tech.com
>>> # http_access       allow local_dst_dom
>>> # http_reply_access allow local_dst_dom
>>
>>
>> You have a domain name whitelist ACL two sections below.
>> You can remove the above, and list and use the later one for both 
>> "local" and other domains.
>>
>>
>>>
>>> # by IP address name resolves to
>>> http_access       allow local_dst_addr
>>> # http_reply_access allow local_dst_addr
>>>
>>
>> Maybe rename "local_dst_addr" to "whitelist_dst_ips" for clarity on 
>> what it is doing.
>>
>>
>> Which brings up a security issue: When you list the entire LAN range 
>> in this ACL, anyone accessing the proxy is allowed to do whatever 
>> they want to your LAN machines. That includes all LAN **and** WAN connections.
>>
>> Additionally, the bypass of authentication leaves you no trace that 
>> this was actually a user, and not some infected LAN machine spreading 
>> malware across your LAN. Which is rather risky.
>>
>>
>> Prefer to keep by-IP whitelist's empty or minimal content.
>>
>>
>>
>>> # allow trusted hosts without authentication # these are just ip's 
>>> on the 10.46.11.x network acl authless_src src "/etc/squid/authless_src"
>>> http_access       allow authless_src
>>> # http_reply_access allow authless_src
>>>
>>> # allow the following destinations without authentication # list of 
>>> random approved websites # whats the advantage of not authenticating?
>>> acl authless_dst dstdomain "/etc/squid/authless_dst"
>>> http_access       allow authless_dst
>>> # http_reply_access allow authless_dst
>>>
>>
>> This should be combined with "local_dst_dom". Just use different 
>> lines like so:
>>
>>     acl authless_dst dstdomain "/etc/squid/authless_dst"
>>     acl authless_dst dstdomain .ad.arc-tech.com
>>     acl authless_dst dstdomain .hexcelssp.com hexcelssp
>>
>>     http_access allow whitelist
>>
>>
>>> # 
>>> --------------------------------------------------------------------
>>> --------
>>> # block before authentication
>>> # these rules block certain connects without user authentication # 
>>> done for software which handles proxy auth requests badly # for 
>>> example, popping up many auth prompts # this does mean we cannot 
>>> whitelist for users
>>>
>>> # blocked destinations, by host or domain, before authentication # 
>>> websites that are auto-deny acl bad_domains_preauth dstdomain 
>>> "/etc/squid/bad_domains_preauth"
>>> http_access deny bad_domains_preauth
>>>
>>> # 
>>> --------------------------------------------------------------------
>>> --------
>>> # require proxy authentication
>>>
>>> # 
>>> ********************************************************************
>>> # * anything past this point requires users to authenticate to proxy 
>>> * # 
>>> ********************************************************************
>>>
>>> # Uncomment these lines to disable authentication requirement for 
>>> all # but a few test boxes.  Useful if NTLM gets broken.
>>> # acl from_test_boxes src 10.2.1.5
>>> # http_access allow !from_test_boxes from_arc
>>>
>>
>> FYI, you have "deny !from_arc" earlier above.
>>
>> This is simpler and does the same thing as the above line:
>>
>>      # http_access allow !from_test_boxes
>>
>>
>>> # block clients which are not authenticated # http_access deny 
>>> !authenticated
>>>
>>
>> You named the ACL "kerb-auth", not "authenticated".
>>
>>
>>> # block certain user IDs from using proxy server # list of ad users 
>>> and service accounts to automatically deny proxy acl block_user 
>>> proxy_auth_regex -i "/etc/squid/block_user"
>>> http_access deny block_user
>>
>>
>> I suggest this to prevent re-login loop for these forbidden services:
>>
>>     http_access deny !kerb-auth
>>     http_access deny block_user all
>>
>>
>>>
>>> # 
>>> --------------------------------------------------------------------
>>> --------
>>> # general whitelist
>>>
>>> # whitelist for locations/sites (override blocking) # allows complex 
>>> URLs # some bad_urls patterns are generic # they block suspicous 
>>> URLs or generally unwanted sites # this whitelist can make specific 
>>> exceptions within those acl bad_exception_urls url_regex -i 
>>> "/etc/squid/bad_exception_urls"
>>>
>>> # 
>>> --------------------------------------------------------------------
>>> --------
>>> # executable blocking
>>>
>>> # we do this separately from other content blocking # in order to 
>>> allow ITLIB to still download # doing it with other blocking causes 
>>> a flood of browser auth req's # for users visting sites with video
>>>
>>> # file extensions to block
>>> # don't try to block .COM files here # it will get confused with 
>>> .com domain and block too many things acl exec_files url_regex -i 
>>> "/etc/squid/exec_files"
>>
>> Consider using the "urlpath_regex" ACL type instead. It does not 
>> match against the scheme://domain:port part of URLs.
>>
>>
>>>
>>> # usernames not to block
>>> acl exec_users proxy_auth_regex -i "/etc/squid/exec_users"
>>>
>>> # activate
>>> http_access deny !bad_exception_urls !exec_users exec_files 
>>> deny_info ERR_BLOCK_TYPE exec_files
>>>
>>> # 
>>> --------------------------------------------------------------------
>>> --------
>>> # selective whitelists
>>>
>>> # these override the general blacklists by explictly allowing things 
>>> # some multimedia services (I.E. YouTube) are permitted for certain 
>>> users # exempts them from content blocking in this section
>>>
>>> # list of users for this
>>> acl mmedia_users proxy_auth_regex -i "/etc/squid/mmedia_users"
>>>
>>> # list of sites for this
>>> acl mmedia_sites dstdomain "/etc/squid/mmedia_sites"
>>>
>>> # if a mmedia user attempts to access a mmedia site via appropriate 
>>> protocols, allow it # done for both HTTP/TCP/80 and HTTP/SSL/443 # 
>>> done for both HTTP request as well as HTTP reply/response # 
>>> otherwise the later bad_types Content-Type multimedia blocking rule 
>>> kicks in
>>>
>>> http_access       allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
>>> # tp_reply_access allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
>>>
>>> http_access       allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users
>>> # http_reply_access allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users
>>
>>
>> FYI, Websites like YouTube can dynamically negotiate the media source 
>> ports to be non-standard values using Alt-Svc headers.
>>
>> If you had the default security settings at the top of your 
>> http_access
>> rules:
>>
>>     http_access deny !Safe_ports
>>     http_access deny CONNECT !SSL_Ports
>>
>> ... you would not need to make (bad) assumptions about the protocols 
>> and ports used by media sites here.
>>
>> Also, "mmedia_users" being last on the line risks a 407 re-auth 
>> challenge occuring. Best place it earlier.
>>
>>
>> Leaving these rules as:
>>
>>       http_access allow mmedia_users mmedia_sites
>>
>>
>>>
>>> # 
>>> --------------------------------------------------------------------
>>> --------
>>> # general blacklists
>>> # porn, wastes of bandwidth, etc.
>>>
>>>
>>> # blocked destinations, by host or domain # sites we don't want 
>>> people using acl bad_domains dstdomain "/etc/squid/bad_domains"
>>> http_access deny !bad_exception_urls bad_domains
>>> deny_info ERR_BLOCK_DST       bad_domains
>>>
>>> # blocked destinations, by host or domain, regex pattern acl 
>>> bad_domains_regex dstdom_regex -i "/etc/squid/bad_domains_regex"
>>> http_access deny !bad_exception_urls bad_domains_regex
>>> deny_info ERR_BLOCK_DST       bad_domains_regex
>>>
>>> # blocked destinations, by complex URL # typical use: block just 
>>> part of a site, by URL path # example use: block just the advertsing 
>>> section of a site acl bad_urls url_regex -i "/etc/squid/bad_urls"
>>> http_access deny !bad_exception_urls bad_urls
>>> deny_info ERR_BLOCK_DST       bad_urls
>>>
>>> # blocked content types, by apparent file name acl bad_files 
>>> urlpath_regex -i "/etc/squid/bad_files"
>>> http_access deny !bad_exception_urls bad_files deny_info 
>>> ERR_BLOCK_TYPE bad_files
>>>
>>> # blocked content types, by MIME content type, in response acl 
>>> bad_types rep_mime_type -i "/etc/squid/bad_types"
>>> # http_reply_access deny bad_types !bad_exception_urls deny_info 
>>> ERR_BLOCK_TYPE bad_types
>>
>>
>> FYI, in order for the deny_info action to be taken the ACL it is 
>> attached to must be the final one on a line.
>>
>> Previous config was fine, but this "bad_types" use will not work. You 
>> need to re-order the access checks like this:
>>
>>
>>     # http_reply_access deny !bad_exception_urls bad_types
>>
>>
>>>
>>
>> This part from here ...
>>
>>> # 
>>> --------------------------------------------------------------------
>>> -------- # standard web (HTTP PUT/GET/etc) access
>>>
>>> # We basically allow any auth'ed user to connect via HTTP to 
>>> anywhere, # so long as it uses a standard port, and is not a direct 
>>> CONNECT # attempt, or blocked, or any of the other stuff above.
>>>
>>> http_access allow http_ports proto_HTTP methods_std
>>>
>>> # 
>>> --------------------------------------------------------------------
>>> -------- # direct CONNECT for HTTP-over-SSL (HTTPS)
>>>
>>> http_access allow method_CONNECT ssl_ports
>>>
>>> # 
>>> --------------------------------------------------------------------
>>> --------
>>> # deny any other CONNECT attempts
>>>
>>> http_access deny method_CONNECT
>>>
>>> # 
>>> --------------------------------------------------------------------
>>> --------
>>> # FTP via HTTP proxy
>>>
>>> http_access allow ftp_ports proto_FTP
>>>
>>
>> ... to here.
>>
>> Is better handled by the default squid.conf:
>>
>>     http_access deny !Safe_ports
>>     http_access deny CONNECT !Ssl_ports
>>
>> Placed at the top of your http_access lines.
>>
>>
>>> # 
>>> --------------------------------------------------------------------
>>> --------
>>> # catch-all defaults
>>> http_access allow kerb-auth
>>>
>>> # deny any request we missed in the above http_access deny all
>>>
>>> # If we allowed the request, allow the reply (HTTP response) as well.
>>> # Rules above many allow or deny specific reply before now.
>>> # If nothing more specific matched, we allow.
>>> # This should be OK since we filter mainly on requests.
>>> # http_reply_access allow all
>>>
>>
>> FWIW, it is hard to tell what the exact last reply action could have 
>> been. So I would un-comment this allow line to be certain it is what 
>> happens.
>>
>>
>>> ####################################################################
>>> ##########
>>> # END OF FILE
>>> ####################################################################
>>> ##########
>>>
>>
>> HTH
>> Amos
>>
>> _______________________________________________
>> squid-users mailing list
>> squid-users at lists.squid-cache.org
>> https://lis/
>> ts.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana
>> %40hexcel.com%7C3b51806fd45a486445a208dcd6cc8283%7C4248050df19546d5ac
>> 9c0c7c52b04cae%7C0%7C0%7C638621421091750002%7CUnknown%7CTWFpbGZsb3d8e
>> yJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0
>> %7C%7C%7C&sdata=BYN%2B7Opba35jH10drkdIZnvG7xTzYCO22wQEkJ9nTHE%3D&rese
>> rved=0 _______________________________________________
>> squid-users mailing list
>> squid-users at lists.squid-cache.org
>> https://lis/
>> ts.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana
>> %40hexcel.com%7C3b51806fd45a486445a208dcd6cc8283%7C4248050df19546d5ac
>> 9c0c7c52b04cae%7C0%7C0%7C638621421091750002%7CUnknown%7CTWFpbGZsb3d8e
>> yJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0
>> %7C%7C%7C&sdata=BYN%2B7Opba35jH10drkdIZnvG7xTzYCO22wQEkJ9nTHE%3D&rese
>> rved=0
>
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://list/
> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana%4
> 0hexcel.com%7C3b51806fd45a486445a208dcd6cc8283%7C4248050df19546d5ac9c0
> c7c52b04cae%7C0%7C0%7C638621421091750002%7CUnknown%7CTWFpbGZsb3d8eyJWI
> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7
> C%7C&sdata=BYN%2B7Opba35jH10drkdIZnvG7xTzYCO22wQEkJ9nTHE%3D&reserved=0
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://list/
> s.squid-cache.org%2Flistinfo%2Fsquid-users&data=05%7C02%7Cjosh.piana%4
> 0hexcel.com%7C3b51806fd45a486445a208dcd6cc8283%7C4248050df19546d5ac9c0
> c7c52b04cae%7C0%7C0%7C638621421091750002%7CUnknown%7CTWFpbGZsb3d8eyJWI
> joiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7
> C%7C&sdata=BYN%2B7Opba35jH10drkdIZnvG7xTzYCO22wQEkJ9nTHE%3D&reserved=0

_______________________________________________
squid-users mailing list
squid-users at lists.squid-cache.org
https://lists.squid-cache.org/listinfo/squid-users


From martin at hinterlands.org  Tue Sep 17 12:39:42 2024
From: martin at hinterlands.org (Martin A. Brooks)
Date: Tue, 17 Sep 2024 13:39:42 +0100
Subject: [squid-users] Squid appears to be ignoring url_rewrite_program
Message-ID: <c4059e461afcfa4d43796d144cc0601e@hinterlands.org>

Hello folks,

I am trying to use a URL rewriter program to redirect client requests 
for certain URLs elsewhere.  I found this on github which seems to do 
what I need:

https://github.com/rchunping/squid-urlrewrite

Running this on the command line as shown in the instructions appears to 
show it doing as I ask.

Although squid starts and spawns the rewrite program children as 
requested, it does appear to be sending requests to them.  A request for 
a URL which should be redirected is simply proxied as normal, rather 
than a redirect being returned.  It's as though squid is simply not 
using the rewriter program at all.

I'm using squid 5.7 as packaged by Debian, and my entire squid.conf is 
as follows:

------------------------
url_rewrite_program /etc/squid/squid-urlrewrite
url_rewrite_children 20 startup=10 idle=10 concurrency=10000
pinger_enable off

acl alb_subnets src 10.248.4.0/24
acl alb_subnets src 10.248.5.0/24
acl alb_subnets src 10.248.6.0/24

acl ssl_ports port 443
acl safe_ports port 80
acl safe_ports port 443

http_access deny !safe_ports
http_access deny CONNECT !ssl_ports

http_access allow localhost manager
http_access deny manager
http_access allow localhost
http_access allow alb_subnets

http_access deny all

http_port 3128

coredump_dir /var/spool/squid
-------------------------

Have I missed something to enable use of the rewriter?  Are there 
specific debug options I can use that will show me what squid is doing, 
if anything?


Regards

Martin.


From rousskov at measurement-factory.com  Tue Sep 17 13:14:02 2024
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Tue, 17 Sep 2024 09:14:02 -0400
Subject: [squid-users] Looking for a solution to identify
 "unauthenticated" squid proxy users.
In-Reply-To: <9368190.148686860.1726574832494.JavaMail.root@zimbra17-e3.priv.proxad.net>
References: <9368190.148686860.1726574832494.JavaMail.root@zimbra17-e3.priv.proxad.net>
Message-ID: <c105b2e3-921b-4f58-b4c3-c9d962057dc5@measurement-factory.com>

On 2024-09-17 08:07, Xavier Lecluse wrote:
> Hello, with the advice from Alex, we managed to add a custom field to the access.log, using an always matching "annotate_transaction" ACL.
> 
> We had to add the ACL on each line of our rulesets and the value inserted was the rule_name.
> Then, by adding %{name}note in a custom logformat, we were able to display the rule matching each line in the access.log.

Glad you made it work! Someday, Squid will optionally add an 
"http_access(*) rule matched" annotation to all transactions, so that 
admins do not have to manually annotate all their rules.

(*) Similar breadcrumbs will be collected for other directives as well.

Alex.


> ----- Mail original -----
> De: "Alex Rousskov" <rousskov at measurement-factory.com>
> ?: squid-users at lists.squid-cache.org
> Envoy?: Lundi 2 Septembre 2024 22:38:44
> Objet: Re: [squid-users] Looking for a solution to identify "unauthenticated" squid proxy users.
> 
> On 2024-09-02 15:00, Xavier Lecluse wrote:
> 
>> I am facing a problem with my actual access.log configuration.
>> I use this logformat for the access.log :
>> "logformat timereadable %tl %un %Ss %>Hs %>a:%>p %st %rm %ru %mt %<st %Sh %<A %la %lp %2tr"
>>
>> It's all good to trace requests when users are authentified, the login is present into <%un>.
>> But I have some users which are not authentified (because of incompatiblity with their softwares) and then I don't have any information to differentiate which requests are made by each "user".
>>
>> I tried to add <%et> <%ea> <%ul> <%ue>, without any success (the <%ul> just display the same as <%un> in my case).
>>
>> I am searching a way to display a field which would help me to identify the requester.
>> For example, I use an ACL a rule file for each "user" in which several ACLs are defined. (squid/current/etc/current/rule/PXI_TESTPXI_P.conf)
>>
>> Is there a way to use the "matching rule" file in the access log ?
> 
> Since many squid.conf directives are driven by ACLs, a typical
> transaction often matches dozens of rules, explicit and implicit ones.
> There is no %code that correctly guesses which matching rule should be
> logged.
> 
> However, you can define an always-matching annotate_transaction ACL and
> add it to any rule (or multiple rules). Specific or all transaction
> annotations can then be logged (or sent to helpers, etc.) using %note
> logformat code.
> 
> Untested example:
> 
>       acl markAsSpecial annotate_transaction category=special
>       acl markAsBad annotate_transaction category=bad
>       ...
>       http_access allow goodClients
>       http_access allow specialClients markAsSpecial
>       http_access deny to_localhost markAsBad
>       ...
>       logformat timereadable %tl %note{category} %un %Ss ...
> 
> 
> * annotate_transaction ACL type is documented at
> http://www.squid-cache.org/Doc/config/acl/
> 
> * %note logformat code is documented at
> http://www.squid-cache.org/Doc/config/logformat/
> 
> 
> 
> HTH,
> 
> Alex.
> 
> 
>> Actually, this is the log from an authenticated user :
>> Sep  2 17:08:32 FPVPXI2 squid[312387]: 02/Sep/2024:17:08:32 +0200 test TCP_TUNNEL 200 10.x.x.250:51994 6765 CONNECT www.google.com:443 - 5716 FIRSTUP_PARENT 10.x.x.241 10.x.x.240 3128 326
>>
>> And one from an unauthenticated user :
>> Sep  2 16:38:47 QFPVPXI2 squid[311234]: 02/Sep/2024:16:38:47 +0200 - TCP_TUNNEL 200 10.x.x.242:22426 6726 CONNECT www.google.com:443 - 5718 FIRSTUP_PARENT 10.x.x.241 10.x.x.240 3128 249
>>
>>
>>
>> Regards,
>>
>> Xavier
>> _______________________________________________
>> squid-users mailing list
>> squid-users at lists.squid-cache.org
>> https://lists.squid-cache.org/listinfo/squid-users
> 
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users



From martin at hinterlands.org  Tue Sep 17 13:34:01 2024
From: martin at hinterlands.org (Martin A. Brooks)
Date: Tue, 17 Sep 2024 14:34:01 +0100
Subject: [squid-users] Squid appears to be ignoring url_rewrite_program
In-Reply-To: <c4059e461afcfa4d43796d144cc0601e@hinterlands.org>
References: <c4059e461afcfa4d43796d144cc0601e@hinterlands.org>
Message-ID: <b2b6fa0b8b218b904de5f7c70f3a7aae@hinterlands.org>

Hi

On 2024-09-17 13:39, Martin A. Brooks wrote:
> I am trying to use a URL rewriter program to redirect client requests 
> for certain URLs elsewhere.  I found this on github which seems to do 
> what I need:
> 
> https://github.com/rchunping/squid-urlrewrite
> 
> Running this on the command line as shown in the instructions appears 
> to show it doing as I ask.

Replying to my own email as I've found that this is in fact working 
provided the URLS are http and not https. Proxied HTTPS requests use 
CONNECT and, for whatever reason, this appears to bypass the url 
rewriter.  I'm looking in to it some more but, given that a very large 
part of the world is HTTPS these days, it may be that I need to look at 
another option for this requirement.

Any ideas still greatly appreciated.


Regards

Martin.


From ankor2023 at gmail.com  Tue Sep 17 13:34:37 2024
From: ankor2023 at gmail.com (Andrey K)
Date: Tue, 17 Sep 2024 16:34:37 +0300
Subject: [squid-users] GET /squid-internal-dynamic/netdb requests to the
 parent proxy
In-Reply-To: <ZuKjoeR3ZexFHV1c@fantomas.sk>
References: <CADJd0Y3gTZ4zL6_79wmUcF25dR_c=40VteBa2h5zx72Ei_V+GA@mail.gmail.com>
 <ZuKjoeR3ZexFHV1c@fantomas.sk>
Message-ID: <CADJd0Y1Eq3dJXXnTw0Zxm=ovSfcgozZ6EB-XL8Z92SErcHjt5g@mail.gmail.com>

Hello, Matus,

Thank you very much for the information.

Kind regards,
       Ankor.

??, 13 ????. 2024??. ? 22:27, Matus UHLAR - fantomas <uhlar at fantomas.sk>:

> On 12.09.24 09:28, Andrey K wrote:
> >I found that my SQUID proxy periodically sends HTTP-GET requests to the
> >parent proxy for /squid-internal-dynamic/netdb endpoint:
> >7 25.167034632 myproxyIP ? parentproxyIP TCP 76 47420 ? 3128[SYN] Seq=0
> >8 25.268121443 parentproxyIP ? myproxyIP TCP 76 3128 ? 47420[SYN, ACK]
> >9 25.268197532 myproxyIP ? parentproxyIP TCP 68 47420 ? 3128[ACK] Seq=1
> >10 25.268379801 myproxyIP ? parentproxyIP HTTP 202 GET
> >/squid-internal-dynamic/netdb HTTP/1.1
> >11 25.367607619 parentproxyIP ? myproxyIP TCP 68 3128 ? 47420[ACK] Seq=1
> >12 25.368367754 parentproxyIP ? myproxyIP TCP 470 HTTP/1.1 407
> >ProxyAuthentication Required
> >13 25.368388337 myproxyIP ? parentproxyIP TCP 68 47420 ? 3128[ACK] Seq=135
> >14 25.368701804 myproxyIP ? parentproxyIP TCP 68 47420 ? 3128[FIN, ACK]
> >
> >Could you advise me how to disable these requests?
> >My config of the cache peer looks like:
> >cache_peer parentproxy1 parent 3128 0 proxy-only no-query round-robin
> >cache_peer_access  parentproxy1 allow x-sites
> >cache_peer_access  parentproxy1 deny all
>
> use no-netdb-exchange in cache_peer directive
> http://www.squid-cache.org/Doc/config/cache_peer/
> --
> Matus UHLAR - fantomas, uhlar at fantomas.sk ; http://www.fantomas.sk/
> Warning: I wish NOT to receive e-mail advertising to this address.
> Varovanie: na tuto adresu chcem NEDOSTAVAT akukolvek reklamnu postu.
> He who laughs last thinks slowest.
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240917/fd9ad462/attachment.htm>

From squid.org at bloms.de  Tue Sep 17 14:12:04 2024
From: squid.org at bloms.de (Dieter Bloms)
Date: Tue, 17 Sep 2024 16:12:04 +0200
Subject: [squid-users] Squid appears to be ignoring url_rewrite_program
In-Reply-To: <b2b6fa0b8b218b904de5f7c70f3a7aae@hinterlands.org>
References: <c4059e461afcfa4d43796d144cc0601e@hinterlands.org>
 <b2b6fa0b8b218b904de5f7c70f3a7aae@hinterlands.org>
Message-ID: <20240917141204.zxvlym7pdd36xd3d@bloms.de>

Hello Martin,

On Tue, Sep 17, Martin A. Brooks wrote:

> On 2024-09-17 13:39, Martin A. Brooks wrote:
> > I am trying to use a URL rewriter program to redirect client requests
> > for certain URLs elsewhere.  I found this on github which seems to do
> > what I need:
> > 
> > https://github.com/rchunping/squid-urlrewrite
> > 
> > Running this on the command line as shown in the instructions appears to
> > show it doing as I ask.
> 
> Replying to my own email as I've found that this is in fact working provided
> the URLS are http and not https. Proxied HTTPS requests use CONNECT and, for
> whatever reason, this appears to bypass the url rewriter.  I'm looking in to
> it some more but, given that a very large part of the world is HTTPS these
> days, it may be that I need to look at another option for this requirement.
> 
> Any ideas still greatly appreciated.

https connections are encrypted between the client and the webserver, so
squid can not see the url.
You have to use ssl_bump (https://www.squid-cache.org/Doc/config/ssl_bump/) to
"open" the https connection to be able to do some url rewrites.
It is i kind of man in the middle attack https://en.wikipedia.org/wiki/Man-in-the-middle_attack .

-- 
Regards

  Dieter

--
I do not get viruses because I do not use MS software.
If you use Outlook then please do not put my email address in your
address-book so that WHEN you get a virus it won't use my address in the
>From field.


From rousskov at measurement-factory.com  Tue Sep 17 14:13:31 2024
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Tue, 17 Sep 2024 10:13:31 -0400
Subject: [squid-users] Squid appears to be ignoring url_rewrite_program
In-Reply-To: <b2b6fa0b8b218b904de5f7c70f3a7aae@hinterlands.org>
References: <c4059e461afcfa4d43796d144cc0601e@hinterlands.org>
 <b2b6fa0b8b218b904de5f7c70f3a7aae@hinterlands.org>
Message-ID: <cd01227c-cced-4450-8392-6e4c0e2ac2dc@measurement-factory.com>

On 2024-09-17 09:34, Martin A. Brooks wrote:
> Proxied HTTPS requests use 
> CONNECT and, for whatever reason, this appears to bypass the url 
> rewriter.

What makes you think that CONNECT requests are not sent to the rewriter? 
In my quick-and-dirty tests, Squid does send CONNECT request targets to 
the URL rewriter program and honors rewriter's rewrite-url=... response. 
For example, I see the new target logged to access.log.

Please keep in mind that changing CONNECT target has no effect on the 
received origin server response if the new target resolves to the same 
or equivalent IP address as the original target (and the port is 
unchanged): The origin server does not get a CONNECT request. It gets a 
TCP connection from Squid. The bytes on that connection come from the 
client (e.g., browser) rather than Squid! Those bytes contain original 
(not rewritten) TLS and HTTP details. By default, Squid works as a blind 
TCP tunnel when handling CONNECT requests.


> I'm looking in to it some more but, given that a very large 
> part of the world is HTTPS these days, it may be that I need to look at 
> another option for this requirement.

If your rewriter helper is using url=... instead of rewrite-url=... 
responses, then please note that popular browsers do not honor redirect 
responses to their HTTP CONNECT requests -- they have chosen not to 
trust the proxy to make those kind of decisions.

Most likely, if you need to redirect https traffic, you have to bump(*) 
it; if you cannot bump in your environment, then you cannot redirect 
https using an HTTP proxy.

(*) See ssl_bump directive and the following URL, but keep in mind that 
bumping is naturally full of bad side effects and corner cases:
https://wiki.squid-cache.org/Features/SslPeekAndSplice


HTH,

Alex.



From codemarauder at gmail.com  Tue Sep 17 16:04:24 2024
From: codemarauder at gmail.com (Nishant Sharma)
Date: Tue, 17 Sep 2024 21:34:24 +0530
Subject: [squid-users] Squid appears to be ignoring url_rewrite_program
In-Reply-To: <b2b6fa0b8b218b904de5f7c70f3a7aae@hinterlands.org>
References: <c4059e461afcfa4d43796d144cc0601e@hinterlands.org>
 <b2b6fa0b8b218b904de5f7c70f3a7aae@hinterlands.org>
Message-ID: <b8cc5631-804f-46a7-a55c-549130046b72@gmail.com>

Hi Martin,

On 17/09/24 19:04, Martin A. Brooks wrote:
> On 2024-09-17 13:39, Martin A. Brooks wrote:
>> I am trying to use a URL rewriter program to redirect client requests 
>> for certain URLs elsewhere.? I found this on github which seems to do 
>> what I need:
>>
>> https://github.com/rchunping/squid-urlrewrite
>>

You may want to use external_acl_helper instead of url_rewrite_program, 
to handle CONNECT requests gracefully and close the connection to 
blocked destinations instead of trying to re-direct. This wouldn't 
require SSL_bump.

Here is a reference implementation:

https://github.com/Hopbox/charcoal-helper

It requires a server to talk to for ALLOW or DENY decisions, which you 
can self-host.

(disclaimer: I am the author)

Regards,
Nishant


From codemarauder at gmail.com  Tue Sep 17 16:22:41 2024
From: codemarauder at gmail.com (Nishant Sharma)
Date: Tue, 17 Sep 2024 16:22:41 +0000
Subject: [squid-users] Squid appears to be ignoring url_rewrite_program
In-Reply-To: <b8cc5631-804f-46a7-a55c-549130046b72@gmail.com>
References: <c4059e461afcfa4d43796d144cc0601e@hinterlands.org>
 <b2b6fa0b8b218b904de5f7c70f3a7aae@hinterlands.org>
 <b8cc5631-804f-46a7-a55c-549130046b72@gmail.com>
Message-ID: <A782C71F-EF7D-49AE-A4DC-8917DD4878CA@gmail.com>

Sorry for jumping the gun. Just read your mail again.

You want to redirect and not block.

Regards,
Nishant

On 17 September 2024 4:04:24?pm UTC, Nishant Sharma <codemarauder at gmail.com> wrote:
>Hi Martin,
>
>On 17/09/24 19:04, Martin A. Brooks wrote:
>> On 2024-09-17 13:39, Martin A. Brooks wrote:
>>> I am trying to use a URL rewriter program to redirect client requests for certain URLs elsewhere.? I found this on github which seems to do what I need:
>>> 
>>> https://github.com/rchunping/squid-urlrewrite
>>> 
>
>You may want to use external_acl_helper instead of url_rewrite_program, to handle CONNECT requests gracefully and close the connection to blocked destinations instead of trying to re-direct. This wouldn't require SSL_bump.
>
>Here is a reference implementation:
>
>https://github.com/Hopbox/charcoal-helper
>
>It requires a server to talk to for ALLOW or DENY decisions, which you can self-host.
>
>(disclaimer: I am the author)
>
>Regards,
>Nishant
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240917/cced0902/attachment.htm>

From rousskov at measurement-factory.com  Tue Sep 17 16:53:43 2024
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Tue, 17 Sep 2024 12:53:43 -0400
Subject: [squid-users] Squid appears to be ignoring url_rewrite_program
In-Reply-To: <bf4f3579cc3273e9b19c1976bbd06f5b@hinterlands.org>
References: <c4059e461afcfa4d43796d144cc0601e@hinterlands.org>
 <b2b6fa0b8b218b904de5f7c70f3a7aae@hinterlands.org>
 <cd01227c-cced-4450-8392-6e4c0e2ac2dc@measurement-factory.com>
 <bf4f3579cc3273e9b19c1976bbd06f5b@hinterlands.org>
Message-ID: <2a1179bc-7d6f-42de-80e6-d7c2ad26a7b9@measurement-factory.com>

On 2024-09-17 10:43, Martin A. Brooks wrote:
> On 2024-09-17 15:13, Alex Rousskov wrote:
>> What makes you think that CONNECT requests are not sent to the 
>> rewriter? In my quick-and-dirty tests, Squid does send CONNECT request 
>> targets to the URL rewriter program and honors rewriter's 
>> rewrite-url=... response. For example, I see the new target logged to 
>> access.log.
> 
> Because the target is not being changed, whereas if I force http, it is.

OK, "target is not being changed" is not necessarily the same as "bypass 
the url rewriter" or "ignoring url_rewrite_program" or "not using the 
rewriter program"; there are still several open questions:

1. Does Squid ask rewriter to rewrite CONNECT target?
2. If yes, does rewriter actually rewrite CONNECT target?
3. If yes, does Squid use that rewritten CONNECT target?
4. If yes, why is using rewritten CONNECT target not enough
    (to accomplish whatever you are trying to accomplish)?

Please keep in mind that we know almost nothing about what symptoms you 
observe and what exactly you are trying to achieve...

Alex.



From vivek.saurabh at capitalone.com  Tue Sep 24 11:35:04 2024
From: vivek.saurabh at capitalone.com (Vivek Saurabh (CONT))
Date: Tue, 24 Sep 2024 12:35:04 +0100
Subject: [squid-users] Squid service not restarting properly
Message-ID: <CAAhV97WoUYT0t+HOB2rus0HSh99fUQ9kARVdMru5dJnX17YL2A@mail.gmail.com>

Hi Team,

I have installed squid -v6.9 but the service is not restarting using
the systemctl command. However, when I run this only with the execstart
line in the service script, it works fine. Can you please advise me on this
issue?

*Regards*,
Vivek Saurabh

______________________________________________________________________



The information contained in this e-mail may be confidential and/or proprietary to Capital One and/or its affiliates and may only be used solely in performance of work or services for Capital One. The information transmitted herewith is intended only for use by the individual or entity to which it is addressed. If the reader of this message is not the intended recipient, you are hereby notified that any review, retransmission, dissemination, distribution, copying or other use of, or taking of any action in reliance upon this information is strictly prohibited. If you have received this communication in error, please contact the sender and delete the material from your computer.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240924/de0c0fd9/attachment.htm>

From uhlar at fantomas.sk  Tue Sep 24 12:28:19 2024
From: uhlar at fantomas.sk (Matus UHLAR - fantomas)
Date: Tue, 24 Sep 2024 14:28:19 +0200
Subject: [squid-users] Squid service not restarting properly
In-Reply-To: <CAAhV97WoUYT0t+HOB2rus0HSh99fUQ9kARVdMru5dJnX17YL2A@mail.gmail.com>
References: <CAAhV97WoUYT0t+HOB2rus0HSh99fUQ9kARVdMru5dJnX17YL2A@mail.gmail.com>
Message-ID: <ZvKwY0HFhWRMtBj3@fantomas.sk>

On 24.09.24 12:35, Vivek Saurabh (CONT) wrote:
>I have installed squid -v6.9 but the service is not restarting using
>the systemctl command. However, when I run this only with the execstart
>line in the service script, it works fine. Can you please advise me on this
>issue?


This is too broad definition of a problem.
The main problem can be that squid has 30-seconds delay for shutdown 
(configurable by shutdown_lifetime) so its restart may take more than 30 
seconds.
system might not like this.

- what is the output of "systemctl status squid" ?
- what is in the squid's cache.log, any error?

- why do you restart squid service, isn't reload enough for you?

-- 
Matus UHLAR - fantomas, uhlar at fantomas.sk ; http://www.fantomas.sk/
Warning: I wish NOT to receive e-mail advertising to this address.
Varovanie: na tuto adresu chcem NEDOSTAVAT akukolvek reklamnu postu.
Boost your system's speed by 500% - DEL C:\WINDOWS$\*.*


From ngtech1ltd at gmail.com  Tue Sep 24 21:31:45 2024
From: ngtech1ltd at gmail.com (ngtech1ltd at gmail.com)
Date: Wed, 25 Sep 2024 00:31:45 +0300
Subject: [squid-users] Squid service not restarting properly
In-Reply-To: <CAAhV97WoUYT0t+HOB2rus0HSh99fUQ9kARVdMru5dJnX17YL2A@mail.gmail.com>
References: <CAAhV97WoUYT0t+HOB2rus0HSh99fUQ9kARVdMru5dJnX17YL2A@mail.gmail.com>
Message-ID: <32f701db0ec9$293583f0$7ba08bd0$@gmail.com>

Hey Vivek,

 

What OS are you using?

Did you installed squid from the OS repository or you self compiled it?

With more details we might be able to help you understand what to do.

 

Eliezer

 

From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of Vivek Saurabh (CONT)
Sent: Tuesday, September 24, 2024 2:35 PM
To: squid-users at lists.squid-cache.org
Subject: [squid-users] Squid service not restarting properly

 

Hi Team,

 

I have installed squid -v6.9 but the service is not restarting using the systemctl command. However, when I run this only with the execstart line in the service script, it works fine. Can you please advise me on this issue?




Regards, 

Vivek Saurabh

 

  _____  


 


The information contained in this e-mail may be confidential and/or proprietary to Capital One and/or its affiliates and may only be used solely in performance of work or services for Capital One. The information transmitted herewith is intended only for use by the individual or entity to which it is addressed. If the reader of this message is not the intended recipient, you are hereby notified that any review, retransmission, dissemination, distribution, copying or other use of, or taking of any action in reliance upon this information is strictly prohibited. If you have received this communication in error, please contact the sender and delete the material from your computer.






 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240925/8db7b7c6/attachment.htm>

From taku0919.taku at gmail.com  Wed Sep 25 05:57:11 2024
From: taku0919.taku at gmail.com (=?UTF-8?B?44Gr44Gw?=)
Date: Wed, 25 Sep 2024 14:57:11 +0900
Subject: [squid-users] Questions about Squid configuration
In-Reply-To: <0be99458-53b3-4f37-a86f-48f20c1abe9d@measurement-factory.com>
References: <CAK0+96e5Wpq3LpE4pf8k38nUpsmg+nyyocbOmnXS6=fqR+3C0g@mail.gmail.com>
 <add1024b-da05-46ba-9574-fd8048ec4fa1@measurement-factory.com>
 <CAK0+96eD+B2c_Fa3TpjE5E89WPsY-VaNadDSHK1ritgemkjrTw@mail.gmail.com>
 <c6889a69-d559-4180-ae27-5083e850329b@measurement-factory.com>
 <CAK0+96dnXhvu6LyCrULcWfO0uxAiDDKaMm3Kj6a2BkS69yR5Hw@mail.gmail.com>
 <0be99458-53b3-4f37-a86f-48f20c1abe9d@measurement-factory.com>
Message-ID: <CAK0+96fzSV2GC0b8ETW5NqnQru4=kRJHo9WR04kiUtwHmciCxg@mail.gmail.com>

Dear Alex.

Thank you for your advice!

?Do you run these "curl" commands on the same box that runs Squid?
No, we have a Squid validation environment on an AWS EC2 instance,
and the instance for Squid and the instance for running curl commands
are separate.

?However, you may want to double check whether rejecting requests with an
?empty Host header is actually necessary in your environment. Perhaps
?they can be considered valid (which is what Squid does by default)?
Thank you.
Indeed we do not want to explicitly reject empty Host headers, we just
want to reject malformed requests.
Therefore, we will not add an explicit rejection setting.

?I recommend deleting the above http_access rule. AFAICT, you only want
?to allow valid requests targeting specific/allowed sites. You already
?have other rules for that. The above "all HTTPS" rule is too broad and
?is seemingly unnecessary.

?I also recommend deleting a similar rule that allows all port-80
?requests, for similar reasons:
?     acl http_port port 80
?     http_access allow http_port


?If you think you do need those two broad rules, please clarify what you
?think you need them for. In other words, what tests would break if you
?remove them?
I did not need these rules, so I removed them and verified STEP 2
again and everything passed!
Thank you so much for your help!!

We then added the following settings that were in the existing Squid proxy
*The entire configuration is attached to this email.

# SSL_BUMP
acl allowed_https_sites ssl::server_name "/etc/squid/whitelist"
acl allowed_https_sites ssl::server_name "/etc/squid/whitelist_transparent"
acl allowed_https_sites ssl::server_name "/etc/squid/whitelist_https"
acl allowed_https_sites ssl::server_name
"/etc/squid/whitelist_transparent_https"
sslcrtd_program [sslcrtd-program-setting]

acl step1 at_step SslBump1
acl step2 at_step SslBump2
acl step3 at_step SslBump3

ssl_bump peek step1 all
ssl_bump peek step2 allowed_https_sites
ssl_bump splice step3 allowed_https_sites
ssl_bump terminate step2 all

Then I verified the 4 patterns again and all of them gave me 403 Forbidden...
Even the following pattern which is allowed in whitelist.
> 1. successful communication of a valid request to an allowed site
> [command]
> curl https://pypi.org/ -v --cacert squid.crt -k

After checking access-transparent.log and cache.log, it appears that
pypi.org is comparing inspections by IP and not by domain.
How do I modify the configuration to allow this correctly by domain?
Also, to begin with, these settings follow the existing squid proxy
created by my predecessor, so I don't know what they are for...
What are the disadvantages of removing these settings?

Thank you in advance.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: squid-transparent.conf
Type: application/octet-stream
Size: 4468 bytes
Desc: not available
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240925/9c7ef510/attachment.obj>

From vivek.saurabh at capitalone.com  Wed Sep 25 07:35:02 2024
From: vivek.saurabh at capitalone.com (Vivek Saurabh (CONT))
Date: Wed, 25 Sep 2024 08:35:02 +0100
Subject: [squid-users] [External Sender] Re: Squid service not
 restarting properly
In-Reply-To: <32f701db0ec9$293583f0$7ba08bd0$@gmail.com>
References: <CAAhV97WoUYT0t+HOB2rus0HSh99fUQ9kARVdMru5dJnX17YL2A@mail.gmail.com>
 <32f701db0ec9$293583f0$7ba08bd0$@gmail.com>
Message-ID: <CAAhV97Vgw8uY+XQ+chY=Sjoa9B4zqC9TwqqsyHy=kDcL_yd4+w@mail.gmail.com>

Hi  Eliezer,
Thank you for your reply. I am trying to install it in a RHEL8 server and I
have self compiled it taking reference from the doc -
https://wiki.squid-cache.org/KnowledgeBase/RedHat, however, this hasn't
been of much help to start the service properly. I downloaded the tar.gz
file from https://www.squid-cache.org/Versions/v6/squid-6.9.tar.gz and
placed it within the server, unzipped it and executed ./configure command
with the options.

*Regards*,
Vivek Saurabh
*Slack*:  #uk-monitoring
<https://urldefense.proofpoint.com/v2/url?u=https-3A__uk-2Dcapitalone.slack.com_messages_C1RKDQQP5_&d=DwMFaQ&c=pLULRYW__RtkwsQUPxJVDGboCTdgji3AcHNJU0BpTJE&r=jZzF16B18ffwFjVReS2YMC0P6NDjsTfMSyQrlO4-Xmv-UTpaabu3Aw621hS1I9de&m=cXBmr6YoL9IRSpKGQ3xf_iyupbval3SQ8WBOhiIZU2o&s=WRluoib3Nxx0CXtqWVFhzsJUHaHVbaaBZ4R-KJFLsws&e=>
*Confluence*: UK Hawkeye
<https://confluence.kdc.capitalone.com/display/UH/Creating+a+story+for+the+UK+Hawkeye+Team>


On Tue, Sep 24, 2024 at 10:32?PM <ngtech1ltd at gmail.com> wrote:

> Hey Vivek,
>
>
>
> What OS are you using?
>
> Did you installed squid from the OS repository or you self compiled it?
>
> With more details we might be able to help you understand what to do.
>
>
>
> Eliezer
>
>
>
> *From:* squid-users <squid-users-bounces at lists.squid-cache.org> *On
> Behalf Of *Vivek Saurabh (CONT)
> *Sent:* Tuesday, September 24, 2024 2:35 PM
> *To:* squid-users at lists.squid-cache.org
> *Subject:* [squid-users] Squid service not restarting properly
>
>
>
> Hi Team,
>
>
>
> I have installed squid -v6.9 but the service is not restarting using
> the systemctl command. However, when I run this only with the execstart
> line in the service script, it works fine. Can you please advise me on this
> issue?
>
>
> *Regards*,
>
> Vivek Saurabh
>
>
> ------------------------------
>
>
>
>
> The information contained in this e-mail may be confidential and/or
> proprietary to Capital One and/or its affiliates and may only be used
> solely in performance of work or services for Capital One. The information
> transmitted herewith is intended only for use by the individual or entity
> to which it is addressed. If the reader of this message is not the intended
> recipient, you are hereby notified that any review, retransmission,
> dissemination, distribution, copying or other use of, or taking of any
> action in reliance upon this information is strictly prohibited. If you
> have received this communication in error, please contact the sender and
> delete the material from your computer.
>
>
>
>
>
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
>
> https://urldefense.com/v3/__https://lists.squid-cache.org/listinfo/squid-users__;!!FrPt2g6CO4Wadw!MkvyR9hT6NSOIRFOnkZD3LD8RbHSgPfemWeANDkmF0c9K4FI5SqxO393msoOT6V_kV9Z1qpQkSusB65rRhYOp-7zrA$
>

______________________________________________________________________



The information contained in this e-mail may be confidential and/or proprietary to Capital One and/or its affiliates and may only be used solely in performance of work or services for Capital One. The information transmitted herewith is intended only for use by the individual or entity to which it is addressed. If the reader of this message is not the intended recipient, you are hereby notified that any review, retransmission, dissemination, distribution, copying or other use of, or taking of any action in reliance upon this information is strictly prohibited. If you have received this communication in error, please contact the sender and delete the material from your computer.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240925/d198232e/attachment.htm>

From ngtech1ltd at gmail.com  Wed Sep 25 12:40:44 2024
From: ngtech1ltd at gmail.com (NgTech LTD)
Date: Wed, 25 Sep 2024 15:40:44 +0300
Subject: [squid-users] [External Sender] Re: Squid service not
 restarting properly
In-Reply-To: <CAAhV97Vgw8uY+XQ+chY=Sjoa9B4zqC9TwqqsyHy=kDcL_yd4+w@mail.gmail.com>
References: <CAAhV97WoUYT0t+HOB2rus0HSh99fUQ9kARVdMru5dJnX17YL2A@mail.gmail.com>
 <32f701db0ec9$293583f0$7ba08bd0$@gmail.com>
 <CAAhV97Vgw8uY+XQ+chY=Sjoa9B4zqC9TwqqsyHy=kDcL_yd4+w@mail.gmail.com>
Message-ID: <CABA8h=SvPPpiRm2pfwrFNin4OHLsHeSq4BzX9fYMuJXGKud2oA@mail.gmail.com>

Hey Vivek,

I am maintaining the CentOS and other RPM based distribution RPM's.
The page you are looking for is:
Squid on CentOS | Squid Web Cache wiki (squid-cache.org)
<https://wiki.squid-cache.org/KnowledgeBase/CentOS>

if you need a rpm specifically For RHEL I will need to spin my VM for that
late on.
I believe that rocky and alma should be compatible to RHEL so you can try
the rocky or alma repositories I am publishing and then give us a feedback.
Take a peek at what Distributions I currently support:
Index of Repo (ngtech.co.il) <https://www.ngtech.co.il/repo/>

Specifically what you are probably looking or is:
Index of X86 64 (ngtech.co.il)
<https://www.ngtech.co.il/repo/rocky/8/x86_64/>

https://www.ngtech.co.il/repo/rocky/8/x86_64/squid-6.10-1.el8.x86_64.rpm
https://www.ngtech.co.il/repo/rocky/8/x86_64/squid-helpers-6.10-1.el8.x86_64.rpm

My RPM's is separated into two parts ie squid and squid-helpers and you
should probably install both.
You can download them and use dnf or yum localinstall
./squid-6.10-1.el8.x86_64.rpm ./squid-helpers-6.10-1.el8.x86_64.rpm

However just first on rhel 8 based distributions disable the squid module
so you would be able to install the packages without any hiccups.

Let me know if it resolved your issue (remember to backup the config and
cleanup the systemd and other squid related file before installing the
pacakges.

Yours,
Eliezer

On Wed, Sep 25, 2024 at 10:35?AM Vivek Saurabh (CONT) <
vivek.saurabh at capitalone.com> wrote:

> Hi  Eliezer,
> Thank you for your reply. I am trying to install it in a RHEL8 server and
> I have self compiled it taking reference from the doc -
> https://wiki.squid-cache.org/KnowledgeBase/RedHat, however, this hasn't
> been of much help to start the service properly. I downloaded the tar.gz
> file from https://www.squid-cache.org/Versions/v6/squid-6.9.tar.gz and
> placed it within the server, unzipped it and executed ./configure command
> with the options.
>
> *Regards*,
> Vivek Saurabh
> *Slack*:  #uk-monitoring
> <https://urldefense.proofpoint.com/v2/url?u=https-3A__uk-2Dcapitalone.slack.com_messages_C1RKDQQP5_&d=DwMFaQ&c=pLULRYW__RtkwsQUPxJVDGboCTdgji3AcHNJU0BpTJE&r=jZzF16B18ffwFjVReS2YMC0P6NDjsTfMSyQrlO4-Xmv-UTpaabu3Aw621hS1I9de&m=cXBmr6YoL9IRSpKGQ3xf_iyupbval3SQ8WBOhiIZU2o&s=WRluoib3Nxx0CXtqWVFhzsJUHaHVbaaBZ4R-KJFLsws&e=>
> *Confluence*: UK Hawkeye
> <https://confluence.kdc.capitalone.com/display/UH/Creating+a+story+for+the+UK+Hawkeye+Team>
>
>
> On Tue, Sep 24, 2024 at 10:32?PM <ngtech1ltd at gmail.com> wrote:
>
>> Hey Vivek,
>>
>>
>>
>> What OS are you using?
>>
>> Did you installed squid from the OS repository or you self compiled it?
>>
>> With more details we might be able to help you understand what to do.
>>
>>
>>
>> Eliezer
>>
>>
>>
>> *From:* squid-users <squid-users-bounces at lists.squid-cache.org> *On
>> Behalf Of *Vivek Saurabh (CONT)
>> *Sent:* Tuesday, September 24, 2024 2:35 PM
>> *To:* squid-users at lists.squid-cache.org
>> *Subject:* [squid-users] Squid service not restarting properly
>>
>>
>>
>> Hi Team,
>>
>>
>>
>> I have installed squid -v6.9 but the service is not restarting using
>> the systemctl command. However, when I run this only with the execstart
>> line in the service script, it works fine. Can you please advise me on this
>> issue?
>>
>>
>> *Regards*,
>>
>> Vivek Saurabh
>>
>>
>> ------------------------------
>>
>>
>>
>>
>> The information contained in this e-mail may be confidential and/or
>> proprietary to Capital One and/or its affiliates and may only be used
>> solely in performance of work or services for Capital One. The information
>> transmitted herewith is intended only for use by the individual or entity
>> to which it is addressed. If the reader of this message is not the intended
>> recipient, you are hereby notified that any review, retransmission,
>> dissemination, distribution, copying or other use of, or taking of any
>> action in reliance upon this information is strictly prohibited. If you
>> have received this communication in error, please contact the sender and
>> delete the material from your computer.
>>
>>
>>
>>
>>
>> _______________________________________________
>> squid-users mailing list
>> squid-users at lists.squid-cache.org
>>
>> https://urldefense.com/v3/__https://lists.squid-cache.org/listinfo/squid-users__;!!FrPt2g6CO4Wadw!MkvyR9hT6NSOIRFOnkZD3LD8RbHSgPfemWeANDkmF0c9K4FI5SqxO393msoOT6V_kV9Z1qpQkSusB65rRhYOp-7zrA$
>>
> ------------------------------
>
> The information contained in this e-mail may be confidential and/or
> proprietary to Capital One and/or its affiliates and may only be used
> solely in performance of work or services for Capital One. The information
> transmitted herewith is intended only for use by the individual or entity
> to which it is addressed. If the reader of this message is not the intended
> recipient, you are hereby notified that any review, retransmission,
> dissemination, distribution, copying or other use of, or taking of any
> action in reliance upon this information is strictly prohibited. If you
> have received this communication in error, please contact the sender and
> delete the material from your computer.
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240925/0d26767f/attachment.htm>

From luhliari at redhat.com  Wed Sep 25 22:59:56 2024
From: luhliari at redhat.com (Lubos Uhliarik)
Date: Thu, 26 Sep 2024 00:59:56 +0200
Subject: [squid-users] Webpage with Transfer-encoding:chunked header is not
 sent to the client properly
Message-ID: <CAMJdYByHM0gohzttkszA83epFYZMJiVwRxDUTcXR_sLs=GBBjQ@mail.gmail.com>

Dear Squid Community,

We started to experience regression behavior after
https://github.com/squid-cache/squid/security/advisories/GHSA-j83v-w3p4-5cqh
security fix. Some web pages with Transfer-enconding: chunked header
are not sent properly to the client after fixing the security issue
mentioned above. Has anyone experienced the same problem?

I filled a bug report and described the problem in detail here -
https://bugs.squid-cache.org/show_bug.cgi?id=5449

Thanks in advance for any thoughts.

Regards,

-- 
Lubo? Uhliarik



From vivek.saurabh at capitalone.com  Thu Sep 26 15:18:43 2024
From: vivek.saurabh at capitalone.com (Vivek Saurabh (CONT))
Date: Thu, 26 Sep 2024 16:18:43 +0100
Subject: [squid-users] [External Sender] Re: Squid service not
 restarting properly
In-Reply-To: <CABA8h=SvPPpiRm2pfwrFNin4OHLsHeSq4BzX9fYMuJXGKud2oA@mail.gmail.com>
References: <CAAhV97WoUYT0t+HOB2rus0HSh99fUQ9kARVdMru5dJnX17YL2A@mail.gmail.com>
 <32f701db0ec9$293583f0$7ba08bd0$@gmail.com>
 <CAAhV97Vgw8uY+XQ+chY=Sjoa9B4zqC9TwqqsyHy=kDcL_yd4+w@mail.gmail.com>
 <CABA8h=SvPPpiRm2pfwrFNin4OHLsHeSq4BzX9fYMuJXGKud2oA@mail.gmail.com>
Message-ID: <CAAhV97UbtBKyQsLXSP5ewRaZTXnKHHoSuMJ1SFm-EPbBQsq-Sg@mail.gmail.com>

Hi  Eliezer,

Thanks very much for your response. I was able to install squid-6.10
successfully but faced the same issue to restart the service. Our use case
is that we have a local user(apdpr01) and group (apache) to start the squid
service. Also, we have to ensure that our configs point to
/opt/apdpr01/squid. So I copied the file from /etc/squid/ to that location.
And now I can't start the service and facing the same issue which I
mentioned above.

*Regards*,
Vivek Saurabh
*Slack*:  #uk-monitoring
<https://urldefense.proofpoint.com/v2/url?u=https-3A__uk-2Dcapitalone.slack.com_messages_C1RKDQQP5_&d=DwMFaQ&c=pLULRYW__RtkwsQUPxJVDGboCTdgji3AcHNJU0BpTJE&r=jZzF16B18ffwFjVReS2YMC0P6NDjsTfMSyQrlO4-Xmv-UTpaabu3Aw621hS1I9de&m=cXBmr6YoL9IRSpKGQ3xf_iyupbval3SQ8WBOhiIZU2o&s=WRluoib3Nxx0CXtqWVFhzsJUHaHVbaaBZ4R-KJFLsws&e=>
*Confluence*: UK Hawkeye
<https://confluence.kdc.capitalone.com/display/UH/Creating+a+story+for+the+UK+Hawkeye+Team>


On Wed, Sep 25, 2024 at 1:41?PM NgTech LTD <ngtech1ltd at gmail.com> wrote:

> Hey Vivek,
>
> I am maintaining the CentOS and other RPM based distribution RPM's.
> The page you are looking for is:
> Squid on CentOS | Squid Web Cache wiki (squid-cache.org)
> <https://urldefense.com/v3/__https://wiki.squid-cache.org/KnowledgeBase/CentOS__;!!FrPt2g6CO4Wadw!M9-bJnHnfaKI-nSo2pFeKOEWEGIe5cO6rJdwymRTxIJ5KxtDEaZE53-1Av0gb9jBQE8cxRdSnGKkvdbII7Gt1I7tmw$>
>
> if you need a rpm specifically For RHEL I will need to spin my VM for that
> late on.
> I believe that rocky and alma should be compatible to RHEL so you can try
> the rocky or alma repositories I am publishing and then give us a feedback.
> Take a peek at what Distributions I currently support:
> Index of Repo (ngtech.co.il)
> <https://urldefense.com/v3/__https://www.ngtech.co.il/repo/__;!!FrPt2g6CO4Wadw!M9-bJnHnfaKI-nSo2pFeKOEWEGIe5cO6rJdwymRTxIJ5KxtDEaZE53-1Av0gb9jBQE8cxRdSnGKkvdbII7FugVHrLA$>
>
> Specifically what you are probably looking or is:
> Index of X86 64 (ngtech.co.il)
> <https://urldefense.com/v3/__https://www.ngtech.co.il/repo/rocky/8/x86_64/__;!!FrPt2g6CO4Wadw!M9-bJnHnfaKI-nSo2pFeKOEWEGIe5cO6rJdwymRTxIJ5KxtDEaZE53-1Av0gb9jBQE8cxRdSnGKkvdbII7E_Bz7nkg$>
>
> https://www.ngtech.co.il/repo/rocky/8/x86_64/squid-6.10-1.el8.x86_64.rpm
> <https://urldefense.com/v3/__https://www.ngtech.co.il/repo/rocky/8/x86_64/squid-6.10-1.el8.x86_64.rpm__;!!FrPt2g6CO4Wadw!M9-bJnHnfaKI-nSo2pFeKOEWEGIe5cO6rJdwymRTxIJ5KxtDEaZE53-1Av0gb9jBQE8cxRdSnGKkvdbII7H0qUML5w$>
>
> https://www.ngtech.co.il/repo/rocky/8/x86_64/squid-helpers-6.10-1.el8.x86_64.rpm
> <https://urldefense.com/v3/__https://www.ngtech.co.il/repo/rocky/8/x86_64/squid-helpers-6.10-1.el8.x86_64.rpm__;!!FrPt2g6CO4Wadw!M9-bJnHnfaKI-nSo2pFeKOEWEGIe5cO6rJdwymRTxIJ5KxtDEaZE53-1Av0gb9jBQE8cxRdSnGKkvdbII7HhNGmzVg$>
>
> My RPM's is separated into two parts ie squid and squid-helpers and you
> should probably install both.
> You can download them and use dnf or yum localinstall
> ./squid-6.10-1.el8.x86_64.rpm ./squid-helpers-6.10-1.el8.x86_64.rpm
>
> However just first on rhel 8 based distributions disable the squid module
> so you would be able to install the packages without any hiccups.
>
> Let me know if it resolved your issue (remember to backup the config and
> cleanup the systemd and other squid related file before installing the
> pacakges.
>
> Yours,
> Eliezer
>
> On Wed, Sep 25, 2024 at 10:35?AM Vivek Saurabh (CONT) <
> vivek.saurabh at capitalone.com> wrote:
>
>> Hi  Eliezer,
>> Thank you for your reply. I am trying to install it in a RHEL8 server and
>> I have self compiled it taking reference from the doc -
>> https://wiki.squid-cache.org/KnowledgeBase/RedHat
>> <https://urldefense.com/v3/__https://wiki.squid-cache.org/KnowledgeBase/RedHat__;!!FrPt2g6CO4Wadw!M9-bJnHnfaKI-nSo2pFeKOEWEGIe5cO6rJdwymRTxIJ5KxtDEaZE53-1Av0gb9jBQE8cxRdSnGKkvdbII7Ezrdysog$>,
>> however, this hasn't been of much help to start the service properly. I
>> downloaded the tar.gz file from
>> https://www.squid-cache.org/Versions/v6/squid-6.9.tar.gz
>> <https://urldefense.com/v3/__https://www.squid-cache.org/Versions/v6/squid-6.9.tar.gz__;!!FrPt2g6CO4Wadw!M9-bJnHnfaKI-nSo2pFeKOEWEGIe5cO6rJdwymRTxIJ5KxtDEaZE53-1Av0gb9jBQE8cxRdSnGKkvdbII7G3kpOihg$>
>> and placed it within the server, unzipped it and executed ./configure
>> command with the options.
>>
>> *Regards*,
>> Vivek Saurabh
>> *Slack*:  #uk-monitoring
>> <https://urldefense.proofpoint.com/v2/url?u=https-3A__uk-2Dcapitalone.slack.com_messages_C1RKDQQP5_&d=DwMFaQ&c=pLULRYW__RtkwsQUPxJVDGboCTdgji3AcHNJU0BpTJE&r=jZzF16B18ffwFjVReS2YMC0P6NDjsTfMSyQrlO4-Xmv-UTpaabu3Aw621hS1I9de&m=cXBmr6YoL9IRSpKGQ3xf_iyupbval3SQ8WBOhiIZU2o&s=WRluoib3Nxx0CXtqWVFhzsJUHaHVbaaBZ4R-KJFLsws&e=>
>> *Confluence*: UK Hawkeye
>> <https://confluence.kdc.capitalone.com/display/UH/Creating+a+story+for+the+UK+Hawkeye+Team>
>>
>>
>> On Tue, Sep 24, 2024 at 10:32?PM <ngtech1ltd at gmail.com> wrote:
>>
>>> Hey Vivek,
>>>
>>>
>>>
>>> What OS are you using?
>>>
>>> Did you installed squid from the OS repository or you self compiled it?
>>>
>>> With more details we might be able to help you understand what to do.
>>>
>>>
>>>
>>> Eliezer
>>>
>>>
>>>
>>> *From:* squid-users <squid-users-bounces at lists.squid-cache.org> *On
>>> Behalf Of *Vivek Saurabh (CONT)
>>> *Sent:* Tuesday, September 24, 2024 2:35 PM
>>> *To:* squid-users at lists.squid-cache.org
>>> *Subject:* [squid-users] Squid service not restarting properly
>>>
>>>
>>>
>>> Hi Team,
>>>
>>>
>>>
>>> I have installed squid -v6.9 but the service is not restarting using
>>> the systemctl command. However, when I run this only with the execstart
>>> line in the service script, it works fine. Can you please advise me on this
>>> issue?
>>>
>>>
>>> *Regards*,
>>>
>>> Vivek Saurabh
>>>
>>>
>>> ------------------------------
>>>
>>>
>>>
>>>
>>> The information contained in this e-mail may be confidential and/or
>>> proprietary to Capital One and/or its affiliates and may only be used
>>> solely in performance of work or services for Capital One. The information
>>> transmitted herewith is intended only for use by the individual or entity
>>> to which it is addressed. If the reader of this message is not the intended
>>> recipient, you are hereby notified that any review, retransmission,
>>> dissemination, distribution, copying or other use of, or taking of any
>>> action in reliance upon this information is strictly prohibited. If you
>>> have received this communication in error, please contact the sender and
>>> delete the material from your computer.
>>>
>>>
>>>
>>>
>>>
>>> _______________________________________________
>>> squid-users mailing list
>>> squid-users at lists.squid-cache.org
>>>
>>> https://urldefense.com/v3/__https://lists.squid-cache.org/listinfo/squid-users__;!!FrPt2g6CO4Wadw!MkvyR9hT6NSOIRFOnkZD3LD8RbHSgPfemWeANDkmF0c9K4FI5SqxO393msoOT6V_kV9Z1qpQkSusB65rRhYOp-7zrA$
>>>
>> ------------------------------
>>
>> The information contained in this e-mail may be confidential and/or
>> proprietary to Capital One and/or its affiliates and may only be used
>> solely in performance of work or services for Capital One. The information
>> transmitted herewith is intended only for use by the individual or entity
>> to which it is addressed. If the reader of this message is not the intended
>> recipient, you are hereby notified that any review, retransmission,
>> dissemination, distribution, copying or other use of, or taking of any
>> action in reliance upon this information is strictly prohibited. If you
>> have received this communication in error, please contact the sender and
>> delete the material from your computer.
>>
>>
>>
>>
>> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
>
> https://urldefense.com/v3/__https://lists.squid-cache.org/listinfo/squid-users__;!!FrPt2g6CO4Wadw!M9-bJnHnfaKI-nSo2pFeKOEWEGIe5cO6rJdwymRTxIJ5KxtDEaZE53-1Av0gb9jBQE8cxRdSnGKkvdbII7HlQVFuwQ$
>

______________________________________________________________________



The information contained in this e-mail may be confidential and/or proprietary to Capital One and/or its affiliates and may only be used solely in performance of work or services for Capital One. The information transmitted herewith is intended only for use by the individual or entity to which it is addressed. If the reader of this message is not the intended recipient, you are hereby notified that any review, retransmission, dissemination, distribution, copying or other use of, or taking of any action in reliance upon this information is strictly prohibited. If you have received this communication in error, please contact the sender and delete the material from your computer.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240926/c05de66e/attachment.htm>

From vivek.saurabh at capitalone.com  Fri Sep 27 11:50:35 2024
From: vivek.saurabh at capitalone.com (Vivek Saurabh (CONT))
Date: Fri, 27 Sep 2024 12:50:35 +0100
Subject: [squid-users] [External Sender] Re: Squid service not
 restarting properly
In-Reply-To: <CAAhV97UbtBKyQsLXSP5ewRaZTXnKHHoSuMJ1SFm-EPbBQsq-Sg@mail.gmail.com>
References: <CAAhV97WoUYT0t+HOB2rus0HSh99fUQ9kARVdMru5dJnX17YL2A@mail.gmail.com>
 <32f701db0ec9$293583f0$7ba08bd0$@gmail.com>
 <CAAhV97Vgw8uY+XQ+chY=Sjoa9B4zqC9TwqqsyHy=kDcL_yd4+w@mail.gmail.com>
 <CABA8h=SvPPpiRm2pfwrFNin4OHLsHeSq4BzX9fYMuJXGKud2oA@mail.gmail.com>
 <CAAhV97UbtBKyQsLXSP5ewRaZTXnKHHoSuMJ1SFm-EPbBQsq-Sg@mail.gmail.com>
Message-ID: <CAAhV97XygcFQJ2JrSqb9of8rW3bF1f-fAMcb7nP77LnRaW9Log@mail.gmail.com>

Hi NgTech,

I can restart the service wuth user and group being root. However, while I
try to start using user as apdpr01 and group as root, it is getting timed
out and not giving any errors. Can you please advise on this?

Also, what the ./configure structure should be to compile the binary?

*Regards*,
Vivek Saurabh
*Slack*:  #uk-monitoring
<https://urldefense.proofpoint.com/v2/url?u=https-3A__uk-2Dcapitalone.slack.com_messages_C1RKDQQP5_&d=DwMFaQ&c=pLULRYW__RtkwsQUPxJVDGboCTdgji3AcHNJU0BpTJE&r=jZzF16B18ffwFjVReS2YMC0P6NDjsTfMSyQrlO4-Xmv-UTpaabu3Aw621hS1I9de&m=cXBmr6YoL9IRSpKGQ3xf_iyupbval3SQ8WBOhiIZU2o&s=WRluoib3Nxx0CXtqWVFhzsJUHaHVbaaBZ4R-KJFLsws&e=>
*Confluence*: UK Hawkeye
<https://confluence.kdc.capitalone.com/display/UH/Creating+a+story+for+the+UK+Hawkeye+Team>


On Thu, Sep 26, 2024 at 4:18?PM Vivek Saurabh (CONT) <
vivek.saurabh at capitalone.com> wrote:

> Hi  Eliezer,
>
> Thanks very much for your response. I was able to install squid-6.10
> successfully but faced the same issue to restart the service. Our use case
> is that we have a local user(apdpr01) and group (apache) to start the squid
> service. Also, we have to ensure that our configs point to
> /opt/apdpr01/squid. So I copied the file from /etc/squid/ to that location.
> And now I can't start the service and facing the same issue which I
> mentioned above.
>
> *Regards*,
> Vivek Saurabh
> *Slack*:  #uk-monitoring
> <https://urldefense.proofpoint.com/v2/url?u=https-3A__uk-2Dcapitalone.slack.com_messages_C1RKDQQP5_&d=DwMFaQ&c=pLULRYW__RtkwsQUPxJVDGboCTdgji3AcHNJU0BpTJE&r=jZzF16B18ffwFjVReS2YMC0P6NDjsTfMSyQrlO4-Xmv-UTpaabu3Aw621hS1I9de&m=cXBmr6YoL9IRSpKGQ3xf_iyupbval3SQ8WBOhiIZU2o&s=WRluoib3Nxx0CXtqWVFhzsJUHaHVbaaBZ4R-KJFLsws&e=>
> *Confluence*: UK Hawkeye
> <https://confluence.kdc.capitalone.com/display/UH/Creating+a+story+for+the+UK+Hawkeye+Team>
>
>
> On Wed, Sep 25, 2024 at 1:41?PM NgTech LTD <ngtech1ltd at gmail.com> wrote:
>
>> Hey Vivek,
>>
>> I am maintaining the CentOS and other RPM based distribution RPM's.
>> The page you are looking for is:
>> Squid on CentOS | Squid Web Cache wiki (squid-cache.org)
>> <https://urldefense.com/v3/__https://wiki.squid-cache.org/KnowledgeBase/CentOS__;!!FrPt2g6CO4Wadw!M9-bJnHnfaKI-nSo2pFeKOEWEGIe5cO6rJdwymRTxIJ5KxtDEaZE53-1Av0gb9jBQE8cxRdSnGKkvdbII7Gt1I7tmw$>
>>
>> if you need a rpm specifically For RHEL I will need to spin my VM for
>> that late on.
>> I believe that rocky and alma should be compatible to RHEL so you can try
>> the rocky or alma repositories I am publishing and then give us a feedback.
>> Take a peek at what Distributions I currently support:
>> Index of Repo (ngtech.co.il)
>> <https://urldefense.com/v3/__https://www.ngtech.co.il/repo/__;!!FrPt2g6CO4Wadw!M9-bJnHnfaKI-nSo2pFeKOEWEGIe5cO6rJdwymRTxIJ5KxtDEaZE53-1Av0gb9jBQE8cxRdSnGKkvdbII7FugVHrLA$>
>>
>> Specifically what you are probably looking or is:
>> Index of X86 64 (ngtech.co.il)
>> <https://urldefense.com/v3/__https://www.ngtech.co.il/repo/rocky/8/x86_64/__;!!FrPt2g6CO4Wadw!M9-bJnHnfaKI-nSo2pFeKOEWEGIe5cO6rJdwymRTxIJ5KxtDEaZE53-1Av0gb9jBQE8cxRdSnGKkvdbII7E_Bz7nkg$>
>>
>> https://www.ngtech.co.il/repo/rocky/8/x86_64/squid-6.10-1.el8.x86_64.rpm
>> <https://urldefense.com/v3/__https://www.ngtech.co.il/repo/rocky/8/x86_64/squid-6.10-1.el8.x86_64.rpm__;!!FrPt2g6CO4Wadw!M9-bJnHnfaKI-nSo2pFeKOEWEGIe5cO6rJdwymRTxIJ5KxtDEaZE53-1Av0gb9jBQE8cxRdSnGKkvdbII7H0qUML5w$>
>>
>> https://www.ngtech.co.il/repo/rocky/8/x86_64/squid-helpers-6.10-1.el8.x86_64.rpm
>> <https://urldefense.com/v3/__https://www.ngtech.co.il/repo/rocky/8/x86_64/squid-helpers-6.10-1.el8.x86_64.rpm__;!!FrPt2g6CO4Wadw!M9-bJnHnfaKI-nSo2pFeKOEWEGIe5cO6rJdwymRTxIJ5KxtDEaZE53-1Av0gb9jBQE8cxRdSnGKkvdbII7HhNGmzVg$>
>>
>> My RPM's is separated into two parts ie squid and squid-helpers and you
>> should probably install both.
>> You can download them and use dnf or yum localinstall
>> ./squid-6.10-1.el8.x86_64.rpm ./squid-helpers-6.10-1.el8.x86_64.rpm
>>
>> However just first on rhel 8 based distributions disable the squid module
>> so you would be able to install the packages without any hiccups.
>>
>> Let me know if it resolved your issue (remember to backup the config and
>> cleanup the systemd and other squid related file before installing the
>> pacakges.
>>
>> Yours,
>> Eliezer
>>
>> On Wed, Sep 25, 2024 at 10:35?AM Vivek Saurabh (CONT) <
>> vivek.saurabh at capitalone.com> wrote:
>>
>>> Hi  Eliezer,
>>> Thank you for your reply. I am trying to install it in a RHEL8 server
>>> and I have self compiled it taking reference from the doc -
>>> https://wiki.squid-cache.org/KnowledgeBase/RedHat
>>> <https://urldefense.com/v3/__https://wiki.squid-cache.org/KnowledgeBase/RedHat__;!!FrPt2g6CO4Wadw!M9-bJnHnfaKI-nSo2pFeKOEWEGIe5cO6rJdwymRTxIJ5KxtDEaZE53-1Av0gb9jBQE8cxRdSnGKkvdbII7Ezrdysog$>,
>>> however, this hasn't been of much help to start the service properly. I
>>> downloaded the tar.gz file from
>>> https://www.squid-cache.org/Versions/v6/squid-6.9.tar.gz
>>> <https://urldefense.com/v3/__https://www.squid-cache.org/Versions/v6/squid-6.9.tar.gz__;!!FrPt2g6CO4Wadw!M9-bJnHnfaKI-nSo2pFeKOEWEGIe5cO6rJdwymRTxIJ5KxtDEaZE53-1Av0gb9jBQE8cxRdSnGKkvdbII7G3kpOihg$>
>>> and placed it within the server, unzipped it and executed ./configure
>>> command with the options.
>>>
>>> *Regards*,
>>> Vivek Saurabh
>>> *Slack*:  #uk-monitoring
>>> <https://urldefense.proofpoint.com/v2/url?u=https-3A__uk-2Dcapitalone.slack.com_messages_C1RKDQQP5_&d=DwMFaQ&c=pLULRYW__RtkwsQUPxJVDGboCTdgji3AcHNJU0BpTJE&r=jZzF16B18ffwFjVReS2YMC0P6NDjsTfMSyQrlO4-Xmv-UTpaabu3Aw621hS1I9de&m=cXBmr6YoL9IRSpKGQ3xf_iyupbval3SQ8WBOhiIZU2o&s=WRluoib3Nxx0CXtqWVFhzsJUHaHVbaaBZ4R-KJFLsws&e=>
>>> *Confluence*: UK Hawkeye
>>> <https://confluence.kdc.capitalone.com/display/UH/Creating+a+story+for+the+UK+Hawkeye+Team>
>>>
>>>
>>> On Tue, Sep 24, 2024 at 10:32?PM <ngtech1ltd at gmail.com> wrote:
>>>
>>>> Hey Vivek,
>>>>
>>>>
>>>>
>>>> What OS are you using?
>>>>
>>>> Did you installed squid from the OS repository or you self compiled it?
>>>>
>>>> With more details we might be able to help you understand what to do.
>>>>
>>>>
>>>>
>>>> Eliezer
>>>>
>>>>
>>>>
>>>> *From:* squid-users <squid-users-bounces at lists.squid-cache.org> *On
>>>> Behalf Of *Vivek Saurabh (CONT)
>>>> *Sent:* Tuesday, September 24, 2024 2:35 PM
>>>> *To:* squid-users at lists.squid-cache.org
>>>> *Subject:* [squid-users] Squid service not restarting properly
>>>>
>>>>
>>>>
>>>> Hi Team,
>>>>
>>>>
>>>>
>>>> I have installed squid -v6.9 but the service is not restarting using
>>>> the systemctl command. However, when I run this only with the execstart
>>>> line in the service script, it works fine. Can you please advise me on this
>>>> issue?
>>>>
>>>>
>>>> *Regards*,
>>>>
>>>> Vivek Saurabh
>>>>
>>>>
>>>> ------------------------------
>>>>
>>>>
>>>>
>>>>
>>>> The information contained in this e-mail may be confidential and/or
>>>> proprietary to Capital One and/or its affiliates and may only be used
>>>> solely in performance of work or services for Capital One. The information
>>>> transmitted herewith is intended only for use by the individual or entity
>>>> to which it is addressed. If the reader of this message is not the intended
>>>> recipient, you are hereby notified that any review, retransmission,
>>>> dissemination, distribution, copying or other use of, or taking of any
>>>> action in reliance upon this information is strictly prohibited. If you
>>>> have received this communication in error, please contact the sender and
>>>> delete the material from your computer.
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> squid-users mailing list
>>>> squid-users at lists.squid-cache.org
>>>>
>>>> https://urldefense.com/v3/__https://lists.squid-cache.org/listinfo/squid-users__;!!FrPt2g6CO4Wadw!MkvyR9hT6NSOIRFOnkZD3LD8RbHSgPfemWeANDkmF0c9K4FI5SqxO393msoOT6V_kV9Z1qpQkSusB65rRhYOp-7zrA$
>>>>
>>> ------------------------------
>>>
>>> The information contained in this e-mail may be confidential and/or
>>> proprietary to Capital One and/or its affiliates and may only be used
>>> solely in performance of work or services for Capital One. The information
>>> transmitted herewith is intended only for use by the individual or entity
>>> to which it is addressed. If the reader of this message is not the intended
>>> recipient, you are hereby notified that any review, retransmission,
>>> dissemination, distribution, copying or other use of, or taking of any
>>> action in reliance upon this information is strictly prohibited. If you
>>> have received this communication in error, please contact the sender and
>>> delete the material from your computer.
>>>
>>>
>>>
>>>
>>> _______________________________________________
>> squid-users mailing list
>> squid-users at lists.squid-cache.org
>>
>> https://urldefense.com/v3/__https://lists.squid-cache.org/listinfo/squid-users__;!!FrPt2g6CO4Wadw!M9-bJnHnfaKI-nSo2pFeKOEWEGIe5cO6rJdwymRTxIJ5KxtDEaZE53-1Av0gb9jBQE8cxRdSnGKkvdbII7HlQVFuwQ$
>>
>

______________________________________________________________________



The information contained in this e-mail may be confidential and/or proprietary to Capital One and/or its affiliates and may only be used solely in performance of work or services for Capital One. The information transmitted herewith is intended only for use by the individual or entity to which it is addressed. If the reader of this message is not the intended recipient, you are hereby notified that any review, retransmission, dissemination, distribution, copying or other use of, or taking of any action in reliance upon this information is strictly prohibited. If you have received this communication in error, please contact the sender and delete the material from your computer.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240927/710bc00f/attachment.htm>

From uhlar at fantomas.sk  Fri Sep 27 11:57:33 2024
From: uhlar at fantomas.sk (Matus UHLAR - fantomas)
Date: Fri, 27 Sep 2024 13:57:33 +0200
Subject: [squid-users] [External Sender] Re: Squid service not
 restarting properly
In-Reply-To: <CAAhV97XygcFQJ2JrSqb9of8rW3bF1f-fAMcb7nP77LnRaW9Log@mail.gmail.com>
References: <CAAhV97WoUYT0t+HOB2rus0HSh99fUQ9kARVdMru5dJnX17YL2A@mail.gmail.com>
 <32f701db0ec9$293583f0$7ba08bd0$@gmail.com>
 <CAAhV97Vgw8uY+XQ+chY=Sjoa9B4zqC9TwqqsyHy=kDcL_yd4+w@mail.gmail.com>
 <CABA8h=SvPPpiRm2pfwrFNin4OHLsHeSq4BzX9fYMuJXGKud2oA@mail.gmail.com>
 <CAAhV97UbtBKyQsLXSP5ewRaZTXnKHHoSuMJ1SFm-EPbBQsq-Sg@mail.gmail.com>
 <CAAhV97XygcFQJ2JrSqb9of8rW3bF1f-fAMcb7nP77LnRaW9Log@mail.gmail.com>
Message-ID: <ZvadrTH3_Xd7G__c@fantomas.sk>

On 27.09.24 12:50, Vivek Saurabh (CONT) wrote:
>I can restart the service wuth user and group being root. However, while I
>try to start using user as apdpr01 and group as root, it is getting timed
>out and not giving any errors. Can you please advise on this?

do you use different configs?

Because squid can use configuration files that have permissions available 
under root user, not under other users.
The same applies for logs and cache. 

-- 
Matus UHLAR - fantomas, uhlar at fantomas.sk ; http://www.fantomas.sk/
Warning: I wish NOT to receive e-mail advertising to this address.
Varovanie: na tuto adresu chcem NEDOSTAVAT akukolvek reklamnu postu.
WinError #99999: Out of error messages.


From ml at netfence.it  Sun Sep 29 16:40:41 2024
From: ml at netfence.it (Andrea Venturoli)
Date: Sun, 29 Sep 2024 18:40:41 +0200
Subject: [squid-users] Squid + ecap + clamav
Message-ID: <55796866-6d4e-4652-892b-ce5422449b76@netfence.it>

Hello.

I've been using Squid + C-icap + SquidClamAV + ClamAV for a long time in 
order to filter web content.
However this has lately been troublesome, leading to occasional 
hard-to-diagnose temporary failures ("ICAP protocol error").



So I'm pondering moving from ICAP to eCAP, like described here:
> https://wiki.squid-cache.org/ConfigExamples/ContentAdaptation/EcapForClamav

According to that page there are no disadvantages wrt to the previous 
config.

However, I tried compiling the eCAP ClamAV adapter, but the code looks 
very outdated WRT to C++ standards (but I can fix that) and possibly 
also to ClamAV (giving compiling errors due to missing symbols).

Is this info still relevant?
Is this something worth investigating or is it outdated/deprecated?

  bye & Thanks
	av.


From vivek.saurabh at capitalone.com  Mon Sep 30 09:06:45 2024
From: vivek.saurabh at capitalone.com (Vivek Saurabh (CONT))
Date: Mon, 30 Sep 2024 10:06:45 +0100
Subject: [squid-users] [External Sender] Re: Squid service not
 restarting properly
In-Reply-To: <ZvadrTH3_Xd7G__c@fantomas.sk>
References: <CAAhV97WoUYT0t+HOB2rus0HSh99fUQ9kARVdMru5dJnX17YL2A@mail.gmail.com>
 <32f701db0ec9$293583f0$7ba08bd0$@gmail.com>
 <CAAhV97Vgw8uY+XQ+chY=Sjoa9B4zqC9TwqqsyHy=kDcL_yd4+w@mail.gmail.com>
 <CABA8h=SvPPpiRm2pfwrFNin4OHLsHeSq4BzX9fYMuJXGKud2oA@mail.gmail.com>
 <CAAhV97UbtBKyQsLXSP5ewRaZTXnKHHoSuMJ1SFm-EPbBQsq-Sg@mail.gmail.com>
 <CAAhV97XygcFQJ2JrSqb9of8rW3bF1f-fAMcb7nP77LnRaW9Log@mail.gmail.com>
 <ZvadrTH3_Xd7G__c@fantomas.sk>
Message-ID: <CAAhV97UfMy4RWMHAnb_nLr-j0OW8trhjjvV=t8X-TKopBVygvA@mail.gmail.com>

Hi Matus,

I had my squid service running earlier with the same local user (apdpr010
and group (apache) when I had the squid-4.15 version installed, so I was
wondering what could be causing the issue with 6.10. We have our squid
configs at /opt/apdpr01/squid/.

*Regards*,
Vivek Saurabh
*Slack*:  #uk-monitoring
<https://urldefense.proofpoint.com/v2/url?u=https-3A__uk-2Dcapitalone.slack.com_messages_C1RKDQQP5_&d=DwMFaQ&c=pLULRYW__RtkwsQUPxJVDGboCTdgji3AcHNJU0BpTJE&r=jZzF16B18ffwFjVReS2YMC0P6NDjsTfMSyQrlO4-Xmv-UTpaabu3Aw621hS1I9de&m=cXBmr6YoL9IRSpKGQ3xf_iyupbval3SQ8WBOhiIZU2o&s=WRluoib3Nxx0CXtqWVFhzsJUHaHVbaaBZ4R-KJFLsws&e=>
*Confluence*: UK Hawkeye
<https://confluence.kdc.capitalone.com/display/UH/Creating+a+story+for+the+UK+Hawkeye+Team>


On Fri, Sep 27, 2024 at 12:57?PM Matus UHLAR - fantomas <uhlar at fantomas.sk>
wrote:

> On 27.09.24 12:50, Vivek Saurabh (CONT) wrote:
> >I can restart the service wuth user and group being root. However, while I
> >try to start using user as apdpr01 and group as root, it is getting timed
> >out and not giving any errors. Can you please advise on this?
>
> do you use different configs?
>
> Because squid can use configuration files that have permissions available
> under root user, not under other users.
> The same applies for logs and cache.
>
> --
> Matus UHLAR - fantomas, uhlar at fantomas.sk ;
> https://urldefense.com/v3/__http://www.fantomas.sk/__;!!FrPt2g6CO4Wadw!OepUmPYwX532rCZjBOJdsU-0_yoBPlWhiCmdqIb-ZX7xo6rAwoq2E8D7nULYChxZ5MAZQV37rawQlCMxVs9PAGk$
> Warning: I wish NOT to receive e-mail advertising to this address.
> Varovanie: na tuto adresu chcem NEDOSTAVAT akukolvek reklamnu postu.
> WinError #99999: Out of error messages.
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
>
> https://urldefense.com/v3/__https://lists.squid-cache.org/listinfo/squid-users__;!!FrPt2g6CO4Wadw!OepUmPYwX532rCZjBOJdsU-0_yoBPlWhiCmdqIb-ZX7xo6rAwoq2E8D7nULYChxZ5MAZQV37rawQlCMxCOu17lE$
>

______________________________________________________________________



The information contained in this e-mail may be confidential and/or proprietary to Capital One and/or its affiliates and may only be used solely in performance of work or services for Capital One. The information transmitted herewith is intended only for use by the individual or entity to which it is addressed. If the reader of this message is not the intended recipient, you are hereby notified that any review, retransmission, dissemination, distribution, copying or other use of, or taking of any action in reliance upon this information is strictly prohibited. If you have received this communication in error, please contact the sender and delete the material from your computer.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240930/606a5616/attachment.htm>

From squid3 at treenet.co.nz  Mon Sep 30 09:40:41 2024
From: squid3 at treenet.co.nz (Amos Jeffries)
Date: Mon, 30 Sep 2024 22:40:41 +1300
Subject: [squid-users] [External Sender] Re: Squid service not
 restarting properly
In-Reply-To: <CAAhV97XygcFQJ2JrSqb9of8rW3bF1f-fAMcb7nP77LnRaW9Log@mail.gmail.com>
References: <CAAhV97WoUYT0t+HOB2rus0HSh99fUQ9kARVdMru5dJnX17YL2A@mail.gmail.com>
 <32f701db0ec9$293583f0$7ba08bd0$@gmail.com>
 <CAAhV97Vgw8uY+XQ+chY=Sjoa9B4zqC9TwqqsyHy=kDcL_yd4+w@mail.gmail.com>
 <CABA8h=SvPPpiRm2pfwrFNin4OHLsHeSq4BzX9fYMuJXGKud2oA@mail.gmail.com>
 <CAAhV97UbtBKyQsLXSP5ewRaZTXnKHHoSuMJ1SFm-EPbBQsq-Sg@mail.gmail.com>
 <CAAhV97XygcFQJ2JrSqb9of8rW3bF1f-fAMcb7nP77LnRaW9Log@mail.gmail.com>
Message-ID: <2fe1b9c0-161e-4d18-9c3c-03092d782f40@treenet.co.nz>

To answer your question specifically..

On 27/09/24 23:50, Vivek Saurabh (CONT) wrote:
> Hi?NgTech,
> 
> I can restart the service?wuth user and group being root. However, while 
> I try to start using user as apdpr01 and group as root, it is 
> getting?timed out and not giving any errors. Can you please advise on this?

Squid low-level processes MUST NOT be given root access.

Your old user/group were valid and should still be working same as with 
any older Squid version.


> 
> Also,?what the ./configure structure should be to compile the binary?
> 


   ./configure --with-default-user=apdpr01   [1]

With the above build you can remove any "cache_effective_user apdpr01" 
lines from squid.conf.

group does not matter (much), so long as that user (apdpr01) is a member 
of the group according to the OS.

The OS will auto-assign the default group of user (apdpr01) to Squid 
processes, **unless** your squid.conf indicates a specific one such as:
   cache_effective_group apache


What you should expect to see is a single "squid" process running as 
root (this is the master one controlled by "service squid ...").
Its child processes should all have your custom user/group.


Things to check:

  * Any important looking messages from:
       squid -k parse


  * Does running squid manually work properly?
      sudo squid

   - If not, what does cache.log say about why it halted?


  * Do you have a "squid.service" installed properly with systemd ?

   - does it match the one we publish for Squid v6?
  
<https://github.com/squid-cache/squid/blob/v6/tools/systemd/squid.service>

   - are the file paths listed there correct for where your Squid got 
installed to?



[1] other options may be needed, I do not know of specifically right now.

HTH
Amos



From alexis.daveau44 at gmail.com  Mon Sep 30 13:08:53 2024
From: alexis.daveau44 at gmail.com (Alexis DAVEAU)
Date: Mon, 30 Sep 2024 15:08:53 +0200
Subject: [squid-users] Issues with Squid Listening on 254 IP Addresses
Message-ID: <CA+KaO5oUV8rQM6W-JN4xTAnRApLj0uBNLmiw7zzm6QyTtXyRuw@mail.gmail.com>

Hello,

I need Squid to handle multiple IP addresses (more than 128), each bound to
port 3128, with different users authenticated and assigned to specific IP
addresses for outgoing traffic. However, I?ve encountered a limitation on
the number of IP addresses/ports that Squid can listen on.


Example configuration:

http_port 192.168.1.1:3128
http_port 192.168.1.2:3128
[...]
http_port 192.168.1.254:3128

auth_param basic program /usr/lib/squid/basic_ncsa_auth
/etc/squid/squid_passwd
auth_param basic children 5
auth_param basic realm Squid_Proxy
auth_param basic casesensitive off
shutdown_lifetime 1 seconds

acl user1 proxy_auth user1
acl user2 proxy_auth user2
[...]
acl user254 proxy_auth user254

acl ip_192_168_1_1 localip 192.168.1.1
acl ip_192_168_1_2 localip 192.168.1.2
[...]
acl ip_192_168_1_254 localip 192.168.1.254

tcp_outgoing_address 192.168.1.1 user1
tcp_outgoing_address 192.168.1.2 user2
[...]
tcp_outgoing_address 192.168.1.254 user254

http_access allow user1 ip_192_168_1_1
http_access allow user2 ip_192_168_1_2
[...]
http_access allow user254 ip_192_168_1_254

http_access deny all


Compilation Attempts:
Recompiling using dpkg-buildpackage with the CXXFLAGS:

sudo apt-get build-dep squid
apt-get source squid
cd squid-*
export CXXFLAGS="-DMAXTCPLISTENPORTS=254"
dpkg-buildpackage -us -uc
sudo dpkg -i ../squid_5.2-1ubuntu4_amd64.deb
../squid-common_5.2-1ubuntu4_all.deb

However, when I run squid -v, the CXXFLAGS="-DMAXTCPLISTENPORTS=254" flag
does not appear in the compiled version. This makes me question if the
custom flag is even applied.

Compiling manually with make:

wget http://www.squid-cache.org/Versions/v5/squid-5.2.tar.gz
tar -xzf squid-5.2.tar.gz
cd squid-5.2
export CXXFLAGS="-DMAXTCPLISTENPORTS=254"
./configure --prefix=/usr --localstatedir=/var --libexecdir=/usr/lib/squid
--datadir=/usr/share/squid \
--sysconfdir=/etc/squid --with-logdir=/var/log/squid
--with-pidfile=/var/run/squid.pid \
--enable-ssl --enable-ssl-crtd --enable-auth --enable-cache-digests \
--enable-removal-policies="lru,heap" --enable-follow-x-forwarded-for
make
sudo make install
But again, after running squid -v, the custom flag doesn't appear, and the
limit for the number of listening IP addresses is still in place.

I?ve tested with various versions of Squid, ranging from 4.8 to 5.9, but
none of them seem to apply the custom flag for increasing the number of
listening addresses/ports.

Questions:
How can I confirm that Squid is applying the MAXTCPLISTENPORTS value? Is
there a way to force Squid to recognize this parameter?
Is there an alternative method to configure Squid to handle 254 IP
addresses without recompiling? Am I missing a critical step in the build
process?
Do you have any recommendations to optimize the configuration for managing
an entire /24 prefix with 254 addresses?
Any advice or suggestions would be greatly appreciated! I?ve done extensive
research on the issue, but I haven?t found a solution yet.

Thanks in advance for your help!

Best regards,
Alexis
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240930/954aaf18/attachment.htm>

From vivek.saurabh at capitalone.com  Mon Sep 30 13:22:42 2024
From: vivek.saurabh at capitalone.com (Vivek Saurabh (CONT))
Date: Mon, 30 Sep 2024 14:22:42 +0100
Subject: [squid-users] [External Sender] Re: Squid service not
 restarting properly
In-Reply-To: <ZvadrTH3_Xd7G__c@fantomas.sk>
References: <CAAhV97WoUYT0t+HOB2rus0HSh99fUQ9kARVdMru5dJnX17YL2A@mail.gmail.com>
 <32f701db0ec9$293583f0$7ba08bd0$@gmail.com>
 <CAAhV97Vgw8uY+XQ+chY=Sjoa9B4zqC9TwqqsyHy=kDcL_yd4+w@mail.gmail.com>
 <CABA8h=SvPPpiRm2pfwrFNin4OHLsHeSq4BzX9fYMuJXGKud2oA@mail.gmail.com>
 <CAAhV97UbtBKyQsLXSP5ewRaZTXnKHHoSuMJ1SFm-EPbBQsq-Sg@mail.gmail.com>
 <CAAhV97XygcFQJ2JrSqb9of8rW3bF1f-fAMcb7nP77LnRaW9Log@mail.gmail.com>
 <ZvadrTH3_Xd7G__c@fantomas.sk>
Message-ID: <CAAhV97XyjpKqg7T_zkK9VOYSX-4tN9CVh1j97RysoYrL+KANzw@mail.gmail.com>

I have changed the owner of the files as <local_user>:<group>, but
still the service doesn't start. Once I change the user and group in Unit
file as root, it works. I am stuck because it doesn't show me any error

*Regards*,
Vivek Saurabh
*Slack*:  #uk-monitoring
<https://urldefense.proofpoint.com/v2/url?u=https-3A__uk-2Dcapitalone.slack.com_messages_C1RKDQQP5_&d=DwMFaQ&c=pLULRYW__RtkwsQUPxJVDGboCTdgji3AcHNJU0BpTJE&r=jZzF16B18ffwFjVReS2YMC0P6NDjsTfMSyQrlO4-Xmv-UTpaabu3Aw621hS1I9de&m=cXBmr6YoL9IRSpKGQ3xf_iyupbval3SQ8WBOhiIZU2o&s=WRluoib3Nxx0CXtqWVFhzsJUHaHVbaaBZ4R-KJFLsws&e=>
*Confluence*: UK Hawkeye
<https://confluence.kdc.capitalone.com/display/UH/Creating+a+story+for+the+UK+Hawkeye+Team>


On Fri, Sep 27, 2024 at 12:57?PM Matus UHLAR - fantomas <uhlar at fantomas.sk>
wrote:

> On 27.09.24 12:50, Vivek Saurabh (CONT) wrote:
> >I can restart the service wuth user and group being root. However, while I
> >try to start using user as apdpr01 and group as root, it is getting timed
> >out and not giving any errors. Can you please advise on this?
>
> do you use different configs?
>
> Because squid can use configuration files that have permissions available
> under root user, not under other users.
> The same applies for logs and cache.
>
> --
> Matus UHLAR - fantomas, uhlar at fantomas.sk ;
> https://urldefense.com/v3/__http://www.fantomas.sk/__;!!FrPt2g6CO4Wadw!OepUmPYwX532rCZjBOJdsU-0_yoBPlWhiCmdqIb-ZX7xo6rAwoq2E8D7nULYChxZ5MAZQV37rawQlCMxVs9PAGk$
> Warning: I wish NOT to receive e-mail advertising to this address.
> Varovanie: na tuto adresu chcem NEDOSTAVAT akukolvek reklamnu postu.
> WinError #99999: Out of error messages.
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
>
> https://urldefense.com/v3/__https://lists.squid-cache.org/listinfo/squid-users__;!!FrPt2g6CO4Wadw!OepUmPYwX532rCZjBOJdsU-0_yoBPlWhiCmdqIb-ZX7xo6rAwoq2E8D7nULYChxZ5MAZQV37rawQlCMxCOu17lE$
>

______________________________________________________________________



The information contained in this e-mail may be confidential and/or proprietary to Capital One and/or its affiliates and may only be used solely in performance of work or services for Capital One. The information transmitted herewith is intended only for use by the individual or entity to which it is addressed. If the reader of this message is not the intended recipient, you are hereby notified that any review, retransmission, dissemination, distribution, copying or other use of, or taking of any action in reliance upon this information is strictly prohibited. If you have received this communication in error, please contact the sender and delete the material from your computer.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.squid-cache.org/pipermail/squid-users/attachments/20240930/1dc6893a/attachment.htm>

From uhlar at fantomas.sk  Mon Sep 30 17:19:29 2024
From: uhlar at fantomas.sk (Matus UHLAR - fantomas)
Date: Mon, 30 Sep 2024 19:19:29 +0200
Subject: [squid-users] [External Sender] Re: Squid service not
 restarting properly
In-Reply-To: <CAAhV97XyjpKqg7T_zkK9VOYSX-4tN9CVh1j97RysoYrL+KANzw@mail.gmail.com>
References: <CAAhV97WoUYT0t+HOB2rus0HSh99fUQ9kARVdMru5dJnX17YL2A@mail.gmail.com>
 <32f701db0ec9$293583f0$7ba08bd0$@gmail.com>
 <CAAhV97Vgw8uY+XQ+chY=Sjoa9B4zqC9TwqqsyHy=kDcL_yd4+w@mail.gmail.com>
 <CABA8h=SvPPpiRm2pfwrFNin4OHLsHeSq4BzX9fYMuJXGKud2oA@mail.gmail.com>
 <CAAhV97UbtBKyQsLXSP5ewRaZTXnKHHoSuMJ1SFm-EPbBQsq-Sg@mail.gmail.com>
 <CAAhV97XygcFQJ2JrSqb9of8rW3bF1f-fAMcb7nP77LnRaW9Log@mail.gmail.com>
 <ZvadrTH3_Xd7G__c@fantomas.sk>
 <CAAhV97XyjpKqg7T_zkK9VOYSX-4tN9CVh1j97RysoYrL+KANzw@mail.gmail.com>
Message-ID: <ZvrdoUGPDnubqL7c@fantomas.sk>

On 30.09.24 14:22, Vivek Saurabh (CONT) wrote:
>I have changed the owner of the files as <local_user>:<group>, but
>still the service doesn't start. Once I change the user and group in Unit
>file as root, it works. I am stuck because it doesn't show me any error

What does the cache log say?

What does the "systemctl status squid" say?


>On Fri, Sep 27, 2024 at 12:57?PM Matus UHLAR - fantomas <uhlar at fantomas.sk>
>wrote:
>
>> On 27.09.24 12:50, Vivek Saurabh (CONT) wrote:
>> >I can restart the service wuth user and group being root. However, while I
>> >try to start using user as apdpr01 and group as root, it is getting timed
>> >out and not giving any errors. Can you please advise on this?
>>
>> do you use different configs?
>>
>> Because squid can use configuration files that have permissions available
>> under root user, not under other users.
>> The same applies for logs and cache.

-- 
Matus UHLAR - fantomas, uhlar at fantomas.sk ; http://www.fantomas.sk/
Warning: I wish NOT to receive e-mail advertising to this address.
Varovanie: na tuto adresu chcem NEDOSTAVAT akukolvek reklamnu postu.
"One World. One Web. One Program." - Microsoft promotional advertisement
"Ein Volk, ein Reich, ein Fuhrer!" - Adolf Hitler


From Josh.Piana at hexcel.com  Mon Sep 30 17:22:42 2024
From: Josh.Piana at hexcel.com (Piana, Josh)
Date: Mon, 30 Sep 2024 17:22:42 +0000
Subject: [squid-users] Unable to access internal resources via hostname
In-Reply-To: <20d65da8-8e6e-47f6-9250-04ad8f26ff5a@treenet.co.nz>
References: <405705ce244447aca1b15385a171fada@hexcel.com>
 <Zs84drvoIpZ1f6DR@fantomas.sk> <58bdfaada3fa46d0938b7346ec04c336@hexcel.com>
 <947309fa-d1fc-4a75-ac49-ea7bc5c5ff12@measurement-factory.com>
 <faffca37-fa59-46ff-80e4-245c37fa90b9@measurement-factory.com>
 <c00942c1c8ab46b5b393d70f32346798@hexcel.com>
 <59274673-47e9-431d-ad45-7fa3a5a8ebca@measurement-factory.com>
 <d063bef52efd4e32a9f9bb27f934e673@hexcel.com>
 <e35fb7b1-12ce-41b8-83c1-51a208739127@measurement-factory.com>
 <f7ca72b579474cc184e22dfd6ef55683@hexcel.com>
 <4537b23c7a534cd3a716ffd4f8471f5e@hexcel.com>
 <c4ae0610-b8b2-4a26-bed9-8cd1bf2b6901@treenet.co.nz>
 <d3ef9e5efbad41c39c74dcdb10f8f91a@hexcel.com>
 <20d65da8-8e6e-47f6-9250-04ad8f26ff5a@treenet.co.nz>
Message-ID: <0b12419222214aeebc19ebb699818005@hexcel.com>

Hey Guys, 

I wanted to follow-up on this. 

The answer was simply adding the "append_domain" directive to my config. 

Everything is good now, thank you for all the help. 

- Josh 


-----Original Message-----
From: squid-users <squid-users-bounces at lists.squid-cache.org> On Behalf Of Amos Jeffries
Sent: Saturday, September 7, 2024 10:51 AM
To: squid-users at lists.squid-cache.org
Subject: Re: [squid-users] Unable to access internal resources via hostname

Caution: This email originated from outside of Hexcel. Do not click links or open attachments unless you recognize the sender and know the content is safe.


On 6/09/24 03:56, Piana, Josh wrote:
> Hello Amos,
>
> While the comments did say that it was just the 10.46.11.0 range, I don't think there's any other ACL forcing that. I tried adding the the two internal sites that are being blocked by their IP, restarted Squid, and tested. Still being blocked. You are right though, both of those web addresses are on a different IP scheme. Ideally we want anything on 172.0.0.0 to be allowed, and 10.96.0.0. The other question I have is, even if we specify those sites IP as "allowed", shouldn't we be able to brwose to them by their hostname as well?


That depends no your configuration policy. The default squid.conf only checks that clients are from the LAN and not doing any nasty protocol trick attacks.


>
> Currently, those internal sites ARE reachable. But only if we use IP. While this doesn't bother me, personally, the rest of our users would like to keep browsing via hostname as that's what they're used to and what many have shortcuts for.
>

Currently I see the ACL "local_dst_dom" is commented out (disabled).

I guess you also have not listed the hostname or domain in the file loaded by "authless_dst" ACL.




> In regards to the results of /etc/resolv.conf, see below:
> search ad.arc-tech.com
> nameserver 10.46.11.67
>

Okay. Then the "NDOT" default of 1 will be applied. So for these HTTP
messages:

   CONNECT hexp:443 HTTP/1.1
   Host: hexp
   ...


Will be interpreted by Squid as URL:

  https://hexp/


The "dstdomain" ACL will try to match "hexp" exactly.

The "dst" ACL will try to match IPs of "hexp.ad.arc-tech.com"



> There must be a better way to just allow internal to internal traffic without needing to authenticate through the web proxy. The old config had it, but that was part of the issue. We have no idea how that was working, it didn't make sense at all and it was a bit outdated, Version 2.5 as opposed to our current 5.5.
>
> I'm happy to post out config again here, as it's changed a bit and I have cleaned it up.
>
> # squid.conf - Squid web cache configuration
>
> ######################################################################
> ########
> # General
> ######################################################################
> ########
>
> # 2020MAR23 running out with just 1024 as we switch to Hexcel.com OMA 
> max_filedesc 4096
>

Unrelated to your problem, but FYI this should probably be much larger (ie 64K minimum, up to 100x expected user count) for a production proxy.


>
> ######################################################################
> ########
> # Logging
> ######################################################################
> ########
>
> # this makes the logs readable to humans logformat custom %tl.%03tu 
> %>a %Ss/%03>Hs %<st %rm %ru %[un %Sh/%<a %mt access_log 
> daemon:/var/log/squid/access.log custom
>
> # this gives better error reporting
> logformat custom %err_code/%err_detail access_log 
> daemon:/var/log/squid/access.log custom
>

This repeat of "custom" will cause issues.

IIRC this was added misunderstanding of Alex instructions.
What he meant was to **add** "%err_code/%err_detail" to your existing "custom" format.

Like this:

logformat custom %tl.%03tu %>a %Ss/%03>Hs %<st %rm %ru %[un \
     %Sh/%<a %mt %err_code/%err_detail


> # Red Hat-ish log names
> cache_log /var/log/squid/cache.log
> cache_access_log /var/log/squid/access.log

This setting opens a third logger writing to access.log, causing more issues.

Remove this "cache_access_log" line.


>
> # store_log is only useful for debugging cache_store_log none


FYI, off by default on current Squid. You can probably erase this setting entirely now.


> ######################################################################
> ########
> # Network - General/misc
> ######################################################################
> ########
>
> # our HTTP proxy port
> http_port 10.46.11.69:8080
> # loopback management
> http_port 127.0.0.1:3128


FWIW, you have denied access to "dst 127.0.0.0/8". So traffic to this port will be rejected.


>
> # disable ICP, port is typically 3130
> icp_port 0

FYI; disabled by default in modern Squid. You can remove "icp_port".

>
> # if set to "on", Squid will append your client's IP address in the 
> HTTP requests it forwards forwarded_for off

"off" will send the text "unknown".

It is better to use "transparent" (pass-thru unchanged) or "delete"
(erase if existing).


> ######################################################################
> ########
> # Authentication
> ######################################################################
> ########
>
> auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth 
> -k /etc/squid/HTTP.keytab -s 
> HTTP/ARCGATE2.ad.arc-tech.com at AD.ARC-TECH.COM
> auth_param negotiate children 10
> auth_param negotiate keep_alive on
> acl kerb-auth proxy_auth REQUIRED
>
> ######################################################################
> ######## # Access control - shared/common ACL definitions 
> ######################################################################
> ########
>
> # 
> ----------------------------------------------------------------------
> ------ # networks and hosts (by name or IP address)
>
> # acl all src all
>
> acl src_self src 127.0.0.0/8
> acl src_self src 10.46.11.69
>
> acl dst_self dst 127.0.0.0/8
> acl dst_self dst 10.46.11.69


FYI, there are more IPs than just 127.0.0.0/8 which can be problematic as loopback sources.

Replace "dst_self" with:

  acl to_localhost dst 10.46.11.69


>
> acl from_arc src 10.46.0.0/15
>
> acl local_dst_addr dst 10.0.0.0/8
> acl local_dst_addr dst 172.0.0.0/8
>
> # 
> ----------------------------------------------------------------------
> ------
> # protocols (URL schemes)
>
> acl proto_FTP proto FTP
> acl proto_HTTP proto HTTP
>
> # 
> ----------------------------------------------------------------------
> ------
> # TCP port numbers
>
> # TCP ports for ordinary HTTP
> acl http_ports port 80                # standard HTTP
> acl http_ports port 81                # common alternative
> acl http_ports port 8001      # epson.com support sub-site
> acl http_ports port 8080      # common alternative


Other ports that are common:

  acl http_ports port 88 8000 8888 # ad-hoc services
  acl http_ports port 1080  # SOCK frontend to HTTP service
  acl http_ports port 21-22 # http:// frontend to FTP service
  acl http_ports port 443   # https:// URLs


Or really, **any** port can be valid now that Alt-Svc is widely used.

>
> # TCP ports for HTTP-over-SSL
> acl Ssl_ports port 443
> acl Ssl_ports port 9571               # lexmark.com
>
> # TCP ports for plain FTP command channel acl ftp_ports port 21
>
> # TCP ports for SSH/SFTP (secure shell) acl ssh_ports port 22

FTR, "ssh_ports" is unused. SSH and SFTP can only use Squid via CONNECT tunnel anyway. So you should list this port as part of "Ssl_ports".

>
> # 
> ----------------------------------------------------------------------
> ------
> # HTTP methods (and pseudo-methods)
>
> acl method_CONNECT method CONNECT

FYI: we have a built-in for modern Squid:

   acl CONNECT method CONNECT

You can replace all "method_CONNECT" with just "CONNECT".


>
> # list of standard HTTP methods
> acl methods_std method GET HEAD POST PUT DELETE acl methods_std method 
> TRACE OPTIONS
>

Consider removing these ACLs and the extra complexity they create.
Modern HTTP considers many other method names "standard" and current Squid follows the standard-required handling for all of them, and special ones.


> ######################################################################
> #######
> # Access control - general proxy
> ######################################################################
> ########
>
> # This major section is about which HTTP proxy clients can use Squid # 
> as an HTTP proxy server.  As opposed to the maintenance/admin-type # 
> stuff in the previous section.
>
> # 
> ----------------------------------------------------------------------
> ------
> # basic deny rules
> # these block stuff that's never good
> # we put most denies after user-auth so we know *who* is trying
>

Missing basic security to prevent DoS and protocol hijacking attacks:


  http_access deny !Safe_ports
  http_access deny CONNECT !Ssl_ports


You can define Safe_ports like this:

   acl Safe_Ports any-of http_ports Ssl_ports ftp_ports



> # block attempts to connect to proxy server via proxy http_access deny 
> dst_self
>

Use:
   http_access deny to_localhost



> # block clients which are the proxy server machine itself http_access 
> deny src_self
>

FYI, there should be nothing wrong with other software running on the proxy machine (eg software updaters) using Squid. They have to obey the same rules an any other client.


> # deny anything not from the LAN
> http_access deny !from_arc

FYI, we use "localnet" ACL to define the LAN. Makes it a bit easier for others to assist if you use the same. Up to you though.


>
> # 
> ----------------------------------------------------------------------
> ------
> # allow without authentication
> # these rules allow certain connects without user authentication # 
> these allow any protocol/method/etc
>
> #                 ***** IMPORTANT *****
> # Adding to these lists also exempts from all content filtering.
> # In particular, executables will be allowed to download!
> #                 ***** IMPORTANT *****
>
> # allow connects to local destinations without authentication # by 
> domain name from URL # acl local_dst_dom dstdomain ad.arc-tech.com
> # http_access       allow local_dst_dom
> # http_reply_access allow local_dst_dom


You have a domain name whitelist ACL two sections below.
You can remove the above, and list and use the later one for both
"local" and other domains.


>
> # by IP address name resolves to
> http_access       allow local_dst_addr
> # http_reply_access allow local_dst_addr
>

Maybe rename "local_dst_addr" to "whitelist_dst_ips" for clarity on what
it is doing.


Which brings up a security issue: When you list the entire LAN range in
this ACL, anyone accessing the proxy is allowed to do whatever they want
to your LAN machines. That includes all LAN **and** WAN connections.

Additionally, the bypass of authentication leaves you no trace that this
was actually a user, and not some infected LAN machine spreading malware
across your LAN. Which is rather risky.


Prefer to keep by-IP whitelist's empty or minimal content.



> # allow trusted hosts without authentication
> # these are just ip's on the 10.46.11.x network
> acl authless_src src "/etc/squid/authless_src"
> http_access       allow authless_src
> # http_reply_access allow authless_src
>
> # allow the following destinations without authentication
> # list of random approved websites
> # whats the advantage of not authenticating?
> acl authless_dst dstdomain "/etc/squid/authless_dst"
> http_access       allow authless_dst
> # http_reply_access allow authless_dst
>

This should be combined with "local_dst_dom". Just use different lines
like so:

  acl authless_dst dstdomain "/etc/squid/authless_dst"
  acl authless_dst dstdomain .ad.arc-tech.com
  acl authless_dst dstdomain .hexcelssp.com hexcelssp

  http_access allow whitelist


> # ----------------------------------------------------------------------------
> # block before authentication
> # these rules block certain connects without user authentication
> # done for software which handles proxy auth requests badly
> # for example, popping up many auth prompts
> # this does mean we cannot whitelist for users
>
> # blocked destinations, by host or domain, before authentication
> # websites that are auto-deny
> acl bad_domains_preauth dstdomain "/etc/squid/bad_domains_preauth"
> http_access deny bad_domains_preauth
>
> # ----------------------------------------------------------------------------
> # require proxy authentication
>
> # ********************************************************************
> # * anything past this point requires users to authenticate to proxy *
> # ********************************************************************
>
> # Uncomment these lines to disable authentication requirement for all
> # but a few test boxes.  Useful if NTLM gets broken.
> # acl from_test_boxes src 10.2.1.5
> # http_access allow !from_test_boxes from_arc
>

FYI, you have "deny !from_arc" earlier above.

This is simpler and does the same thing as the above line:

   # http_access allow !from_test_boxes


> # block clients which are not authenticated
> # http_access deny !authenticated
>

You named the ACL "kerb-auth", not "authenticated".


> # block certain user IDs from using proxy server
> # list of ad users and service accounts to automatically deny proxy
> acl block_user proxy_auth_regex -i "/etc/squid/block_user"
> http_access deny block_user


I suggest this to prevent re-login loop for these forbidden services:

  http_access deny !kerb-auth
  http_access deny block_user all


>
> # ----------------------------------------------------------------------------
> # general whitelist
>
> # whitelist for locations/sites (override blocking)
> # allows complex URLs
> # some bad_urls patterns are generic
> # they block suspicous URLs or generally unwanted sites
> # this whitelist can make specific exceptions within those
> acl bad_exception_urls url_regex -i "/etc/squid/bad_exception_urls"
>
> # ----------------------------------------------------------------------------
> # executable blocking
>
> # we do this separately from other content blocking
> # in order to allow ITLIB to still download
> # doing it with other blocking causes a flood of browser auth req's
> # for users visting sites with video
>
> # file extensions to block
> # don't try to block .COM files here
> # it will get confused with .com domain and block too many things
> acl exec_files url_regex -i "/etc/squid/exec_files"

Consider using the "urlpath_regex" ACL type instead. It does not match
against the scheme://domain:port part of URLs.


>
> # usernames not to block
> acl exec_users proxy_auth_regex -i "/etc/squid/exec_users"
>
> # activate
> http_access deny !bad_exception_urls !exec_users exec_files
> deny_info ERR_BLOCK_TYPE exec_files
>
> # ----------------------------------------------------------------------------
> # selective whitelists
>
> # these override the general blacklists by explictly allowing things
> # some multimedia services (I.E. YouTube) are permitted for certain users
> # exempts them from content blocking in this section
>
> # list of users for this
> acl mmedia_users proxy_auth_regex -i "/etc/squid/mmedia_users"
>
> # list of sites for this
> acl mmedia_sites dstdomain "/etc/squid/mmedia_sites"
>
> # if a mmedia user attempts to access a mmedia site via appropriate protocols, allow it
> # done for both HTTP/TCP/80 and HTTP/SSL/443
> # done for both HTTP request as well as HTTP reply/response
> # otherwise the later bad_types Content-Type multimedia blocking rule kicks in
>
> http_access       allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
> # tp_reply_access allow methods_std    proto_HTTP http_ports mmedia_sites mmedia_users
>
> http_access       allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users
> # http_reply_access allow method_CONNECT            ssl_ports  mmedia_sites mmedia_users


FYI, Websites like YouTube can dynamically negotiate the media source
ports to be non-standard values using Alt-Svc headers.

If you had the default security settings at the top of your http_access
rules:

  http_access deny !Safe_ports
  http_access deny CONNECT !SSL_Ports

... you would not need to make (bad) assumptions about the protocols and
ports used by media sites here.

Also, "mmedia_users" being last on the line risks a 407 re-auth
challenge occuring. Best place it earlier.


Leaving these rules as:

    http_access allow mmedia_users mmedia_sites


>
> # ----------------------------------------------------------------------------
> # general blacklists
> # porn, wastes of bandwidth, etc.
>
>
> # blocked destinations, by host or domain
> # sites we don't want people using
> acl bad_domains dstdomain "/etc/squid/bad_domains"
> http_access deny !bad_exception_urls bad_domains
> deny_info ERR_BLOCK_DST       bad_domains
>
> # blocked destinations, by host or domain, regex pattern
> acl bad_domains_regex dstdom_regex -i "/etc/squid/bad_domains_regex"
> http_access deny !bad_exception_urls bad_domains_regex
> deny_info ERR_BLOCK_DST       bad_domains_regex
>
> # blocked destinations, by complex URL
> # typical use: block just part of a site, by URL path
> # example use: block just the advertsing section of a site
> acl bad_urls url_regex -i "/etc/squid/bad_urls"
> http_access deny !bad_exception_urls bad_urls
> deny_info ERR_BLOCK_DST       bad_urls
>
> # blocked content types, by apparent file name
> acl bad_files urlpath_regex -i "/etc/squid/bad_files"
> http_access deny !bad_exception_urls bad_files
> deny_info ERR_BLOCK_TYPE bad_files
>
> # blocked content types, by MIME content type, in response
> acl bad_types rep_mime_type -i "/etc/squid/bad_types"
> # http_reply_access deny bad_types !bad_exception_urls
> deny_info ERR_BLOCK_TYPE bad_types


FYI, in order for the deny_info action to be taken the ACL it is
attached to must be the final one on a line.

Previous config was fine, but this "bad_types" use will not work. You
need to re-order the access checks like this:


  # http_reply_access deny !bad_exception_urls bad_types


>

This part from here ...

> # ----------------------------------------------------------------------------
> # standard web (HTTP PUT/GET/etc) access
>
> # We basically allow any auth'ed user to connect via HTTP to anywhere,
> # so long as it uses a standard port, and is not a direct CONNECT
> # attempt, or blocked, or any of the other stuff above.
>
> http_access allow http_ports proto_HTTP methods_std
>
> # ----------------------------------------------------------------------------
> # direct CONNECT for HTTP-over-SSL (HTTPS)
>
> http_access allow method_CONNECT ssl_ports
>
> # ----------------------------------------------------------------------------
> # deny any other CONNECT attempts
>
> http_access deny method_CONNECT
>
> # ----------------------------------------------------------------------------
> # FTP via HTTP proxy
>
> http_access allow ftp_ports proto_FTP
>

... to here.

Is better handled by the default squid.conf:

  http_access deny !Safe_ports
  http_access deny CONNECT !Ssl_ports

Placed at the top of your http_access lines.


> # ----------------------------------------------------------------------------
> # catch-all defaults
> http_access allow kerb-auth
>
> # deny any request we missed in the above
> http_access deny all
>
> # If we allowed the request, allow the reply (HTTP response) as well.
> # Rules above many allow or deny specific reply before now.
> # If nothing more specific matched, we allow.
> # This should be OK since we filter mainly on requests.
> # http_reply_access allow all
>

FWIW, it is hard to tell what the exact last reply action could have
been. So I would un-comment this allow line to be certain it is what
happens.


> ##############################################################################
> # END OF FILE
> ##############################################################################
>

HTH
Amos

_______________________________________________
squid-users mailing list
squid-users at lists.squid-cache.org
https://lists.squid-cache.org/listinfo/squid-users


From rousskov at measurement-factory.com  Mon Sep 30 18:27:38 2024
From: rousskov at measurement-factory.com (Alex Rousskov)
Date: Mon, 30 Sep 2024 14:27:38 -0400
Subject: [squid-users] Issues with Squid Listening on 254 IP Addresses
In-Reply-To: <CA+KaO5oUV8rQM6W-JN4xTAnRApLj0uBNLmiw7zzm6QyTtXyRuw@mail.gmail.com>
References: <CA+KaO5oUV8rQM6W-JN4xTAnRApLj0uBNLmiw7zzm6QyTtXyRuw@mail.gmail.com>
Message-ID: <5f2a8855-a478-4478-9d37-d7a0cfeb5a09@measurement-factory.com>

On 2024-09-30 09:08, Alexis DAVEAU wrote:

> wget http://www.squid-cache.org/Versions/v5/squid-5.2.tar.gz 
> tar -xzf squid-5.2.tar.gz
> cd squid-5.2
> export CXXFLAGS="-DMAXTCPLISTENPORTS=254"
> ./configure --prefix=/usr --localstatedir=/var 
> --libexecdir=/usr/lib/squid --datadir=/usr/share/squid \
> --sysconfdir=/etc/squid --with-logdir=/var/log/squid 
> --with-pidfile=/var/run/squid.pid \
> --enable-ssl --enable-ssl-crtd --enable-auth --enable-cache-digests \
> --enable-removal-policies="lru,heap" --enable-follow-x-forwarded-for
> make
> sudo make install
> But again, after running squid -v, the custom flag doesn't appear, and 
> the limit for the number of listening IP addresses is still in place.


FWIW, Squid v6 builds as expected in my tests:

> $ ./src/squid -v
> Squid Cache: Version 6.11-VCS
> Service Name: squid
> configure options:  'CXXFLAGS=-DMAXTCPLISTENPORTS=254'

And I can also see the right -D option being passed to individual g++ 
commands during "make".


I also get the expected result with Squid the latest (unsupported) v5:

> $ ./src/squid -v
> Squid Cache: Version 5.10-VCS
> Service Name: squid
> configure options:  'CXXFLAGS=-DMAXTCPLISTENPORTS=254'


I tried to use your ./configure options, but they do not work for me:

> configure: error: You need ssl gatewaying support to enable ssl-crtd feature. Try to use --with-openssl.

Hint: Replace ancient "--enable-ssl" with "--with-openssl".


Is it possible that a ./configure failure was missed in your build 
sequence? Or perhaps you are building one Squid binary but testing another?


HTH,

Alex.


> I?ve tested with various versions of Squid, ranging from 4.8 to 5.9, but 
> none of them seem to apply the custom flag for increasing the number of 
> listening addresses/ports.
> 
> Questions:
> How can I confirm that Squid is applying the MAXTCPLISTENPORTS value? Is 
> there a way to force Squid to recognize this parameter?
> Is there an alternative method to configure Squid to handle 254 IP 
> addresses without recompiling? Am I missing a critical step in the build 
> process?
> Do you have any recommendations to optimize the configuration for 
> managing an entire /24 prefix with 254 addresses?
> Any advice or suggestions would be greatly appreciated! I?ve done 
> extensive research on the issue, but I haven?t found a solution yet.
> 
> Thanks in advance for your help!
> 
> Best regards,
> Alexis
> 
> _______________________________________________
> squid-users mailing list
> squid-users at lists.squid-cache.org
> https://lists.squid-cache.org/listinfo/squid-users



