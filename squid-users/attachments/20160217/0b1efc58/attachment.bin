--- squid-3.5.13/src/esi/CustomParser.cc	2016-01-07 01:21:47.000000000 -0200
+++ squid-3.5.13/src/esi/CustomParser.cc	2016-02-03 12:57:36.334098062 -0200
@@ -89,9 +89,9 @@ ESICustomParser::parse(char const *dataT
     }
 
     size_t openESITags (0);
-    //erring on the safe side. Probably rawBuf would be ok too
-    char const *currentPos = content.termedBuf();
-    size_t remainingCount = content.size();
+    //erring on the safe side. Probably rawContent would be ok too
+    char const *currentPos = content.c_str();
+    SBuf::size_type remainingCount = content.length();
     char const *tag = NULL;
 
     while ((tag = findTag(currentPos, remainingCount))) {
--- squid-3.5.13/src/esi/CustomParser.h	2016-01-07 01:21:47.000000000 -0200
+++ squid-3.5.13/src/esi/CustomParser.h	2016-02-03 12:57:36.334098062 -0200
@@ -14,7 +14,7 @@ class Trie;
 /* inherits from */
 #include "esi/Parser.h"
 
-/* for String variables */
+#include "SBuf.h"
 #include "SquidString.h"
 
 /**
@@ -46,7 +46,7 @@ private:
     ESIParserClient *theClient;
     String error;
     /* cheap n dirty - buffer it all */
-    String content;
+    SBuf content;
     /* TODO: make a class of this type code */
     ESITAG_t lastTag;
 };
