<tt>
&lt;html&gt;<br>
&nbsp;&nbsp;&lt;head&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;http-equiv=&quot;Content-Type&quot;&nbsp;content=&quot;text/html;&nbsp;charset=UTF-8&quot;&gt;<br>
&nbsp;&nbsp;&lt;/head&gt;<br>
&nbsp;&nbsp;&lt;body&nbsp;text=&quot;#464646&quot;&nbsp;bgcolor=&quot;#FFFFFF&quot;&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Elizer,&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Thanks&nbsp;for&nbsp;all&nbsp;this&nbsp;advice&nbsp;and&nbsp;indeed&nbsp;your&nbsp;arguments&nbsp;are&nbsp;valid<br>
&nbsp;&nbsp;&nbsp;&nbsp;between&nbsp;opening&nbsp;a&nbsp;socket,&nbsp;sending&nbsp;data,&nbsp;receiving&nbsp;data&nbsp;and&nbsp;closing<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;socket&nbsp;unlike&nbsp;direct&nbsp;access&nbsp;to&nbsp;a&nbsp;regex&nbsp;or&nbsp;a&nbsp;memory&nbsp;entry&nbsp;even&nbsp;if<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;calculation&nbsp;has&nbsp;already&nbsp;been&nbsp;done.&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;But&nbsp;what&nbsp;surprises&nbsp;me&nbsp;the&nbsp;most&nbsp;is&nbsp;that&nbsp;we&nbsp;have&nbsp;produced&nbsp;a&nbsp;python<br>
&nbsp;&nbsp;&nbsp;&nbsp;plugin&nbsp;in&nbsp;thread&nbsp;which&nbsp;I&nbsp;provide&nbsp;you&nbsp;a&nbsp;code&nbsp;below.&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;php&nbsp;code&nbsp;is&nbsp;like&nbsp;your&nbsp;mentioned&nbsp;example&nbsp;(&nbsp;No&nbsp;thread,&nbsp;just&nbsp;a&nbsp;loop<br>
&nbsp;&nbsp;&nbsp;&nbsp;and&nbsp;output&nbsp;OK&nbsp;)&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Results&nbsp;are&nbsp;after&nbsp;6k&nbsp;requests,&nbsp;squid&nbsp;freeze&nbsp;and&nbsp;no&nbsp;surf&nbsp;can&nbsp;be&nbsp;made<br>
&nbsp;&nbsp;&nbsp;&nbsp;as&nbsp;with&nbsp;PHP&nbsp;code&nbsp;we&nbsp;can&nbsp;up&nbsp;to&nbsp;10K&nbsp;requests&nbsp;and&nbsp;squid&nbsp;is&nbsp;happy&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;really,&nbsp;we&nbsp;did&nbsp;not&nbsp;understand&nbsp;why&nbsp;python&nbsp;is&nbsp;so&nbsp;low.&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;font&nbsp;face=&quot;Arial&quot;&gt;Here&nbsp;a&nbsp;python&nbsp;code&nbsp;using&nbsp;threads&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#!/usr/bin/env&nbsp;python&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;import&nbsp;os&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;import&nbsp;sys&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;import&nbsp;time&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;import&nbsp;signal&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;import&nbsp;locale&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;import&nbsp;traceback&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;import&nbsp;threading&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;import&nbsp;select&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;import&nbsp;traceback&nbsp;as&nbsp;tb&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;ClienThread():&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &nbsp;def&nbsp;__init__(self):&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;self._exiting&nbsp;=&nbsp;False&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;self._cache&nbsp;=&nbsp;{}&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &nbsp;def&nbsp;exit(self):&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;self._exiting&nbsp;=&nbsp;True&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &nbsp;def&nbsp;stdout(self,&nbsp;lineToSend):&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;try:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;           &nbsp;sys.stdout.write(lineToSend)&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;           &nbsp;sys.stdout.flush()&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;except&nbsp;IOError&nbsp;as&nbsp;e:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;           &nbsp;if&nbsp;e.errno==32:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;               &nbsp;#&nbsp;Error&nbsp;Broken&nbsp;PIPE!&quot;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;               &nbsp;pass&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;except:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;           &nbsp;#&nbsp;other&nbsp;execpt&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;           &nbsp;pass&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &nbsp;def&nbsp;run(self):&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;while&nbsp;not&nbsp;self._exiting:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;           &nbsp;if&nbsp;sys.stdin&nbsp;in&nbsp;select.select([sys.stdin],&nbsp;[],&nbsp;[],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.5)[0]:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;               &nbsp;line&nbsp;=&nbsp;sys.stdin.readline()&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;               &nbsp;LenOfline=len(line)&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;               &nbsp;if&nbsp;LenOfline==0:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                   &nbsp;self._exiting=True&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                   &nbsp;break&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;               &nbsp;if&nbsp;line[-1]&nbsp;==&nbsp;'\n':line&nbsp;=&nbsp;line[:-1]&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;               &nbsp;channel&nbsp;=&nbsp;None&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;               &nbsp;options&nbsp;=&nbsp;line.split()&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;               &nbsp;try:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                   &nbsp;if&nbsp;options[0].isdigit():&nbsp;channel&nbsp;=<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.pop(0)&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;               &nbsp;except&nbsp;IndexError:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                   &nbsp;self.stdout(&quot;0&nbsp;OK&nbsp;first=ERROR\n&quot;)&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                   &nbsp;continue&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;               &nbsp;#&nbsp;Processing&nbsp;here&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;               &nbsp;try:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                   &nbsp;self.stdout(&quot;%s&nbsp;OK\n&quot;&nbsp;%&nbsp;channel)&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;               &nbsp;except:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                   &nbsp;self.stdout(&quot;%s&nbsp;ERROR&nbsp;first=ERROR\n&quot;&nbsp;%<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;channel)&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;Main(object):&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &nbsp;def&nbsp;__init__(self):&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;self._threads&nbsp;=&nbsp;[]&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;self._exiting&nbsp;=&nbsp;False&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;self._reload&nbsp;=&nbsp;False&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;self._config&nbsp;=&nbsp;&quot;&quot;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;for&nbsp;sig,&nbsp;action&nbsp;in&nbsp;(&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;           &nbsp;(signal.SIGINT,&nbsp;self.shutdown),&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;           &nbsp;(signal.SIGQUIT,&nbsp;self.shutdown),&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;           &nbsp;(signal.SIGTERM,&nbsp;self.shutdown),&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;           &nbsp;(signal.SIGHUP,&nbsp;lambda&nbsp;s,&nbsp;f:&nbsp;setattr(self,&nbsp;'_reload',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;True)),&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;           &nbsp;(signal.SIGPIPE,&nbsp;signal.SIG_IGN),&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;):&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;           &nbsp;try:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;               &nbsp;signal.signal(sig,&nbsp;action)&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;           &nbsp;except&nbsp;AttributeError:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;               &nbsp;pass&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &nbsp;def&nbsp;shutdown(self,&nbsp;sig&nbsp;=&nbsp;None,&nbsp;frame&nbsp;=&nbsp;None):&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;self._exiting&nbsp;=&nbsp;True&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;self.stop_threads()&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &nbsp;def&nbsp;start_threads(self):&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;sThread&nbsp;=&nbsp;ClienThread()&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;t&nbsp;=&nbsp;threading.Thread(target&nbsp;=&nbsp;sThread.run)&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;t.start()&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;self._threads.append((sThread,&nbsp;t))&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &nbsp;def&nbsp;stop_threads(self):&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;for&nbsp;p,&nbsp;t&nbsp;in&nbsp;self._threads:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;           &nbsp;p.exit()&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;for&nbsp;p,&nbsp;t&nbsp;in&nbsp;self._threads:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;           &nbsp;t.join(timeout&nbsp;= &lt;/font&gt;&lt;font&nbsp;face=&quot;Arial&quot;&gt;&lt;font<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;face=&quot;Arial&quot;&gt;&nbsp;1.0&lt;/font&gt;)&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;self._threads&nbsp;=&nbsp;[]&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &nbsp;def&nbsp;run(self):&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;&quot;&quot;&quot;&nbsp;main&nbsp;loop&nbsp;&quot;&quot;&quot;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;ret&nbsp;=&nbsp;0&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;self.start_threads()&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;return&nbsp;ret&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;__name__&nbsp;==&nbsp;'__main__':&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &nbsp;#&nbsp;set&nbsp;C&nbsp;locale&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &nbsp;locale.setlocale(locale.LC_ALL,&nbsp;'C')&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &nbsp;os.environ['LANG']&nbsp;=&nbsp;'C'&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &nbsp;ret&nbsp;=&nbsp;0&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &nbsp;try:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;main&nbsp;=&nbsp;Main()&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;ret&nbsp;=&nbsp;main.run()&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &nbsp;except&nbsp;SystemExit:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;pass&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &nbsp;except&nbsp;KeyboardInterrupt:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       &nbsp;ret&nbsp;=&nbsp;4&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &nbsp;except:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &nbsp;sys.exit(ret)&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/font&gt;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;class=&quot;moz-cite-prefix&quot;&gt;Le&nbsp;04/02/2022&nbsp;à&nbsp;07:06,&nbsp;Eliezer&nbsp;Croitoru<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;écrit :&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;blockquote&nbsp;type=&quot;cite&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cite=&quot;mid:000401d8198d$5c30e120$1492a360$@gmail.com&quot;&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;And&nbsp;about&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache&nbsp;of&nbsp;each&nbsp;helpers,&nbsp;the&nbsp;cost&nbsp;of&nbsp;a&nbsp;cache&nbsp;on&nbsp;a&nbsp;single&nbsp;helper<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;not&nbsp;much&nbsp;in&nbsp;terms&nbsp;of&nbsp;memory&nbsp;comparing&nbsp;to&nbsp;some&nbsp;network<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access.&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;Again&nbsp;it’s<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;possible&nbsp;to&nbsp;test&nbsp;and&nbsp;verify&nbsp;this&nbsp;on&nbsp;a&nbsp;loaded&nbsp;system&nbsp;to&nbsp;get<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results.&nbsp;The&nbsp;delay&nbsp;itself&nbsp;can&nbsp;be&nbsp;seen&nbsp;from&nbsp;squid&nbsp;side&nbsp;in&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache&nbsp;manager&nbsp;statistics.&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;&lt;o:p&gt; &lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;You&nbsp;can&nbsp;also<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;to&nbsp;compare&nbsp;the&nbsp;next&nbsp;ruby&nbsp;helper:&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;&lt;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;href=&quot;https://wiki.squid-cache.org/EliezerCroitoru/SessionHelper&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;moz-do-not-send=&quot;true&quot;&nbsp;class=&quot;moz-txt-link-freetext&quot;&gt;https://wiki.squid-cache.org/EliezerCroitoru/SessionHelper&lt;/a&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;&lt;o:p&gt; &lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;About&nbsp;a&nbsp;shared<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;“base”&nbsp;which&nbsp;allows&nbsp;helpers&nbsp;to&nbsp;avoid&nbsp;computation&nbsp;of&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;query….&nbsp;It’s&nbsp;a&nbsp;good&nbsp;argument,&nbsp;however&nbsp;it&nbsp;depends&nbsp;what&nbsp;is&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cost&nbsp;of&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pulling&nbsp;from&nbsp;the&nbsp;cache&nbsp;compared&nbsp;to&nbsp;calculating&nbsp;the&nbsp;answer.&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;A&nbsp;very&nbsp;simple<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;comparison&nbsp;or&nbsp;regex&nbsp;matching&nbsp;would&nbsp;probably&nbsp;be&nbsp;faster<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;than&nbsp;reaching&nbsp;a&nbsp;shared&nbsp;storage&nbsp;in&nbsp;many&nbsp;cases.&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;&lt;o:p&gt; &lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;Also&nbsp;take&nbsp;into<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;account&nbsp;the&nbsp;“concurrency”&nbsp;support&nbsp;from&nbsp;the&nbsp;helper&nbsp;side.&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;A&nbsp;helper&nbsp;that<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;supports&nbsp;parallel&nbsp;processing&nbsp;of&nbsp;requests/lines&nbsp;can&nbsp;do&nbsp;better<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;then&nbsp;many&nbsp;single&nbsp;helpers&nbsp;in&nbsp;more&nbsp;than&nbsp;once&nbsp;use&nbsp;case.&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;In&nbsp;any&nbsp;case&nbsp;I<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;would&nbsp;suggest&nbsp;to&nbsp;enable&nbsp;requests&nbsp;concurrency&nbsp;from&nbsp;squid&nbsp;side<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;since&nbsp;the&nbsp;STDIN&nbsp;buffer&nbsp;will&nbsp;emulate&nbsp;some&nbsp;level&nbsp;of&nbsp;concurrency&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;by&nbsp;itself&nbsp;and&nbsp;will&nbsp;allow&nbsp;squid&nbsp;to&nbsp;keep&nbsp;going&nbsp;forward&nbsp;faster.&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;&lt;o:p&gt; &lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;Just&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mention&nbsp;that&nbsp;SquidGuard&nbsp;have&nbsp;used&nbsp;a&nbsp;single&nbsp;helper&nbsp;cache&nbsp;for&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;very&nbsp;long&nbsp;time,&nbsp;ie&nbsp;every&nbsp;single&nbsp;SquidGuard&nbsp;helper&nbsp;has&nbsp;it’s&nbsp;own<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;copy&nbsp;of&nbsp;the&nbsp;whole&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;configuration<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and&nbsp;database&nbsp;files&nbsp;in&nbsp;memory.&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;&lt;o:p&gt; &lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;And&nbsp;again,&nbsp;if<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;you&nbsp;do&nbsp;have&nbsp;any&nbsp;option&nbsp;to&nbsp;implement&nbsp;a&nbsp;server&nbsp;service&nbsp;model&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;that&nbsp;the&nbsp;helpers&nbsp;will&nbsp;contact&nbsp;this&nbsp;main&nbsp;service&nbsp;you&nbsp;will&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;able&nbsp;to&nbsp;implement&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;much&nbsp;faster&nbsp;internal&nbsp;in-memory&nbsp;cache&nbsp;compared&nbsp;to&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;redis/memcahe/other&nbsp;external&nbsp;daemon(need&nbsp;to&nbsp;be&nbsp;tested).&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;&lt;o:p&gt; &lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;A&nbsp;good&nbsp;example<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;this&nbsp;is&nbsp;ufdbguard&nbsp;which&nbsp;has&nbsp;helpers&nbsp;that&nbsp;are&nbsp;clients&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;main&nbsp;service&nbsp;which&nbsp;does&nbsp;the&nbsp;whole&nbsp;heavy&nbsp;lifting&nbsp;and&nbsp;also<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;holds&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;one&nbsp;copy&nbsp;of&nbsp;the&nbsp;DB.&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;&lt;o:p&gt; &lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;MsoNormal&quot;&gt;&lt;span&nbsp;style=&quot;color:windowtext&quot;&gt;I&nbsp;have<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;implemented&nbsp;SquidBlocker&nbsp;this&nbsp;way&nbsp;and&nbsp;have&nbsp;seen&nbsp;that&nbsp;it<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out-performs&nbsp;any&nbsp;other&nbsp;service&nbsp;I&nbsp;have&nbsp;tried&nbsp;until&nbsp;now.&lt;/span&gt;&lt;/p&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/blockquote&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
&nbsp;&nbsp;&lt;/body&gt;<br>
&lt;/html&gt;<br>

</tt>
