--- a/include/splay.h
+++ b/include/splay.h
@@ -133,11 +133,37 @@ template<class V>
 void
 SplayNode<V>::destroy(SPLAYFREE * free_func)
 {
-    if (left)
-        left->destroy(free_func);
+    /* try to minimize recursion depth on degenerate trees,
+     * by taking over the subtrees of the only child in single
+     * child nodes. */
+    SplayNode<V> *child = nullptr;
+    for (;;) {
+        child = nullptr;
 
-    if (right)
-        right->destroy(free_func);
+        if (right == nullptr) {
+            if (left == nullptr) /* leaf node */
+                break;
+            /* only left child exists */
+            child = left;
+        } else if (left == nullptr) {
+            /* only right child exists */
+            child = right;
+        } else {
+            /* both children contain data => remove right one recursively */
+            right->destroy(free_func);
+            right = nullptr;
+            child = left;
+        }
+
+        /* first take over subtrees of only child ... */
+        left  = child->left;
+        right = child->right;
+        child->left  = nullptr;
+        child->right = nullptr;
+        /* then destroy it */
+        child->destroy(free_func);
+    }
+    /* no more children -> done */
 
     free_func(data);
 
