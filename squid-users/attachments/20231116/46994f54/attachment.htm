<tt>
&lt;div&nbsp;dir=&quot;ltr&quot;&gt;Hello, &lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;found&nbsp;that negotiate_kerberos_auth&nbsp;helper&nbsp;does&nbsp;not&nbsp;see&nbsp;domain&nbsp;local&nbsp;AD&nbsp;groups.&lt;/div&gt;&lt;div&gt;As&nbsp;it&nbsp;turned&nbsp;out,&nbsp;helper&nbsp;parses&nbsp;only&nbsp;GroupIds&nbsp;and&nbsp;ExtraSids&nbsp;pac-blocks,&nbsp;while&nbsp;the&nbsp;information&nbsp;about&nbsp;domain&nbsp;local&nbsp;groups&nbsp;is&nbsp;placed&nbsp;in&nbsp;the&nbsp;ResourceGropIds pac-block.&lt;/div&gt;&lt;div&gt;I&nbsp;have&nbsp;slightly&nbsp;patched&nbsp;the negotiate_kerberos_pac.cc&nbsp;to&nbsp;implement ResourceGropIds-block&nbsp;parsing.&lt;/div&gt;&lt;div&gt;Maybe&nbsp;it&nbsp;will&nbsp;be&nbsp;useful&nbsp;for&nbsp;the&nbsp;community.&lt;/div&gt;&lt;div&gt;This&nbsp;patch&nbsp;can&nbsp;be&nbsp;included&nbsp;in&nbsp;future&nbsp;Squid-releases.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Kind&nbsp;regards,&lt;/div&gt;&lt;div&gt; &nbsp; Ankor.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;patch&nbsp;for&nbsp;the&nbsp;file src/auth/negotiate/kerberos/negotiate_kerberos_pac.cc&nbsp;below:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;@@&nbsp;-362,6&nbsp;+362,123&nbsp;@@&lt;br&gt; &nbsp; &nbsp; return&nbsp;ad_groups;&lt;br&gt; }&lt;br&gt;&lt;br&gt;+&lt;br&gt;+char&nbsp;*&lt;br&gt;+get_resource_group_domain_sid(uint32_t&nbsp;ResourceGroupDomainSid){&lt;br&gt;+&lt;br&gt;+&nbsp; &nbsp; if&nbsp;(ResourceGroupDomainSid!=&nbsp;0)&nbsp;{&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; uint8_t&nbsp;rev;&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; uint64_t&nbsp;idauth;&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; char&nbsp;dli[256];&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; char&nbsp;*ag;&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; int&nbsp;l;&lt;br&gt;+&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; align(4);&lt;br&gt;+&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; uint32_t&nbsp;nauth&nbsp;=&nbsp;get4byt();&lt;br&gt;+&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; size_t&nbsp;length&nbsp;=&nbsp;1+1+6+nauth*4;&lt;br&gt;+&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ag=(char&nbsp;*)xcalloc((length+1)*sizeof(char),1);&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp;the&nbsp;first&nbsp;byte&nbsp;is&nbsp;a&nbsp;length&nbsp;of&nbsp;the&nbsp;SID&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ag[0]&nbsp;=&nbsp;(char)&nbsp;length;&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; memcpy((void&nbsp;*)&amp;ag[1],(const&nbsp;void*)&amp;p[bpos],1);&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; memcpy((void&nbsp;*)&amp;ag[2],(const&nbsp;void*)&amp;p[bpos+1],1);&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ag[2]&nbsp;=&nbsp;ag[2]+1;&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; memcpy((void&nbsp;*)&amp;ag[3],(const&nbsp;void*)&amp;p[bpos+2],6+nauth*4);&lt;br&gt;+&lt;br&gt;+&lt;br&gt;+&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; /*&nbsp;mainly&nbsp;for&nbsp;debug&nbsp;only&nbsp;*/&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; rev&nbsp;=&nbsp;get1byt();&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; bpos&nbsp;=&nbsp;bpos&nbsp;+&nbsp;1;&nbsp;/*nsub*/&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; idauth&nbsp;=&nbsp;get6byt_be();&lt;br&gt;+&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; snprintf(dli,sizeof(dli),&quot;S-%d-%lu&quot;,rev,(long&nbsp;unsigned&nbsp;int)idauth);&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; for&nbsp;(&nbsp;l=0;&nbsp;l&lt;(int)nauth;&nbsp;l++&nbsp;)&nbsp;{&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; uint32_t&nbsp;sauth;&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sauth&nbsp;=&nbsp;get4byt();&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; snprintf((char&nbsp;*)&amp;dli[strlen(dli)],sizeof(dli)-strlen(dli),&quot;-%u&quot;,sauth);&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; }&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; debug((char&nbsp;*)&nbsp;&quot;%s|&nbsp;%s:&nbsp;INFO:&nbsp;Got&nbsp;ResourceGroupDomainSid&nbsp;%s\n&quot;,&nbsp;LogTime(),&nbsp;PROGRAM,&nbsp;dli);&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; return&nbsp;ag;&lt;br&gt;+&nbsp; &nbsp; }&lt;br&gt;+&lt;br&gt;+&nbsp; &nbsp; return&nbsp;NULL;&lt;br&gt;+}&lt;br&gt;+&lt;br&gt;+char&nbsp;*&lt;br&gt;+get_resource_groups(char&nbsp;*ad_groups,&nbsp;char&nbsp;*resource_group_domain_sid,&nbsp;uint32_t&nbsp;ResourceGroupIds,&nbsp;uint32_t&nbsp;ResourceGroupCount){&lt;br&gt;+&nbsp; &nbsp; size_t&nbsp;group_domain_sid_len&nbsp;=&nbsp;resource_group_domain_sid[0];&lt;br&gt;+&nbsp; &nbsp; char&nbsp;*ag;&lt;br&gt;+&nbsp; &nbsp; size_t&nbsp;length;&lt;br&gt;+&lt;br&gt;+&nbsp; &nbsp; resource_group_domain_sid++;&nbsp;//now&nbsp;it&nbsp;points&nbsp;to&nbsp;the&nbsp;actual&nbsp;data&lt;br&gt;+&lt;br&gt;+&lt;br&gt;+&nbsp; &nbsp; if&nbsp;(ResourceGroupIds!=&nbsp;0)&nbsp;{&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; uint32_t&nbsp;ngroup;&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; int&nbsp;l;&lt;br&gt;+&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; align(4);&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; ngroup&nbsp;=&nbsp;get4byt();&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;(&nbsp;ngroup&nbsp;!=&nbsp;ResourceGroupCount)&nbsp;{&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; debug((char&nbsp;*)&nbsp;&quot;%s|&nbsp;%s:&nbsp;ERROR:&nbsp;Group&nbsp;encoding&nbsp;error&nbsp;=&gt;&nbsp;ResourceGroupCount:&nbsp;%d&nbsp;Array&nbsp;size:&nbsp;%d\n&quot;,&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LogTime(),&nbsp;PROGRAM,&nbsp;ResourceGroupCount,&nbsp;ngroup);&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return&nbsp;NULL;&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; }&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; debug((char&nbsp;*)&nbsp;&quot;%s|&nbsp;%s:&nbsp;INFO:&nbsp;Found&nbsp;%d&nbsp;Resource&nbsp;Group&nbsp;rids\n&quot;,&nbsp;LogTime(),&nbsp;PROGRAM,&nbsp;ResourceGroupCount);&lt;br&gt;+&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; //make&nbsp;a&nbsp;group&nbsp;template&nbsp;which&nbsp;begins&nbsp;with&nbsp;the&nbsp;ResourceGroupDomainID&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; length&nbsp;=&nbsp;group_domain_sid_len+4;&nbsp; //+4&nbsp;for&nbsp;a&nbsp;rid&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; ag=(char&nbsp;*)xcalloc(length*sizeof(char),1);&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; memcpy((void&nbsp;*)ag,(const&nbsp;void*)resource_group_domain_sid,&nbsp;group_domain_sid_len);&lt;br&gt;+&lt;br&gt;+&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; for&nbsp;(&nbsp;l=0;&nbsp;l&lt;(int)ResourceGroupCount;&nbsp;l++)&nbsp;{&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; uint32_t&nbsp;sauth;&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; memcpy((void&nbsp;*)&amp;ag[group_domain_sid_len],(const&nbsp;void*)&amp;p[bpos],4);&lt;br&gt;+&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;(!pstrcat(ad_groups,&quot;&nbsp;group=&quot;))&nbsp;{&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; debug((char&nbsp;*)&nbsp;&quot;%s|&nbsp;%s:&nbsp;WARN:&nbsp;Too&nbsp;many&nbsp;groups&nbsp;!&nbsp;size&nbsp;&gt;&nbsp;%d&nbsp;:&nbsp;%s\n&quot;,&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LogTime(),&nbsp;PROGRAM,&nbsp;MAX_PAC_GROUP_SIZE,&nbsp;ad_groups);&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;xfree(ag);&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return&nbsp;NULL;&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&lt;br&gt;+&lt;br&gt;+&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; struct&nbsp;base64_encode_ctx&nbsp;ctx;&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; base64_encode_init(&amp;ctx);&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const&nbsp;uint32_t&nbsp;expectedSz&nbsp;=&nbsp;base64_encode_len(length)&nbsp;+1&nbsp;/*&nbsp;terminator&nbsp;*/;&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char&nbsp;*b64buf&nbsp;=&nbsp;static_cast&lt;char&nbsp;*&gt;(xcalloc(expectedSz,&nbsp;1));&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; size_t&nbsp;blen&nbsp;=&nbsp;base64_encode_update(&amp;ctx,&nbsp;b64buf,&nbsp;length,&nbsp;reinterpret_cast&lt;uint8_t*&gt;(ag));&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; blen&nbsp;+=&nbsp;base64_encode_final(&amp;ctx,&nbsp;b64buf+blen);&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; b64buf[expectedSz-1]&nbsp;=&nbsp;&#39;\0&#39;;&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;(!pstrcat(ad_groups,&nbsp;reinterpret_cast&lt;char*&gt;(b64buf)))&nbsp;{&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; debug((char&nbsp;*)&nbsp;&quot;%s|&nbsp;%s:&nbsp;WARN:&nbsp;Too&nbsp;many&nbsp;groups&nbsp;!&nbsp;size&nbsp;&gt;&nbsp;%d&nbsp;:&nbsp;%s\n&quot;,&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LogTime(),&nbsp;PROGRAM,&nbsp;MAX_PAC_GROUP_SIZE,&nbsp;ad_groups);&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;xfree(ag);&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;xfree(b64buf);&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return&nbsp;NULL;&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; xfree(b64buf);&lt;br&gt;+&lt;br&gt;+&lt;br&gt;+&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sauth&nbsp;=&nbsp;get4byt();&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; debug((char&nbsp;*)&nbsp;&quot;%s|&nbsp;%s:&nbsp;Info:&nbsp;Got&nbsp;rid:&nbsp;%u\n&quot;,&nbsp;LogTime(),&nbsp;PROGRAM,&nbsp;sauth);&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /*&nbsp;attribute&nbsp;*/&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bpos&nbsp;=&nbsp;bpos+4;&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; }&lt;br&gt;+&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; xfree(ag);&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp;return&nbsp;ad_groups;&lt;br&gt;+&nbsp; &nbsp; }&lt;br&gt;+&lt;br&gt;+&nbsp; &nbsp; return&nbsp;NULL;&lt;br&gt;+}&lt;br&gt;+&lt;br&gt;+&lt;br&gt; char&nbsp;*&lt;br&gt; get_ad_groups(char&nbsp;*ad_groups,&nbsp;krb5_context&nbsp;context,&nbsp;krb5_pac&nbsp;pac)&lt;br&gt; {&lt;br&gt;@@&nbsp;-379,14&nbsp;+496,14&nbsp;@@&lt;br&gt; &nbsp; &nbsp; uint32_t&nbsp;LogonDomainId=0;&lt;br&gt; &nbsp; &nbsp; uint32_t&nbsp;SidCount=0;&lt;br&gt; &nbsp; &nbsp; uint32_t&nbsp;ExtraSids=0;&lt;br&gt;-&nbsp; &nbsp; /*&lt;br&gt; &nbsp; &nbsp; uint32_t&nbsp;ResourceGroupDomainSid=0;&lt;br&gt; &nbsp; &nbsp; uint32_t&nbsp;ResourceGroupCount=0;&lt;br&gt; &nbsp; &nbsp; uint32_t&nbsp;ResourceGroupIds=0;&lt;br&gt;-&nbsp; &nbsp; */&lt;br&gt; &nbsp; &nbsp; char&nbsp;**Rids=NULL;&lt;br&gt; &nbsp; &nbsp; int&nbsp;l=0;&lt;br&gt;&lt;br&gt;+&nbsp; &nbsp; char&nbsp;*&nbsp;resource_group_domain_sid=NULL;&lt;br&gt;+&lt;br&gt; &nbsp; &nbsp; if&nbsp;(!ad_groups)&nbsp;{&lt;br&gt; &nbsp; &nbsp; &nbsp; &nbsp; debug((char&nbsp;*)&nbsp;&quot;%s|&nbsp;%s:&nbsp;ERR:&nbsp;No&nbsp;space&nbsp;to&nbsp;store&nbsp;groups\n&quot;,&lt;br&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LogTime(),&nbsp;PROGRAM);&lt;br&gt;@@&nbsp;-454,11&nbsp;+571,11&nbsp;@@&lt;br&gt; &nbsp; &nbsp; bpos&nbsp;=&nbsp;bpos+40;&lt;br&gt; &nbsp; &nbsp; SidCount&nbsp;=&nbsp;get4byt();&lt;br&gt; &nbsp; &nbsp; ExtraSids&nbsp;=&nbsp;get4byt();&lt;br&gt;-&nbsp; &nbsp; /*&nbsp;4&nbsp;bytes&nbsp;ResourceGroupDomainSid&lt;br&gt;-&nbsp; &nbsp; &nbsp;*&nbsp;4&nbsp;bytes&nbsp;ResourceGroupCount&lt;br&gt;-&nbsp; &nbsp; &nbsp;*&nbsp;4&nbsp;bytes&nbsp;ResourceGroupIds&lt;br&gt;-&nbsp; &nbsp; &nbsp;*/&lt;br&gt;-&nbsp; &nbsp; bpos&nbsp;=&nbsp;bpos+12;&lt;br&gt;+&lt;br&gt;+&nbsp; &nbsp; ResourceGroupDomainSid&nbsp;=&nbsp;get4byt();&lt;br&gt;+&nbsp; &nbsp; ResourceGroupCount&nbsp;=&nbsp;get4byt();&lt;br&gt;+&nbsp; &nbsp; ResourceGroupIds&nbsp;=&nbsp;get4byt();&lt;br&gt;+&lt;br&gt; &nbsp; &nbsp; /*&lt;br&gt; &nbsp; &nbsp; &nbsp;*&nbsp;Read&nbsp;all&nbsp;data&nbsp;from&nbsp;structure&nbsp;=&gt;&nbsp;Now&nbsp;check&nbsp;pointers&lt;br&gt; &nbsp; &nbsp; &nbsp;*/&lt;br&gt;@@&nbsp;-483,7&nbsp;+600,15&nbsp;@@&lt;br&gt; &nbsp; &nbsp; if&nbsp;((ad_groups&nbsp;=&nbsp;getextrasids(ad_groups,ExtraSids,SidCount))==NULL)&lt;br&gt; &nbsp; &nbsp; &nbsp; &nbsp; goto&nbsp;k5clean;&lt;br&gt;&lt;br&gt;+&nbsp; &nbsp; resource_group_domain_sid&nbsp;=&nbsp;get_resource_group_domain_sid(ResourceGroupDomainSid);&lt;br&gt;+&nbsp; &nbsp; if(resource_group_domain_sid&nbsp;&amp;&amp;&nbsp;ResourceGroupCount&nbsp;&amp;&amp;&nbsp;ResourceGroupIds){&lt;br&gt;+&nbsp; &nbsp; &nbsp; &nbsp; get_resource_groups(ad_groups,&nbsp;resource_group_domain_sid,&nbsp;ResourceGroupIds,&nbsp;ResourceGroupCount);&lt;br&gt;+&nbsp; &nbsp; }&lt;br&gt;+&lt;br&gt; &nbsp; &nbsp; debug((char&nbsp;*)&nbsp;&quot;%s|&nbsp;%s:&nbsp;INFO:&nbsp;Read&nbsp;%d&nbsp;of&nbsp;%d&nbsp;bytes&nbsp;\n&quot;,&nbsp;LogTime(),&nbsp;PROGRAM,&nbsp;bpos,&nbsp;(int)ad_data-&gt;length);&lt;br&gt;+&lt;br&gt;+&nbsp; &nbsp; if(resource_group_domain_sid)&nbsp;xfree(resource_group_domain_sid);&lt;br&gt;+&lt;br&gt; &nbsp; &nbsp; if&nbsp;(Rids)&nbsp;{&lt;br&gt; &nbsp; &nbsp; &nbsp; &nbsp; for&nbsp;(&nbsp;l=0;&nbsp;l&lt;(int)GroupCount;&nbsp;l++)&nbsp;{&lt;br&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; xfree(Rids[l]);&lt;br&gt;@@&nbsp;-493,6&nbsp;+618,8&nbsp;@@&lt;br&gt; &nbsp; &nbsp; krb5_free_data(context,&nbsp;ad_data);&lt;br&gt; &nbsp; &nbsp; return&nbsp;ad_groups;&lt;br&gt; k5clean:&lt;br&gt;+&nbsp; &nbsp; if(resource_group_domain_sid)&nbsp;xfree(resource_group_domain_sid);&lt;br&gt;+&lt;br&gt; &nbsp; &nbsp; if&nbsp;(Rids)&nbsp;{&lt;br&gt; &nbsp; &nbsp; &nbsp; &nbsp; for&nbsp;(&nbsp;l=0;&nbsp;l&lt;(int)GroupCount;&nbsp;l++)&nbsp;{&lt;br&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; xfree(Rids[l]);&lt;br&gt;&lt;/div&gt;&lt;/div&gt;<br>

</tt>
